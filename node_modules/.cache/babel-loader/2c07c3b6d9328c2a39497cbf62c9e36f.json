{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keccak512 = exports.keccak384 = exports.keccak256 = exports.keccak224 = void 0;\n\nconst sha3_1 = require(\"@noble/hashes/sha3\");\n\nconst utils_1 = require(\"./utils\");\n\nexports.keccak224 = (0, utils_1.wrapHash)(sha3_1.keccak_224);\n\nexports.keccak256 = (() => {\n  const k = (0, utils_1.wrapHash)(sha3_1.keccak_256);\n  k.create = sha3_1.keccak_256.create;\n  return k;\n})();\n\nexports.keccak384 = (0, utils_1.wrapHash)(sha3_1.keccak_384);\nexports.keccak512 = (0, utils_1.wrapHash)(sha3_1.keccak_512);","map":{"version":3,"sources":["/Users/dev3rs/provipdiploma/node_modules/ethereum-cryptography/keccak.js"],"names":["Object","defineProperty","exports","value","keccak512","keccak384","keccak256","keccak224","sha3_1","require","utils_1","wrapHash","keccak_224","k","keccak_256","create","keccak_384","keccak_512"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,SAAR,GAAoBF,OAAO,CAACG,SAAR,GAAoBH,OAAO,CAACI,SAAR,GAAoBJ,OAAO,CAACK,SAAR,GAAoB,KAAK,CAArF;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,oBAAD,CAAtB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACAP,OAAO,CAACK,SAAR,GAAoB,CAAC,GAAGG,OAAO,CAACC,QAAZ,EAAsBH,MAAM,CAACI,UAA7B,CAApB;;AACAV,OAAO,CAACI,SAAR,GAAoB,CAAC,MAAM;AACvB,QAAMO,CAAC,GAAG,CAAC,GAAGH,OAAO,CAACC,QAAZ,EAAsBH,MAAM,CAACM,UAA7B,CAAV;AACAD,EAAAA,CAAC,CAACE,MAAF,GAAWP,MAAM,CAACM,UAAP,CAAkBC,MAA7B;AACA,SAAOF,CAAP;AACH,CAJmB,GAApB;;AAKAX,OAAO,CAACG,SAAR,GAAoB,CAAC,GAAGK,OAAO,CAACC,QAAZ,EAAsBH,MAAM,CAACQ,UAA7B,CAApB;AACAd,OAAO,CAACE,SAAR,GAAoB,CAAC,GAAGM,OAAO,CAACC,QAAZ,EAAsBH,MAAM,CAACS,UAA7B,CAApB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak512 = exports.keccak384 = exports.keccak256 = exports.keccak224 = void 0;\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst utils_1 = require(\"./utils\");\nexports.keccak224 = (0, utils_1.wrapHash)(sha3_1.keccak_224);\nexports.keccak256 = (() => {\n    const k = (0, utils_1.wrapHash)(sha3_1.keccak_256);\n    k.create = sha3_1.keccak_256.create;\n    return k;\n})();\nexports.keccak384 = (0, utils_1.wrapHash)(sha3_1.keccak_384);\nexports.keccak512 = (0, utils_1.wrapHash)(sha3_1.keccak_512);\n"]},"metadata":{},"sourceType":"script"}