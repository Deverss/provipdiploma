{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar alloc = require('./alloc.js');\n\nvar asUint8array = require('./util/as-uint8array.js');\n\nfunction xor(a, b) {\n  if (a.length !== b.length) {\n    throw new Error('Inputs should have the same length');\n  }\n\n  const result = alloc.allocUnsafe(a.length);\n\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i];\n  }\n\n  return asUint8array.asUint8Array(result);\n}\n\nexports.xor = xor;","map":{"version":3,"sources":["/Users/dev3rs/provipdiploma/node_modules/uint8arrays/cjs/src/xor.js"],"names":["Object","defineProperty","exports","value","alloc","require","asUint8array","xor","a","b","length","Error","result","allocUnsafe","i","asUint8Array"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAnB;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,yBAAD,CAA1B;;AAEA,SAASE,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;AACjB,MAAID,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAAnB,EAA2B;AACzB,UAAM,IAAIC,KAAJ,CAAU,oCAAV,CAAN;AACD;;AACD,QAAMC,MAAM,GAAGR,KAAK,CAACS,WAAN,CAAkBL,CAAC,CAACE,MAApB,CAAf;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,CAAC,CAACE,MAAtB,EAA8BI,CAAC,EAA/B,EAAmC;AACjCF,IAAAA,MAAM,CAACE,CAAD,CAAN,GAAYN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAApB;AACD;;AACD,SAAOR,YAAY,CAACS,YAAb,CAA0BH,MAA1B,CAAP;AACD;;AAEDV,OAAO,CAACK,GAAR,GAAcA,GAAd","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar alloc = require('./alloc.js');\nvar asUint8array = require('./util/as-uint8array.js');\n\nfunction xor(a, b) {\n  if (a.length !== b.length) {\n    throw new Error('Inputs should have the same length');\n  }\n  const result = alloc.allocUnsafe(a.length);\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i];\n  }\n  return asUint8array.asUint8Array(result);\n}\n\nexports.xor = xor;\n"]},"metadata":{},"sourceType":"script"}