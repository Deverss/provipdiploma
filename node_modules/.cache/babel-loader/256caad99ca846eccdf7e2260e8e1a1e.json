{"ast":null,"code":"\"use strict\"; // Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BrowserRandomSource = void 0;\nconst QUOTA = 65536;\n\nclass BrowserRandomSource {\n  constructor() {\n    this.isAvailable = false;\n    this.isInstantiated = false;\n    const browserCrypto = typeof self !== 'undefined' ? self.crypto || self.msCrypto : // IE11 has msCrypto\n    null;\n\n    if (browserCrypto && browserCrypto.getRandomValues !== undefined) {\n      this._crypto = browserCrypto;\n      this.isAvailable = true;\n      this.isInstantiated = true;\n    }\n  }\n\n  randomBytes(length) {\n    if (!this.isAvailable || !this._crypto) {\n      throw new Error(\"Browser random byte generator is not available.\");\n    }\n\n    const out = new Uint8Array(length);\n\n    for (let i = 0; i < out.length; i += QUOTA) {\n      this._crypto.getRandomValues(out.subarray(i, i + Math.min(out.length - i, QUOTA)));\n    }\n\n    return out;\n  }\n\n}\n\nexports.BrowserRandomSource = BrowserRandomSource;","map":{"version":3,"sources":["../../source/browser.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;AAIA,MAAM,KAAK,GAAG,KAAd;;AAEA,MAAa,mBAAb,CAAgC;AAM5B,EAAA,WAAA,GAAA;AALA,SAAA,WAAA,GAAc,KAAd;AACA,SAAA,cAAA,GAAiB,KAAjB;AAKI,UAAM,aAAa,GAAG,OAAO,IAAP,KAAgB,WAAhB,GACf,IAAI,CAAC,MAAL,IAAgB,IAA2B,CAAC,QAD7B,GACuC;AACvD,QAFN;;AAIA,QAAI,aAAa,IAAI,aAAa,CAAC,eAAd,KAAkC,SAAvD,EAAkE;AAC9D,WAAK,OAAL,GAAe,aAAf;AACA,WAAK,WAAL,GAAmB,IAAnB;AACA,WAAK,cAAL,GAAsB,IAAtB;AACH;AACJ;;AAED,EAAA,WAAW,CAAC,MAAD,EAAe;AACtB,QAAI,CAAC,KAAK,WAAN,IAAqB,CAAC,KAAK,OAA/B,EAAwC;AACpC,YAAM,IAAI,KAAJ,CAAU,iDAAV,CAAN;AACH;;AACD,UAAM,GAAG,GAAG,IAAI,UAAJ,CAAe,MAAf,CAAZ;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAAG,CAAC,MAAxB,EAAgC,CAAC,IAAI,KAArC,EAA4C;AACxC,WAAK,OAAL,CAAa,eAAb,CAA6B,GAAG,CAAC,QAAJ,CAAa,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,GAAL,CAAS,GAAG,CAAC,MAAJ,GAAa,CAAtB,EAAyB,KAAzB,CAApB,CAA7B;AACH;;AACD,WAAO,GAAP;AACH;;AA3B2B;;AAAhC,OAAA,CAAA,mBAAA,GAAA,mBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserRandomSource = void 0;\nconst QUOTA = 65536;\nclass BrowserRandomSource {\n    constructor() {\n        this.isAvailable = false;\n        this.isInstantiated = false;\n        const browserCrypto = typeof self !== 'undefined'\n            ? (self.crypto || self.msCrypto) // IE11 has msCrypto\n            : null;\n        if (browserCrypto && browserCrypto.getRandomValues !== undefined) {\n            this._crypto = browserCrypto;\n            this.isAvailable = true;\n            this.isInstantiated = true;\n        }\n    }\n    randomBytes(length) {\n        if (!this.isAvailable || !this._crypto) {\n            throw new Error(\"Browser random byte generator is not available.\");\n        }\n        const out = new Uint8Array(length);\n        for (let i = 0; i < out.length; i += QUOTA) {\n            this._crypto.getRandomValues(out.subarray(i, i + Math.min(out.length - i, QUOTA)));\n        }\n        return out;\n    }\n}\nexports.BrowserRandomSource = BrowserRandomSource;\n//# sourceMappingURL=browser.js.map"]},"metadata":{},"sourceType":"script"}