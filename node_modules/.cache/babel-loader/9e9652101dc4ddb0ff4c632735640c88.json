{"ast":null,"code":"import _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { get, setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, BasePostMessageStream, setupMultiplex } from '@toruslabs/openlogin-jrpc';\nimport deepmerge from 'lodash.merge';\nimport { ObservableStore, storeAsStream } from '@metamask/obs-store';\nimport { ethErrors, EthereumRpcError } from 'eth-rpc-errors';\nimport dequal from 'fast-deep-equal';\nimport { duplex } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport createHash from 'create-hash';\nimport { EventEmitter } from 'events';\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\"\n};\nconst WALLET_VERIFIERS = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  EMAIL_PASSWORDLESS: \"torus-auth0-email-passwordless\"\n};\nconst WALLET_OPENLOGIN_VERIFIER_MAP = {\n  [WALLET_VERIFIERS.GOOGLE]: \"tkey-google\",\n  [WALLET_VERIFIERS.FACEBOOK]: \"tkey-facebook\",\n  [WALLET_VERIFIERS.TWITCH]: \"tkey-twitch\",\n  [WALLET_VERIFIERS.REDDIT]: \"tkey-reddit\",\n  [WALLET_VERIFIERS.DISCORD]: \"tkey-discord\",\n  [WALLET_VERIFIERS.EMAIL_PASSWORDLESS]: \"tkey-auth0-email-passwordless\"\n};\nconst PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\",\n  BANXA: \"banxa\"\n};\nconst SUPPORTED_PAYMENT_NETWORK = {\n  MAINNET: \"mainnet\",\n  MATIC: \"matic\",\n  BSC_MAINNET: \"bsc_mainnet\",\n  AVALANCHE_MAINNET: \"avalanche_mainnet\",\n  XDAI: \"xdai\"\n};\nconst TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  BINANCE: \"binance\",\n  TESTING: \"testing\",\n  LRC: \"lrc\",\n  BETA: \"beta\",\n  BNB: \"bnb\",\n  POLYGON: \"polygon\"\n};\nconst BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\n/**\n * From https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC&extraParams=YourSite\n * GET https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC\n * Then map over returned entries, picking tsym\n *\n * Last updated: Date of commit\n */\n\nconst CRYPTO_COMPARE_CURRENCIES = [\"ETH\", \"USDT\", \"USDC\", \"TUSD\", \"EOSDT\", \"USD\", \"DAI\", \"GUSD\", \"DKKT\", \"PAX\", \"ILS\", \"RUB\", \"BYN\", \"EUR\", \"GBP\", \"JPY\", \"KRW\", \"PLN\", \"MXN\", \"AUD\", \"BRL\", \"CAD\", \"CHF\", \"KPW\", \"LAK\", \"LBP\", \"LKR\", \"XOF\", \"CNHT\", \"DOGE\", \"UAH\", \"TRY\", \"HKD\", \"XJP\", \"SGD\", \"USC\", \"NZD\", \"NGN\", \"RUR\", \"COP\", \"GHS\", \"EGP\", \"IDR\", \"BHD\", \"CRC\", \"PEN\", \"AED\", \"DOP\", \"PKR\", \"HUF\", \"VND\", \"XAR\", \"LTC\", \"RON\", \"OMR\", \"MYR\", \"DKK\", \"UGX\", \"ZMW\", \"SAR\", \"SEK\", \"GEL\", \"RWF\", \"IRR\", \"TZS\", \"CNY\", \"VEF\", \"BDT\", \"HRK\", \"CLP\", \"THB\", \"XAF\", \"ARS\", \"UYU\", \"SZL\", \"KZT\", \"NOK\", \"KES\", \"PAB\", \"INR\", \"CZK\", \"MAD\", \"TWD\", \"PHP\", \"ZAR\", \"BOB\", \"CDF\", \"DASH\", \"VES\", \"ISK\", \"MWK\", \"BAM\", \"TTD\", \"XRP\", \"JOD\", \"RSD\", \"HNL\", \"BGN\", \"GTQ\", \"BWP\", \"XMR\", \"MMK\", \"QAR\", \"AOA\", \"KWD\", \"MUR\", \"WUSD\", \"WEUR\", \"WAVES\", \"WTRY\", \"LRD\", \"LSL\", \"LYD\", \"AWG\", \"MDL\", \"BTO\", \"EURS\", \"CHFT\", \"MKD\", \"MNT\", \"MOP\", \"MRO\", \"MVR\", \"VOLLAR\", \"CKUSD\", \"KHR\", \"VUV\", \"BITCNY\", \"QC\", \"BBD\", \"NAD\", \"NPR\", \"PGK\", \"PYG\", \"BIF\", \"BMD\", \"BND\", \"XLM\", \"BNB\", \"SCR\", \"BAT\", \"CRO\", \"HT\", \"KCS\", \"LEO\", \"LINK\", \"MKR\", \"NPXS\", \"OMG\", \"REP\", \"ZB\", \"ZIL\", \"ZRX\", \"BCH\", \"BZD\", \"CUP\", \"CVE\", \"DJF\", \"DZD\", \"ERN\", \"ETB\", \"FJD\", \"FKP\", \"BUSD\", \"ANCT\", \"ALL\", \"AMD\", \"ANG\", \"CNYX\", \"IQD\", \"UZS\", \"TND\", \"GGP\", \"XAU\", \"KGS\", \"GIP\", \"JMD\", \"ZEC\", \"USDP\", \"BSV\", \"EMC2\", \"SNT\", \"GTO\", \"POWR\", \"EUSD\", \"EURT\", \"BCY\", \"BTS\", \"ATM\", \"BLOCKPAY\", \"ARDR\", \"AMP\", \"B2X\", \"BITGOLD\", \"BITEUR\", \"ATB\", \"BITUSD\", \"AGRS\", \"DFXT\", \"HIKEN\", \"BIX\", \"KNC\", \"EOS\", \"COB\", \"COSS\", \"BMH\", \"NANO\", \"BDG\", \"BNT\", \"XVG\", \"LKK1Y\", \"LKK\", \"USDK\", \"EURN\", \"NZDT\", \"JSE\", \"GMD\", \"GNF\", \"GYD\", \"YER\", \"XPF\", \"HTG\", \"SLL\", \"SOS\", \"WST\", \"SVC\", \"SYP\", \"NEO\", \"KMF\", \"JUMP\", \"AYA\", \"BLAST\", \"WGR\", \"BCN\", \"BTG\", \"URALS\", \"INN\", \"USDQ\", \"CNH\", \"HUSD\", \"BKRW\", \"NZDX\", \"EURX\", \"CADX\", \"USDEX\", \"JPYX\", \"AUDX\", \"VNDC\", \"EON\", \"GBPX\", \"CHFX\", \"USDJ\", \"IDRT\", \"USDS\", \"USDN\", \"BIDR\", \"IDK\", \"BSD\", \"BTN\", \"KYD\", \"NIO\", \"SBD\", \"SDG\", \"SHP\", \"TOP\", \"XCD\", \"XCHF\", \"CNYT\", \"GYEN\", \"ZUSD\", \"GOLD\", \"TRX\", \"TRYB\", \"PLATC\", \"STRAX\", \"UST\", \"GLM\", \"VAI\", \"BRZ\", \"DDRST\", \"XAUT\", \"MIM\"];\n/**\n * currencies supported by the payment provider\n * Last updated: Date of commit\n */\n\nconst PROVIDER_SUPPORTED_FIAT_CURRENCIES = {\n  // https://integrations.simplex.com/supported_currencies\n  // https://support.moonpay.com/hc/en-gb/articles/360011931457-Which-fiat-currencies-are-supported-\n  [PAYMENT_PROVIDER.MOONPAY]: [\"AUD\", \"BGN\", \"BRL\", \"CAD\", \"CHF\", \"CNY\", \"COP\", \"CZK\", \"DKK\", \"DOP\", \"EGP\", \"EUR\", \"GBP\", \"HKD\", \"HRK\", \"IDR\", \"ILS\", \"JPY\", \"JOD\", \"KES\", \"KRW\", \"KWD\", \"LKR\", \"MAD\", \"MXN\", \"MYR\", \"NGN\", \"NOK\", \"NZD\", \"OMR\", \"PEN\", \"PKR\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"TWD\", \"USD\", \"VND\", \"ZAR\"],\n\n  /**\n   * https://docs.sendwyre.com/docs/supported-currencies#fiat\n   * The ones where credit card is supported\n   */\n  [PAYMENT_PROVIDER.WYRE]: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"NZD\", \"ARS\", \"BRL\", \"CHF\", \"CLP\", \"COP\", \"CZK\", \"DKK\", \"HKD\", \"ILS\", \"INR\", \"ISK\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"PHP\", \"PLN\", \"SEK\", \"THB\", \"VND\", \"ZAR\"],\n  // https://support.ramp.network/en/articles/471-why-am-i-paying-in-usd-eur-gbp\n  [PAYMENT_PROVIDER.RAMPNETWORK]: [\"USD\", \"EUR\", \"GBP\"],\n  // From https://xanpool.com/ fiat select dropdown\n  [PAYMENT_PROVIDER.XANPOOL]: [\"SGD\", \"HKD\", \"THB\", \"PHP\", \"INR\", \"IDR\", \"MYR\", \"AUD\", \"NZD\", \"KRW\"],\n  // https://support.aax.com/en/articles/5295762-mercuryo\n  // RUB / UAH currently not supported\n  [PAYMENT_PROVIDER.MERCURYO]: [\"EUR\", \"USD\", \"GBP\", \"TRY\", \"JPY\", \"BRL\", \"NGN\", \"VND\", \"MXN\", \"KRW\"],\n\n  /**\n   * https://support.transak.com/hc/en-us/articles/360020615578-Credit-and-Debit-Card-Payments-through-Transak\n   * or\n   * https://transak.stoplight.io/docs/transak-docs/b3A6OTk1ODQ0-2-get-fiat-currencies\n   */\n  [PAYMENT_PROVIDER.TRANSAK]: [\"ARS\", \"AUD\", \"BBD\", \"BGN\", \"BMD\", \"BRL\", \"CAD\", \"CHF\", \"CLP\", \"CRC\", \"CZK\", \"DKK\", \"DOP\", \"EUR\", \"FJD\", \"FKP\", \"GBP\", \"GIP\", \"HRK\", \"HUF\", \"IDR\", \"ILS\", \"ISK\", \"JMD\", \"JPY\", \"KES\", \"KRW\", \"MDL\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PEN\", \"PHP\", \"PLN\", \"PYG\", \"RON\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"TZS\", \"USD\", \"ZAR\"],\n  [PAYMENT_PROVIDER.BANXA]: [\"EUR\", \"GBP\", \"USD\"]\n};\nconst cryptoCompareCurrenciesSet = new Set(CRYPTO_COMPARE_CURRENCIES);\n/**\n * Fiat currencies that we support\n */\n\nfunction supportedFiatCurrencies(provider) {\n  const providerSupportedFiatCurrencies = PROVIDER_SUPPORTED_FIAT_CURRENCIES[provider];\n  return providerSupportedFiatCurrencies.filter(currency => cryptoCompareCurrenciesSet.has(currency));\n}\n\nconst paymentProviders$1 = {\n  [PAYMENT_PROVIDER.MOONPAY]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"4.5% or 5 USD\",\n    line3: \"2,000€/day, 10,000€/mo\",\n    supportPage: \"https://help.moonpay.io/en/\",\n    minOrderValue: 24.99,\n    maxOrderValue: 50000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MOONPAY),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"aave\",\n        display: \"AAVE\"\n      }, {\n        value: \"bat\",\n        display: \"BAT\"\n      }, {\n        value: \"dai\",\n        display: \"DAI\"\n      }, {\n        value: \"eth\",\n        display: \"ETH\"\n      }, {\n        value: \"mkr\",\n        display: \"MKR\"\n      }, {\n        value: \"matic\",\n        display: \"MATIC\"\n      }, {\n        value: \"usdt\",\n        display: \"USDT\"\n      }, {\n        value: \"usdc\",\n        display: \"USDC\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"eth_polygon\",\n        display: \"ETH\"\n      }, {\n        value: \"matic_polygon\",\n        display: \"MATIC\"\n      }, {\n        value: \"usdc_polygon\",\n        display: \"USDC\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"bnb_bsc\",\n        display: \"BNB\"\n      }, {\n        value: \"busd_bsc\",\n        display: \"BUSD\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"avax_cchain\",\n        display: \"AVAX\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.WYRE]: {\n    line1: \"Apple Pay/ Debit/ Credit Card\",\n    line2: \"4.9% + 30¢ or 5 USD\",\n    line3: \"$250/day\",\n    supportPage: \"https://support.sendwyre.com/en/\",\n    minOrderValue: 5,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.WYRE),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"MKR\",\n        display: \"MKR\"\n      }, {\n        value: \"UNI\",\n        display: \"UNI\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"MUSDC\",\n        display: \"USDC\"\n      }],\n      // AVAXC? or AVAX?\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAXC\",\n        display: \"AVAXC\"\n      }]\n    },\n    includeFees: false,\n    api: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.RAMPNETWORK]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://instant.ramp.network/\",\n    minOrderValue: 50,\n    maxOrderValue: 20000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.RAMPNETWORK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"MATIC_DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"MATIC_MATIC\",\n        display: \"MATIC\"\n      }, {\n        value: \"MATIC_USDC\",\n        display: \"USDC\"\n      }],\n      // what about AVAXC?\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAX\",\n        display: \"AVAX\"\n      }] // Temporary unavailable\n      // [SUPPORTED_PAYMENT_NETWORK.XDAI]: [{ value: 'XDAI_XDAI', display: 'XDAI' }],\n\n    },\n    includeFees: true,\n    api: true,\n    receiveHint: \"walletTopUp.receiveHintRamp\",\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.XANPOOL]: {\n    line1: \"PayNow/ InstaPay/ FPS/ GoJekPay/ UPI/ PromptPay/ <br>ViettelPay/ DuitNow\",\n    line2: \"2.5% buying, 3% selling\",\n    line3: \"$2,500 / day\",\n    supportPage: \"mailto:support@xanpool.com\",\n    minOrderValue: 100,\n    maxOrderValue: 2500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.XANPOOL),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    sell: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.MERCURYO]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"3.95% or 4 USD\",\n    line3: \"10,000€/day, 25,000€/mo\",\n    supportPage: \"mailto:support@mercuryo.io\",\n    minOrderValue: 30,\n    maxOrderValue: 5000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MERCURYO),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"BNB\",\n        display: \"BNB\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }, {\n        value: \"1INCH\",\n        display: \"1INCH\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.TRANSAK]: {\n    line1: \"Apple & Google Pay / Credit/Debit Card<br/>Bangkok Bank Mobile & iPay<br/>Bank Transfer (sepa/gbp) / SCB Mobile & Easy\",\n    line2: \"0.99% - 5.5% or 5 USD\",\n    line3: \"$5,000/day, $28,000/mo\",\n    supportPage: \"https://support.transak.com/hc/en-US\",\n    minOrderValue: 30,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.TRANSAK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"MATIC\",\n        display: \"MATIC\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }, {\n        value: \"WETH\",\n        display: \"WETH\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"BNB\",\n        display: \"BNB\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAX\",\n        display: \"AVAX\"\n      }]\n    },\n    includeFees: true,\n    enforceMax: true\n  },\n  [PAYMENT_PROVIDER.BANXA]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://support.banxa.com\",\n    minOrderValue: 20,\n    maxOrderValue: 15000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.BANXA),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }, {\n        value: \"LINK\",\n        display: \"LINK\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"CHZ\",\n        display: \"CHZ\"\n      }, {\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"MANA\",\n        display: \"MANA\"\n      }, {\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"COMP\",\n        display: \"COMP\"\n      }, {\n        value: \"ENJ\",\n        display: \"ENJ\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"MATIC\",\n        display: \"MATIC\"\n      }] // [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{ value: \"BNB\", display: \"BNB\" }],\n\n    },\n    includeFees: true,\n    enforceMax: true\n  }\n};\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: Object.values(WALLET_VERIFIERS),\n  paymentProviders: paymentProviders$1,\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKeyPrefix: `torus-`\n};\n\nconst runOnLoad = fn => new Promise((resolve, reject) => {\n  if (window.document.body != null) {\n    Promise.resolve(fn()).then(resolve).catch(reject);\n  } else {\n    window.document.addEventListener(\"DOMContentLoaded\", () => {\n      Promise.resolve(fn()).then(resolve).catch(reject);\n    });\n  }\n});\n\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\n\nconst handleEvent = function (handle, eventName, handler) {\n  for (var _len = arguments.length, handlerArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    handlerArgs[_key - 3] = arguments[_key];\n  }\n\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n\n  handle.addEventListener(eventName, handlerWrapper);\n};\n\nconst handleStream = (handle, eventName, handler) => {\n  const handlerWrapper = chunk => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n\n  handle.on(eventName, handlerWrapper);\n};\n\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\n\nvar log = loglevel.getLogger(\"torus-embed\");\nvar messages = {\n  errors: {\n    disconnected: () => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: () => \"Torus: Disconnected from iframe. Page reload required.\",\n    sendSiteMetadata: () => \"Torus: Failed to send site metadata. This is an internal error, please report this bug.\",\n    unsupportedSync: method => `Torus: The Torus Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: () => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners, shouldSendMetadata) => `Invalid options. Received: { maxEventListeners: ${maxEventListeners}, shouldSendMetadata: ${shouldSendMetadata} }`,\n    invalidRequestArgs: () => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: () => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: () => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: () => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: method => `'args.logger' must include required method '${method}'.`\n  },\n  info: {\n    connected: chainId => `Torus: Connected to chain with ID \"${chainId}\".`\n  },\n  warnings: {\n    // deprecated methods\n    enableDeprecation: 'Torus: \"\"ethereum.enable()\" is deprecated and may be removed in the future. ' + 'Please use \"ethereum.send(\"eth_requestAccounts\")\" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',\n    sendDeprecation: 'Torus: \"ethereum.send(...)\" is deprecated and may be removed in the future.' + ' Please use \"ethereum.sendAsync(...)\" or \"ethereum.request(...)\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    events: {\n      close: 'Torus: The event \"close\" is deprecated and may be removed in the future. Please use \"disconnect\" instead.' + \"\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193\",\n      data: 'Torus: The event \"data\" is deprecated and will be removed in the future.' + 'Use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message',\n      networkChanged: 'Torus: The event \"networkChanged\" is deprecated and may be removed in the future.' + ' Please use \"chainChanged\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n      notification: 'Torus: The event \"notification\" is deprecated and may be removed in the future. ' + 'Please use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193'\n    },\n    publicConfigStore: 'Torus: The property \"publicConfigStore\" is deprecated and WILL be removed in the future.'\n  }\n};\nconst {\n  paymentProviders\n} = configuration;\n\nconst validatePaymentProvider = (provider, params) => {\n  const errors = {};\n\n  if (!provider) {\n    return {\n      errors,\n      isValid: true\n    };\n  }\n\n  if (provider && !paymentProviders[provider]) {\n    errors.provider = \"Invalid Provider\";\n    return {\n      errors,\n      isValid: Object.keys(errors).length === 0\n    };\n  }\n\n  const selectedProvider = paymentProviders[provider];\n  const selectedParams = params || {}; // set default values\n  // if (!selectedParams.selectedCurrency) [selectedParams.selectedCurrency] = selectedProvider.validCurrencies\n  // if (!selectedParams.fiatValue) selectedParams.fiatValue = selectedProvider.minOrderValue\n  // if (!selectedParams.selectedCryptoCurrency) [selectedParams.selectedCryptoCurrency] = selectedProvider.validCryptoCurrencies\n  // validations\n\n  if (selectedParams.fiatValue) {\n    const requestedOrderAmount = +parseFloat(selectedParams.fiatValue.toString()) || 0;\n    if (requestedOrderAmount < selectedProvider.minOrderValue) errors.fiatValue = \"Requested amount is lower than supported\";\n    if (requestedOrderAmount > selectedProvider.maxOrderValue && selectedProvider.enforceMax) errors.fiatValue = \"Requested amount is higher than supported\";\n  }\n\n  if (selectedParams.selectedCurrency && !selectedProvider.validCurrencies.includes(selectedParams.selectedCurrency)) {\n    errors.selectedCurrency = \"Unsupported currency\";\n  }\n\n  if (selectedParams.selectedCryptoCurrency) {\n    const validCryptoCurrenciesByChain = Object.values(selectedProvider.validCryptoCurrenciesByChain).flat().map(currency => currency.value);\n    const finalCryptoCurrency = provider === PAYMENT_PROVIDER.MOONPAY ? selectedParams.selectedCryptoCurrency.toLowerCase() : selectedParams.selectedCryptoCurrency;\n    if (validCryptoCurrenciesByChain && !validCryptoCurrenciesByChain.includes(finalCryptoCurrency)) errors.selectedCryptoCurrency = \"Unsupported cryptoCurrency\";\n  }\n\n  return {\n    errors,\n    isValid: Object.keys(errors).length === 0\n  };\n}; // utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\n\n\nfunction createErrorMiddleware() {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: req\n      });\n    }\n\n    next(done => {\n      const {\n        error\n      } = res;\n\n      if (!error) {\n        return done();\n      }\n\n      log.error(`MetaMask - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\n\n\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  let warningMsg = `MetaMask: Lost connection to \"${remoteLabel}\".`;\n\n  if (error !== null && error !== void 0 && error.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n\n  log.warn(warningMsg);\n\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\n\nconst getPreopenInstanceId = () => Math.random().toString(36).slice(2);\n\nconst getTorusUrl = async (buildEnv, integrity) => {\n  let torusUrl;\n  let logLevel; // Do not change this line\n\n  const version = \"1.41.2\";\n  let versionUsed = integrity.version || version;\n\n  try {\n    if ((buildEnv === \"binance\" || buildEnv === \"production\") && !integrity.version) {\n      let response;\n      if (!configuration.prodTorusUrl) response = await get(`${configuration.api}/latestversion?name=@toruslabs/torus-embed&version=${version}`, {}, {\n        useAPIKey: true\n      });else response = {\n        data: configuration.prodTorusUrl\n      };\n      versionUsed = response.data; // eslint-disable-next-line require-atomic-updates\n\n      configuration.prodTorusUrl = response.data;\n    }\n  } catch (error) {\n    log.error(error, \"unable to fetch latest version\");\n  }\n\n  log.info(\"version used: \", versionUsed);\n\n  switch (buildEnv) {\n    case \"binance\":\n      torusUrl = `https://binance.tor.us/v${versionUsed}`;\n      logLevel = \"info\";\n      break;\n\n    case \"testing\":\n      torusUrl = \"https://testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n\n    case \"bnb\":\n      torusUrl = \"https://bnb.tor.us\";\n      logLevel = \"error\";\n      break;\n\n    case \"polygon\":\n      torusUrl = \"https://polygon.tor.us\";\n      logLevel = \"error\";\n      break;\n\n    case \"lrc\":\n      torusUrl = \"https://lrc.tor.us\";\n      logLevel = \"debug\";\n      break;\n\n    case \"beta\":\n      torusUrl = \"https://beta.tor.us\";\n      logLevel = \"debug\";\n      break;\n\n    case \"development\":\n      torusUrl = \"http://localhost:4050\";\n      logLevel = \"debug\";\n      break;\n\n    default:\n      torusUrl = `https://app.tor.us/v${versionUsed}`;\n      logLevel = \"error\";\n      break;\n  }\n\n  return {\n    torusUrl,\n    logLevel\n  };\n};\n\nconst getUserLanguage = () => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\n\nconst EMITTED_NOTIFICATIONS = [\"eth_subscription\" // per eth-json-rpc-filters/subscriptionManager\n];\n\nconst NOOP = () => {// empty function\n};\n\nconst FEATURES_PROVIDER_CHANGE_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375\";\nconst FEATURES_DEFAULT_WALLET_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315\";\nconst FEATURES_CONFIRM_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450\";\n\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nSafeEventEmitter.defaultMaxListeners = 100; // resolve response.result, reject errors\n\nconst getRpcPromiseCallback = function (resolve, reject) {\n  let unwrapResult = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return (error, response) => {\n    if (error || response.error) {\n      return reject(error || response.error);\n    }\n\n    return !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  };\n};\n\nclass TorusInpageProvider extends SafeEventEmitter {\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n  constructor(connectionStream) {\n    let {\n      maxEventListeners = 100,\n      shouldSendMetadata = true,\n      jsonRpcStreamName = \"provider\"\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n\n    _defineProperty(this, \"chainId\", void 0);\n\n    _defineProperty(this, \"selectedAddress\", void 0);\n\n    _defineProperty(this, \"_rpcEngine\", void 0);\n\n    _defineProperty(this, \"networkVersion\", void 0);\n\n    _defineProperty(this, \"shouldSendMetadata\", void 0);\n\n    _defineProperty(this, \"isTorus\", void 0);\n\n    _defineProperty(this, \"_publicConfigStore\", void 0);\n\n    _defineProperty(this, \"tryPreopenHandle\", void 0);\n\n    _defineProperty(this, \"enable\", void 0);\n\n    _defineProperty(this, \"_state\", void 0);\n\n    _defineProperty(this, \"_jsonRpcConnection\", void 0);\n\n    _defineProperty(this, \"_sentWarnings\", {\n      // methods\n      enable: false,\n      experimentalMethods: false,\n      send: false,\n      publicConfigStore: false,\n      // events\n      events: {\n        close: false,\n        data: false,\n        networkChanged: false,\n        notification: false\n      }\n    });\n\n    if (!duplex(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners); // private state\n\n    this._state = _objectSpread$1({}, TorusInpageProvider._defaultState); // public state\n\n    this.selectedAddress = null;\n    this.networkVersion = null;\n    this.chainId = null;\n    this.shouldSendMetadata = shouldSendMetadata; // bind functions (to prevent e.g. web3@1.x from making unbound calls)\n\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._sendSync = this._sendSync.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._warnOfDeprecation = this._warnOfDeprecation.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n    this.request = this.request.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this); // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"MetaMask\")); // subscribe to metamask public config (one-way)\n\n    this._publicConfigStore = new ObservableStore({\n      storageKey: \"Metamask-Config\"\n    }); // handle isUnlocked changes, and chainChanged and networkChanged events\n    // this._publicConfigStore.subscribe((stringifiedState) => {\n    //   // This is because we are using store as string\n    //   const state = JSON.parse(stringifiedState as unknown as string);\n    //   if (\"isUnlocked\" in state && state.isUnlocked !== this._state.isUnlocked) {\n    //     this._state.isUnlocked = state.isUnlocked;\n    //     if (!this._state.isUnlocked) {\n    //       // accounts are never exposed when the extension is locked\n    //       this._handleAccountsChanged([]);\n    //     } else {\n    //       // this will get the exposed accounts, if any\n    //       try {\n    //         this._rpcRequest(\n    //           { method: \"eth_accounts\", params: [] },\n    //           NOOP,\n    //           true // indicating that eth_accounts _should_ update accounts\n    //         );\n    //       } catch (_) {\n    //         // Swallow error\n    //       }\n    //     }\n    //   }\n    //   if (\"selectedAddress\" in state && this.selectedAddress !== state.selectedAddress) {\n    //     try {\n    //       this._rpcRequest(\n    //         { method: \"eth_accounts\", params: [] },\n    //         NOOP,\n    //         true // indicating that eth_accounts _should_ update accounts\n    //       );\n    //     } catch (_) {\n    //       // Swallow error\n    //     }\n    //   }\n    //   // Emit chainChanged event on chain change\n    //   if (\"chainId\" in state && state.chainId !== this.chainId) {\n    //     this.chainId = state.chainId || null;\n    //     this.emit(\"chainChanged\", this.chainId);\n    //     // indicate that we've connected, for EIP-1193 compliance\n    //     // we do this here so that iframe can initialize\n    //     if (!this._state.hasEmittedConnection) {\n    //       this._handleConnect(this.chainId);\n    //       this._state.hasEmittedConnection = true;\n    //     }\n    //   }\n    //   // Emit networkChanged event on network change\n    //   if (\"networkVersion\" in state && state.networkVersion !== this.networkVersion) {\n    //     this.networkVersion = state.networkVersion || null;\n    //     this.emit(\"networkChanged\", this.networkVersion);\n    //   }\n    // });\n\n    pump(mux.createStream(\"publicConfig\"), storeAsStream(this._publicConfigStore), // RPC requests should still work if only this stream fails\n    logStreamDisconnectWarning.bind(this, \"MetaMask PublicConfigStore\")); // ignore phishing warning message (handled elsewhere)\n\n    mux.ignoreStream(\"phishing\"); // setup own event listeners\n    // EIP-1193 connect\n\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    }); // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, this._handleStreamDisconnect.bind(this, \"MetaMask RpcProvider\")); // handle RPC requests via dapp-side rpc engine\n\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine; // json rpc notification listener\n\n    jsonRpcConnection.events.on(\"notification\", payload => {\n      const {\n        method,\n        params\n      } = payload;\n\n      if (method === \"wallet_accountsChanged\") {\n        this._handleAccountsChanged(params);\n      } else if (method === \"wallet_unlockStateChanged\") {\n        this._handleUnlockStateChanged(params);\n      } else if (method === \"wallet_chainChanged\") {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(payload.method)) {\n        // EIP 1193 subscriptions, per eth-json-rpc-filters/subscriptionManager\n        this.emit(\"data\", payload); // deprecated\n\n        this.emit(\"notification\", params.result);\n        this.emit(\"message\", {\n          type: method,\n          data: params\n        });\n      } // Backward compatibility for older non EIP 1193 subscriptions\n      // this.emit('data', null, payload)\n\n    });\n  }\n\n  get publicConfigStore() {\n    if (!this._sentWarnings.publicConfigStore) {\n      log.warn(messages.warnings.publicConfigStore);\n      this._sentWarnings.publicConfigStore = true;\n    }\n\n    return this._publicConfigStore;\n  }\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n\n\n  isConnected() {\n    return this._state.isConnected;\n  }\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n\n\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args\n      });\n    }\n\n    const {\n      method,\n      params\n    } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n\n\n  sendAsync(payload, callback) {\n    this._rpcRequest(payload, callback);\n  }\n  /**\n   * We override the following event methods so that we can warn consumers\n   * about deprecated events:\n   *   addListener, on, once, prependListener, prependOnceListener\n   */\n\n\n  addListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.addListener(eventName, listener);\n  }\n\n  on(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.on(eventName, listener);\n  }\n\n  once(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.once(eventName, listener);\n  }\n\n  prependListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.prependListener(eventName, listener);\n  }\n\n  prependOnceListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.prependOnceListener(eventName, listener);\n  } // Private Methods\n  //= ===================\n\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n\n\n  async _initializeState() {\n    try {\n      const {\n        accounts,\n        chainId,\n        isUnlocked,\n        networkVersion\n      } = await this.request({\n        method: \"wallet_getProviderState\"\n      }); // indicate that we've connected, for EIP-1193 compliance\n\n      this.emit(\"connect\", {\n        chainId\n      });\n\n      this._handleChainChanged({\n        chainId,\n        networkVersion\n      });\n\n      this._handleUnlockStateChanged({\n        accounts,\n        isUnlocked\n      });\n\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"MetaMask: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @param isInternal - false - Whether the request is internal.\n   */\n\n\n  _rpcRequest(payload, callback) {\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let cb = callback;\n    const _payload = payload;\n\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n        // handle accounts changing\n        cb = (err, res) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload, cb);\n\n        return;\n      }\n    }\n\n    this.tryPreopenHandle(_payload, cb);\n  }\n\n  send(methodOrPayload, callbackOrArgs) {\n    if (!this._sentWarnings.send) {\n      log.warn(messages.warnings.sendDeprecation);\n      this._sentWarnings.send = true;\n    }\n\n    if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest({\n            method: methodOrPayload,\n            params: callbackOrArgs\n          }, getRpcPromiseCallback(resolve, reject, false));\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n\n    if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n      return this._rpcRequest(methodOrPayload, callbackOrArgs);\n    }\n\n    return this._sendSync(methodOrPayload);\n  }\n  /**\n   * DEPRECATED.\n   * Internal backwards compatibility method, used in send.\n   */\n\n\n  _sendSync(payload) {\n    let result;\n\n    switch (payload.method) {\n      case \"eth_accounts\":\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n\n      case \"eth_coinbase\":\n        result = this.selectedAddress || null;\n        break;\n\n      case \"eth_uninstallFilter\":\n        this._rpcRequest(payload, NOOP);\n\n        result = true;\n        break;\n\n      case \"net_version\":\n        result = this.networkVersion || null;\n        break;\n\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result\n    };\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits MetaMaskInpageProvider#connect\n   */\n\n\n  _handleConnect(chainId) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        chainId\n      });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits MetaMaskInpageProvider#disconnect\n   */\n\n\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013, // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011, // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits MetamaskInpageProvider#disconnect\n   */\n\n\n  _handleStreamDisconnect(streamName, error) {\n    logStreamDisconnectWarning(streamName, error, this);\n\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n  /**\n   * Called when accounts may have changed.\n   */\n\n\n  _handleAccountsChanged(accounts) {\n    let isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false; // defensive programming\n\n    let finalAccounts = accounts;\n\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"MetaMask: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"MetaMask: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    } // emit accountsChanged if anything about the accounts array has changed\n\n\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('MetaMask: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts;\n      this.emit(\"accountsChanged\", finalAccounts);\n    } // handle selectedAddress\n\n\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = finalAccounts[0] || null;\n    }\n  }\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits MetamaskInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n\n\n  _handleChainChanged() {\n    let {\n      chainId,\n      networkVersion\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!chainId || !networkVersion) {\n      log.error(\"MetaMask: Received invalid network parameters. Please report this bug.\", {\n        chainId,\n        networkVersion\n      });\n      return;\n    }\n\n    if (networkVersion === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n\n\n  _handleUnlockStateChanged() {\n    let {\n      accounts,\n      isUnlocked\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\", {\n        isUnlocked\n      });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n  /**\n   * Warns of deprecation for the given event, if applicable.\n   */\n\n\n  _warnOfDeprecation(eventName) {\n    if (this._sentWarnings.events[eventName] === false) {\n      log.warn(messages.warnings.events[eventName]);\n      this._sentWarnings.events[eventName] = true;\n    }\n  }\n\n}\n\n_defineProperty(TorusInpageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\n\nconst defaults = options => ({\n  algorithms: options.algorithms || [\"sha256\"],\n  delimiter: options.delimiter || \" \",\n  full: options.full || false\n}); // Generate list of hashes\n\n\nconst hashes = (options, data) => {\n  const internalHashes = {};\n  options.algorithms.forEach(algorithm => {\n    internalHashes[algorithm] = createHash(algorithm).update(data, \"utf8\").digest(\"base64\");\n  });\n  return internalHashes;\n}; // Build an integrity string\n\n\nconst integrity = (options, sri) => {\n  let output = \"\"; // Hash list\n\n  output += Object.keys(sri.hashes).map(algorithm => `${algorithm}-${sri.hashes[algorithm]}`).join(options.delimiter);\n  return output;\n};\n\nconst main = (options, data) => {\n  // Defaults\n  const finalOptions = defaults(options);\n  const sri = {\n    hashes: hashes(finalOptions, data),\n    integrity: undefined\n  };\n  sri.integrity = integrity(finalOptions, sri);\n  return finalOptions.full ? sri : sri.integrity;\n};\n\nclass PopupHandler extends EventEmitter {\n  constructor(_ref) {\n    let {\n      url,\n      target,\n      features\n    } = _ref;\n    super();\n\n    _defineProperty(this, \"url\", void 0);\n\n    _defineProperty(this, \"target\", void 0);\n\n    _defineProperty(this, \"features\", void 0);\n\n    _defineProperty(this, \"window\", void 0);\n\n    _defineProperty(this, \"windowTimer\", void 0);\n\n    _defineProperty(this, \"iClosedWindow\", void 0);\n\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n\n    this._setupTimer();\n  }\n\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n\n        if (!this.iClosedWindow) {\n          this.emit(\"close\");\n        }\n\n        this.iClosedWindow = false;\n        this.window = undefined;\n      }\n\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n\n  open() {\n    var _this$window;\n\n    this.window = window.open(this.url.href, this.target, this.features);\n    if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n  }\n\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n\n}\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\n\n\nfunction imgExists(url) {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n\n      img.onload = () => resolve(true);\n\n      img.onerror = () => resolve(false);\n\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\n\n\nconst getSiteName = window => {\n  const {\n    document\n  } = window;\n  const siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector('head > meta[name=\"title\"]');\n\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\n\n\nasync function getSiteIcon(window) {\n  const {\n    document\n  } = window; // Use the site's favicon if it exists\n\n  let icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  } // Search through available icons in no particular order\n\n\n  icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(_icon => Boolean(_icon.href));\n\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n\n  return null;\n}\n/**\n * Gets site metadata and returns it\n *\n */\n\n\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window)\n});\n/**\n * Sends site metadata over an RPC request.\n */\n\n\nasync function sendSiteMetadata(engine) {\n  try {\n    const domainMetadata = await getSiteMetadata(); // call engine.handle directly to avoid normal RPC request handling\n\n    engine.handle({\n      jsonrpc: \"2.0\",\n      id: getPreopenInstanceId(),\n      method: \"wallet_sendDomainMetadata\",\n      params: domainMetadata\n    }, NOOP);\n  } catch (error) {\n    log.error({\n      message: messages.errors.sendSiteMetadata(),\n      originalError: error\n    });\n  }\n}\n\nconst _excluded = [\"host\", \"chainId\", \"networkName\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nconst defaultVerifiers = {\n  [LOGIN_PROVIDER.GOOGLE]: true,\n  [LOGIN_PROVIDER.FACEBOOK]: true,\n  [LOGIN_PROVIDER.REDDIT]: true,\n  [LOGIN_PROVIDER.TWITCH]: true,\n  [LOGIN_PROVIDER.DISCORD]: true\n};\nconst iframeIntegrity = \"sha384-3tlMXFGy54V0YicIYCWAnajj2vGhPEirfxGIojxbDKfObgMa/Keub1EtL3ka8YEL\";\nconst expectedCacheControlHeader = \"max-age=3600\";\nconst UNSAFE_METHODS = [\"eth_sendTransaction\", \"eth_signTypedData\", \"eth_signTypedData_v3\", \"eth_signTypedData_v4\", \"personal_sign\", \"eth_getEncryptionPublicKey\", \"eth_decrypt\", \"wallet_addEthereumChain\", \"wallet_switchEthereumChain\"]; // preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const {\n      torusUrl\n    } = await getTorusUrl(\"production\", {\n      check: false,\n      hash: iframeIntegrity,\n      version: \"\"\n    });\n    torusIframeHtml.href = `${torusUrl}/popup`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  constructor() {\n    let {\n      buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n      buttonSize = 56,\n      modalZIndex = 99999,\n      apiKey = \"torus-default\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _defineProperty(this, \"buttonPosition\", BUTTON_POSITION.BOTTOM_LEFT);\n\n    _defineProperty(this, \"buttonSize\", void 0);\n\n    _defineProperty(this, \"torusUrl\", void 0);\n\n    _defineProperty(this, \"torusIframe\", void 0);\n\n    _defineProperty(this, \"styleLink\", void 0);\n\n    _defineProperty(this, \"isLoggedIn\", void 0);\n\n    _defineProperty(this, \"isInitialized\", void 0);\n\n    _defineProperty(this, \"torusWidgetVisibility\", void 0);\n\n    _defineProperty(this, \"torusAlert\", void 0);\n\n    _defineProperty(this, \"apiKey\", void 0);\n\n    _defineProperty(this, \"modalZIndex\", void 0);\n\n    _defineProperty(this, \"alertZIndex\", void 0);\n\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n\n    _defineProperty(this, \"isIframeFullScreen\", void 0);\n\n    _defineProperty(this, \"whiteLabel\", void 0);\n\n    _defineProperty(this, \"requestedVerifier\", void 0);\n\n    _defineProperty(this, \"currentVerifier\", void 0);\n\n    _defineProperty(this, \"embedTranslations\", void 0);\n\n    _defineProperty(this, \"ethereum\", void 0);\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"communicationMux\", void 0);\n\n    _defineProperty(this, \"isLoginCallback\", void 0);\n\n    _defineProperty(this, \"paymentProviders\", configuration.paymentProviders);\n\n    _defineProperty(this, \"loginHint\", \"\");\n\n    _defineProperty(this, \"useWalletConnect\", void 0);\n\n    _defineProperty(this, \"isCustomLogin\", false);\n\n    this.buttonPosition = buttonPosition;\n    this.buttonSize = buttonSize;\n    this.torusUrl = \"\";\n    this.isLoggedIn = false; // ethereum.enable working\n\n    this.isInitialized = false; // init done\n\n    this.torusWidgetVisibility = true;\n    this.requestedVerifier = \"\";\n    this.currentVerifier = \"\"; // this.nodeDetailManager = new NodeDetailManager();\n    // this.torusJs = new TorusJs({\n    //   metadataHost: \"https://metadata.tor.us\",\n    //   allowHost: \"https://signer.tor.us/api/allow\",\n    //   network: \"mainnet\",\n    // });\n\n    this.apiKey = apiKey;\n    setAPIKey(apiKey);\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.isIframeFullScreen = false;\n  }\n\n  async init() {\n    let {\n      buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n      enableLogging = false,\n      // deprecated: use loginConfig instead\n      enabledVerifiers = defaultVerifiers,\n      network = {\n        host: \"mainnet\",\n        chainId: null,\n        networkName: \"\",\n        blockExplorer: \"\",\n        ticker: \"\",\n        tickerName: \"\"\n      },\n      loginConfig = {},\n      showTorusButton = true,\n      integrity = {\n        check: false,\n        hash: iframeIntegrity,\n        version: \"\"\n      },\n      whiteLabel,\n      skipTKey = false,\n      useWalletConnect = false,\n      mfaLevel = \"default\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    const {\n      torusUrl,\n      logLevel\n    } = await getTorusUrl(buildEnv, integrity);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    this.whiteLabel = whiteLabel;\n    this.useWalletConnect = useWalletConnect;\n    this.isCustomLogin = !!(loginConfig && Object.keys(loginConfig).length > 0) || !!(whiteLabel && Object.keys(whiteLabel).length > 0);\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();else log.disableAll();\n    this.torusWidgetVisibility = showTorusButton;\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"popup\";else torusIframeUrl.pathname += \"/popup\";\n    torusIframeUrl.hash = `#isCustomLogin=${this.isCustomLogin}`; // Iframe code\n\n    this.torusIframe = htmlToElement(`<iframe\n        id=\"torusIframe\"\n        allow=${useWalletConnect ? \"camera\" : \"\"}\n        class=\"torusIframe\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%; color-scheme: none;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex}\"\n      ></iframe>`);\n    this.torusAlertContainer = htmlToElement('<div id=\"torusAlertContainer\"></div>');\n    this.torusAlertContainer.style.display = \"none\";\n    this.torusAlertContainer.style.setProperty(\"z-index\", this.alertZIndex.toString());\n    const link = window.document.createElement(\"link\");\n    link.setAttribute(\"rel\", \"stylesheet\");\n    link.setAttribute(\"type\", \"text/css\");\n    link.setAttribute(\"href\", `${torusUrl}/css/widget.css`);\n    this.styleLink = link;\n    const {\n      defaultLanguage = getUserLanguage(),\n      customTranslations = {}\n    } = this.whiteLabel || {};\n    const mergedTranslations = deepmerge(configuration.translations, customTranslations);\n    const languageTranslations = mergedTranslations[defaultLanguage] || configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n\n    const handleSetup = async () => {\n      await documentReady();\n      return new Promise((resolve, reject) => {\n        this.torusIframe.onload = async () => {\n          // only do this if iframe is not full screen\n          this._setupWeb3();\n\n          const initStream = this.communicationMux.getStream(\"init_stream\");\n          initStream.on(\"data\", chunk => {\n            const {\n              name,\n              data,\n              error\n            } = chunk;\n\n            if (name === \"init_complete\" && data.success) {\n              // resolve promise\n              this.isInitialized = true;\n\n              this._displayIframe(this.isIframeFullScreen);\n\n              resolve(undefined);\n            } else if (error) {\n              reject(new Error(error));\n            }\n          });\n          initStream.write({\n            name: \"init_stream\",\n            data: {\n              enabledVerifiers,\n              loginConfig,\n              whiteLabel: this.whiteLabel,\n              buttonPosition: this.buttonPosition,\n              buttonSize: this.buttonSize,\n              torusWidgetVisibility: this.torusWidgetVisibility,\n              apiKey: this.apiKey,\n              skipTKey,\n              network,\n              mfaLevel\n            }\n          });\n        };\n\n        window.document.head.appendChild(this.styleLink);\n        window.document.body.appendChild(this.torusIframe);\n        window.document.body.appendChild(this.torusAlertContainer);\n      });\n    };\n\n    if (buildEnv === \"production\" && integrity.check) {\n      // hacky solution to check for iframe integrity\n      const fetchUrl = `${torusUrl}/popup`;\n      const resp = await fetch(fetchUrl, {\n        cache: \"reload\"\n      });\n\n      if (resp.headers.get(\"Cache-Control\") !== expectedCacheControlHeader) {\n        throw new Error(`Unexpected Cache-Control headers, got ${resp.headers.get(\"Cache-Control\")}`);\n      }\n\n      const response = await resp.text();\n      const calculatedIntegrity = main({\n        algorithms: [\"sha384\"]\n      }, response);\n      log.info(calculatedIntegrity, \"integrity\");\n\n      if (calculatedIntegrity === integrity.hash) {\n        await handleSetup();\n      } else {\n        this.clearInit();\n        throw new Error(\"Integrity check failed\");\n      }\n    } else {\n      await handleSetup();\n    }\n\n    return undefined;\n  }\n\n  login() {\n    let {\n      verifier = \"\",\n      login_hint: loginHint = \"\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    this.requestedVerifier = verifier;\n    this.loginHint = loginHint;\n    return this.ethereum.enable();\n  }\n\n  logout() {\n    return new Promise((resolve, reject) => {\n      if (!this.isLoggedIn) {\n        reject(new Error(\"User has not logged in yet\"));\n        return;\n      }\n\n      const logOutStream = this.communicationMux.getStream(\"logout\");\n      logOutStream.write({\n        name: \"logOut\"\n      });\n      const statusStream = this.communicationMux.getStream(\"status\");\n\n      const statusStreamHandler = status => {\n        if (!status.loggedIn) {\n          this.isLoggedIn = false;\n          this.currentVerifier = \"\";\n          this.requestedVerifier = \"\";\n          resolve();\n        } else reject(new Error(\"Some Error Occured\"));\n      };\n\n      handleStream(statusStream, \"data\", statusStreamHandler);\n    });\n  }\n\n  async cleanUp() {\n    if (this.isLoggedIn) {\n      await this.logout();\n    }\n\n    this.clearInit();\n  }\n\n  clearInit() {\n    function isElement(element) {\n      return element instanceof Element || element instanceof HTMLDocument;\n    }\n\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n\n    this.isInitialized = false;\n  }\n\n  hideTorusButton() {\n    this.torusWidgetVisibility = false;\n\n    this._sendWidgetVisibilityStatus(false);\n\n    this._displayIframe();\n  }\n\n  showTorusButton() {\n    this.torusWidgetVisibility = true;\n\n    this._sendWidgetVisibilityStatus(true);\n\n    this._displayIframe();\n  }\n\n  setProvider(_ref) {\n    let {\n      host = \"mainnet\",\n      chainId = null,\n      networkName = \"\"\n    } = _ref,\n        rest = _objectWithoutProperties(_ref, _excluded);\n\n    return new Promise((resolve, reject) => {\n      const providerChangeStream = this.communicationMux.getStream(\"provider_change\");\n\n      const handler = chunk => {\n        const {\n          err,\n          success\n        } = chunk.data;\n        log.info(chunk);\n\n        if (err) {\n          reject(err);\n        } else if (success) {\n          resolve();\n        } else reject(new Error(\"some error occured\"));\n      };\n\n      handleStream(providerChangeStream, \"data\", handler);\n      const preopenInstanceId = getPreopenInstanceId();\n\n      this._handleWindow(preopenInstanceId, {\n        target: \"_blank\",\n        features: FEATURES_PROVIDER_CHANGE_WINDOW\n      });\n\n      providerChangeStream.write({\n        name: \"show_provider_change\",\n        data: {\n          network: _objectSpread({\n            host,\n            chainId,\n            networkName\n          }, rest),\n          preopenInstanceId,\n          override: false\n        }\n      });\n    });\n  }\n\n  showWallet(path) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const showWalletStream = this.communicationMux.getStream(\"show_wallet\");\n    const finalPath = path ? `/${path}` : \"\";\n    showWalletStream.write({\n      name: \"show_wallet\",\n      data: {\n        path: finalPath\n      }\n    });\n\n    const showWalletHandler = chunk => {\n      if (chunk.name === \"show_wallet_instance\") {\n        // Let the error propogate up (hence, no try catch)\n        const {\n          instanceId\n        } = chunk.data;\n        const finalUrl = new URL(`${this.torusUrl}/wallet${finalPath}`); // Using URL constructor to prevent js injection and allow parameter validation.!\n\n        finalUrl.searchParams.append(\"integrity\", \"true\");\n        finalUrl.searchParams.append(\"instanceId\", instanceId);\n        Object.keys(params).forEach(x => {\n          finalUrl.searchParams.append(x, params[x]);\n        });\n        finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n        const walletWindow = new PopupHandler({\n          url: finalUrl,\n          features: FEATURES_DEFAULT_WALLET_WINDOW\n        });\n        walletWindow.open();\n      }\n    };\n\n    handleStream(showWalletStream, \"data\", showWalletHandler);\n  }\n\n  async getPublicAddress(_ref2) {\n    let {\n      verifier,\n      verifierId,\n      isExtended = false\n    } = _ref2;\n    if (!configuration.supportedVerifierList.includes(verifier) || !WALLET_OPENLOGIN_VERIFIER_MAP[verifier]) throw new Error(\"Unsupported verifier\");\n    const walletVerifier = verifier;\n    const openloginVerifier = WALLET_OPENLOGIN_VERIFIER_MAP[verifier];\n    const url = new URL(`https://api.tor.us/lookup/torus`);\n    url.searchParams.append(\"verifier\", openloginVerifier);\n    url.searchParams.append(\"verifierId\", verifierId);\n    url.searchParams.append(\"walletVerifier\", walletVerifier);\n    url.searchParams.append(\"network\", \"mainnet\");\n    url.searchParams.append(\"isExtended\", isExtended.toString());\n    return get(url.href, {\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      }\n    }, {\n      useAPIKey: true\n    });\n  }\n\n  getUserInfo(message) {\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const userInfoAccessStream = this.communicationMux.getStream(\"user_info_access\");\n        userInfoAccessStream.write({\n          name: \"user_info_access_request\"\n        });\n\n        const userInfoAccessHandler = chunk => {\n          const {\n            name,\n            data: {\n              approved,\n              payload,\n              rejected,\n              newRequest\n            }\n          } = chunk;\n\n          if (name === \"user_info_access_response\") {\n            if (approved) {\n              resolve(payload);\n            } else if (rejected) {\n              reject(new Error(\"User rejected the request\"));\n            } else if (newRequest) {\n              const userInfoStream = this.communicationMux.getStream(\"user_info\");\n\n              const userInfoHandler = handlerChunk => {\n                if (handlerChunk.name === \"user_info_response\") {\n                  if (handlerChunk.data.approved) {\n                    resolve(handlerChunk.data.payload);\n                  } else {\n                    reject(new Error(\"User rejected the request\"));\n                  }\n                }\n              };\n\n              handleStream(userInfoStream, \"data\", userInfoHandler);\n              const preopenInstanceId = getPreopenInstanceId();\n\n              this._handleWindow(preopenInstanceId, {\n                target: \"_blank\",\n                features: FEATURES_PROVIDER_CHANGE_WINDOW\n              });\n\n              userInfoStream.write({\n                name: \"user_info_request\",\n                data: {\n                  message,\n                  preopenInstanceId\n                }\n              });\n            }\n          }\n        };\n\n        handleStream(userInfoAccessStream, \"data\", userInfoAccessHandler);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  initiateTopup(provider, params) {\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        const {\n          errors,\n          isValid\n        } = validatePaymentProvider(provider, params);\n\n        if (!isValid) {\n          reject(new Error(JSON.stringify(errors)));\n          return;\n        }\n\n        const topupStream = this.communicationMux.getStream(\"topup\");\n\n        const topupHandler = chunk => {\n          if (chunk.name === \"topup_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n\n        handleStream(topupStream, \"data\", topupHandler);\n        const preopenInstanceId = getPreopenInstanceId();\n\n        this._handleWindow(preopenInstanceId);\n\n        topupStream.write({\n          name: \"topup_request\",\n          data: {\n            provider,\n            params,\n            preopenInstanceId\n          }\n        });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n\n  async loginWithPrivateKey(loginParams) {\n    const {\n      privateKey,\n      userInfo\n    } = loginParams;\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        if (Buffer.from(privateKey, \"hex\").length !== 32) {\n          reject(new Error(\"Invalid private key, Please provide a 32 byte valid secp25k1 private key\"));\n          return;\n        }\n\n        const loginPrivKeyStream = this.communicationMux.getStream(\"login_with_private_key\");\n\n        const loginHandler = chunk => {\n          if (chunk.name === \"login_with_private_key_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n\n        handleStream(loginPrivKeyStream, \"data\", loginHandler);\n        loginPrivKeyStream.write({\n          name: \"login_with_private_key_request\",\n          data: {\n            privateKey,\n            userInfo\n          }\n        });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n\n  async showWalletConnectScanner() {\n    if (!this.useWalletConnect) throw new Error(\"Set `useWalletConnect` as true in init function options to use wallet connect scanner\");\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const walletConnectStream = this.communicationMux.getStream(\"wallet_connect_stream\");\n\n        const walletConnectHandler = chunk => {\n          if (chunk.name === \"wallet_connect_stream_res\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n\n            this._displayIframe();\n          }\n        };\n\n        handleStream(walletConnectStream, \"data\", walletConnectHandler);\n        walletConnectStream.write({\n          name: \"wallet_connect_stream_req\"\n        });\n\n        this._displayIframe(true);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  _handleWindow(preopenInstanceId) {\n    let {\n      url,\n      target,\n      features\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (preopenInstanceId) {\n      const windowStream = this.communicationMux.getStream(\"window\");\n      const finalUrl = new URL(url || `${this.torusUrl}/redirect?preopenInstanceId=${preopenInstanceId}`);\n      if (finalUrl.hash) finalUrl.hash += `&isCustomLogin=${this.isCustomLogin}`;else finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n      const handledWindow = new PopupHandler({\n        url: finalUrl,\n        target,\n        features\n      });\n      handledWindow.open();\n\n      if (!handledWindow.window) {\n        this._createPopupBlockAlert(preopenInstanceId, finalUrl.href);\n\n        return;\n      }\n\n      windowStream.write({\n        name: \"opened_window\",\n        data: {\n          preopenInstanceId\n        }\n      });\n\n      const closeHandler = _ref3 => {\n        let {\n          preopenInstanceId: receivedId,\n          close\n        } = _ref3;\n\n        if (receivedId === preopenInstanceId && close) {\n          handledWindow.close();\n          windowStream.removeListener(\"data\", closeHandler);\n        }\n      };\n\n      windowStream.on(\"data\", closeHandler);\n      handledWindow.once(\"close\", () => {\n        windowStream.write({\n          data: {\n            preopenInstanceId,\n            closed: true\n          }\n        });\n        windowStream.removeListener(\"data\", closeHandler);\n      });\n    }\n  }\n\n  _setEmbedWhiteLabel(element) {\n    // Set whitelabel\n    const {\n      theme\n    } = this.whiteLabel || {};\n\n    if (theme) {\n      const {\n        isDark = false,\n        colors = {}\n      } = theme;\n      if (isDark) element.classList.add(\"torus-dark\");\n      if (colors.torusBrand1) element.style.setProperty(\"--torus-brand-1\", colors.torusBrand1);\n      if (colors.torusGray2) element.style.setProperty(\"--torus-gray-2\", colors.torusGray2);\n    }\n  }\n\n  _getLogoUrl() {\n    var _this$whiteLabel, _this$whiteLabel$them;\n\n    let logoUrl = `${this.torusUrl}/images/torus_icon-blue.svg`;\n\n    if ((_this$whiteLabel = this.whiteLabel) !== null && _this$whiteLabel !== void 0 && (_this$whiteLabel$them = _this$whiteLabel.theme) !== null && _this$whiteLabel$them !== void 0 && _this$whiteLabel$them.isDark) {\n      var _this$whiteLabel2;\n\n      logoUrl = ((_this$whiteLabel2 = this.whiteLabel) === null || _this$whiteLabel2 === void 0 ? void 0 : _this$whiteLabel2.logoLight) || logoUrl;\n    } else {\n      var _this$whiteLabel3;\n\n      logoUrl = ((_this$whiteLabel3 = this.whiteLabel) === null || _this$whiteLabel3 === void 0 ? void 0 : _this$whiteLabel3.logoDark) || logoUrl;\n    }\n\n    return logoUrl;\n  }\n\n  _sendWidgetVisibilityStatus(status) {\n    const torusWidgetVisibilityStream = this.communicationMux.getStream(\"torus-widget-visibility\");\n    torusWidgetVisibilityStream.write({\n      data: status\n    });\n  }\n\n  _displayIframe() {\n    let isFull = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const style = {};\n    const size = this.buttonSize + 14; // 15px padding\n    // set phase\n\n    if (!isFull) {\n      style.display = this.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = `${size}px`;\n      style.width = `${size}px`;\n\n      switch (this.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n\n    Object.assign(this.torusIframe.style, style);\n    this.isIframeFullScreen = isFull;\n  }\n\n  _setupWeb3() {\n    log.info(\"setupWeb3 running\"); // setup background connection\n\n    const metamaskStream = new BasePostMessageStream({\n      name: \"embed_metamask\",\n      target: \"iframe_metamask\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    }); // Due to compatibility reasons, we should not set up multiplexing on window.metamaskstream\n    // because the MetamaskInpageProvider also attempts to do so.\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_comm\",\n      target: \"iframe_comm\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    }); // Backward compatibility with Gotchi :)\n    // window.metamaskStream = this.communicationStream\n    // compose the inpage provider\n\n    const inpageProvider = new TorusInpageProvider(metamaskStream); // detect eth_requestAccounts and pipe to enable for now\n\n    const detectAccountRequestPrototypeModifier = m => {\n      const originalMethod = inpageProvider[m];\n\n      inpageProvider[m] = function providerFunc(method) {\n        if (method && method === \"eth_requestAccounts\") {\n          return inpageProvider.enable();\n        }\n\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        return originalMethod.apply(this, [method, ...args]);\n      };\n    };\n\n    detectAccountRequestPrototypeModifier(\"send\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n\n    inpageProvider.enable = () => {\n      return new Promise((resolve, reject) => {\n        // If user is already logged in, we assume they have given access to the website\n        inpageProvider.sendAsync({\n          jsonrpc: \"2.0\",\n          id: getPreopenInstanceId(),\n          method: \"eth_requestAccounts\",\n          params: []\n        }, (err, response) => {\n          const {\n            result: res\n          } = response || {};\n\n          if (err) {\n            setTimeout(() => {\n              reject(err);\n            }, 50);\n          } else if (Array.isArray(res) && res.length > 0) {\n            // If user is already rehydrated, resolve this\n            // else wait for something to be written to status stream\n            const handleLoginCb = () => {\n              if (this.requestedVerifier !== \"\" && this.currentVerifier !== this.requestedVerifier) {\n                const {\n                  requestedVerifier\n                } = this; // eslint-disable-next-line promise/no-promise-in-callback\n\n                this.logout() // eslint-disable-next-line promise/always-return\n                .then(_ => {\n                  this.requestedVerifier = requestedVerifier;\n\n                  this._showLoginPopup(true, resolve, reject);\n                }).catch(error => reject(error));\n              } else {\n                resolve(res);\n              }\n            };\n\n            if (this.isLoggedIn) {\n              handleLoginCb();\n            } else {\n              this.isLoginCallback = handleLoginCb;\n            }\n          } else {\n            // set up listener for login\n            this._showLoginPopup(true, resolve, reject);\n          }\n        });\n      });\n    };\n\n    inpageProvider.tryPreopenHandle = (payload, cb) => {\n      const _payload = payload;\n\n      if (!Array.isArray(_payload) && UNSAFE_METHODS.includes(_payload.method)) {\n        const preopenInstanceId = getPreopenInstanceId();\n\n        this._handleWindow(preopenInstanceId, {\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW\n        });\n\n        _payload.preopenInstanceId = preopenInstanceId;\n      }\n\n      inpageProvider._rpcEngine.handle(_payload, cb);\n    }; // Work around for web3@1.0 deleting the bound `sendAsync` but not the unbound\n    // `sendAsync` method on the prototype, causing `this` reference issues with drizzle\n\n\n    const proxiedInpageProvider = new Proxy(inpageProvider, {\n      // straight up lie that we deleted the property so that it doesnt\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    this.ethereum = proxiedInpageProvider;\n    const communicationMux = setupMultiplex(communicationStream);\n    this.communicationMux = communicationMux;\n    const windowStream = communicationMux.getStream(\"window\");\n    windowStream.on(\"data\", chunk => {\n      if (chunk.name === \"create_window\") {\n        // url is the url we need to open\n        // we can pass the final url upfront so that it removes the step of redirecting to /redirect and waiting for finalUrl\n        this._createPopupBlockAlert(chunk.data.preopenInstanceId, chunk.data.url);\n      }\n    }); // show torus widget if button clicked\n\n    const widgetStream = communicationMux.getStream(\"widget\");\n    widgetStream.on(\"data\", chunk => {\n      const {\n        data\n      } = chunk;\n\n      this._displayIframe(data);\n    }); // Show torus button if wallet has been hydrated/detected\n\n    const statusStream = communicationMux.getStream(\"status\");\n    statusStream.on(\"data\", status => {\n      // login\n      if (status.loggedIn) {\n        this.isLoggedIn = status.loggedIn;\n        this.currentVerifier = status.verifier;\n      } // logout\n      else this._displayIframe();\n\n      if (this.isLoginCallback) {\n        this.isLoginCallback();\n        delete this.isLoginCallback;\n      }\n    });\n    this.provider = proxiedInpageProvider;\n    if (this.provider.shouldSendMetadata) sendSiteMetadata(this.provider._rpcEngine);\n\n    inpageProvider._initializeState();\n\n    log.debug(\"Torus - injected provider\");\n  }\n\n  _showLoginPopup(calledFromEmbed, resolve, reject) {\n    const loginHandler = data => {\n      const {\n        err,\n        selectedAddress\n      } = data;\n\n      if (err) {\n        log.error(err);\n        if (reject) reject(err);\n      } // returns an array (cause accounts expects it)\n      else if (resolve) resolve([selectedAddress]);\n\n      if (this.isIframeFullScreen) this._displayIframe();\n    };\n\n    const oauthStream = this.communicationMux.getStream(\"oauth\");\n\n    if (!this.requestedVerifier) {\n      this._displayIframe(true);\n\n      handleStream(oauthStream, \"data\", loginHandler);\n      oauthStream.write({\n        name: \"oauth_modal\",\n        data: {\n          calledFromEmbed\n        }\n      });\n    } else {\n      handleStream(oauthStream, \"data\", loginHandler);\n      const preopenInstanceId = getPreopenInstanceId();\n\n      this._handleWindow(preopenInstanceId);\n\n      oauthStream.write({\n        name: \"oauth\",\n        data: {\n          calledFromEmbed,\n          verifier: this.requestedVerifier,\n          preopenInstanceId,\n          login_hint: this.loginHint\n        }\n      });\n    }\n  }\n\n  _createPopupBlockAlert(preopenInstanceId, url) {\n    const logoUrl = this._getLogoUrl();\n\n    const torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + `<div id=\"torusAlert__logo\"><img src=\"${logoUrl}\" /></div>` + \"<div>\" + `<h1 id=\"torusAlert__title\">${this.embedTranslations.actionRequired}</h1>` + `<p id=\"torusAlert__desc\">${this.embedTranslations.pendingAction}</p>` + \"</div>\" + \"</div>\");\n    const successAlert = htmlToElement(`<div><a id=\"torusAlert__btn\">${this.embedTranslations.continue}</a></div>`);\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(preopenInstanceId, {\n          url,\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW\n        });\n\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n\n    this._setEmbedWhiteLabel(torusAlert);\n\n    const attachOnLoad = () => {\n      this.torusAlertContainer.style.display = \"block\";\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n\n    runOnLoad(attachOnLoad);\n    runOnLoad(bindOnLoad);\n  }\n\n}\n\nexport { BUTTON_POSITION, LOGIN_PROVIDER, PAYMENT_PROVIDER, SUPPORTED_PAYMENT_NETWORK, TORUS_BUILD_ENV, TorusInpageProvider, WALLET_OPENLOGIN_VERIFIER_MAP, WALLET_VERIFIERS, Torus as default };","map":{"version":3,"sources":["../src/interfaces.ts","../src/supportedCurrencies.ts","../src/config.ts","../src/embedUtils.ts","../src/loglevel.ts","../src/messages.ts","../src/utils.ts","../src/inpage-provider.ts","../src/integrity.ts","../src/PopupHandler.ts","../src/siteMetadata.ts","../src/embed.ts"],"names":["LOGIN_PROVIDER","GOOGLE","FACEBOOK","TWITCH","REDDIT","DISCORD","WALLET_VERIFIERS","EMAIL_PASSWORDLESS","WALLET_OPENLOGIN_VERIFIER_MAP","PAYMENT_PROVIDER","MOONPAY","WYRE","RAMPNETWORK","XANPOOL","MERCURYO","TRANSAK","BANXA","SUPPORTED_PAYMENT_NETWORK","MAINNET","MATIC","BSC_MAINNET","AVALANCHE_MAINNET","XDAI","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","BINANCE","TESTING","LRC","BETA","BNB","POLYGON","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","CRYPTO_COMPARE_CURRENCIES","PROVIDER_SUPPORTED_FIAT_CURRENCIES","cryptoCompareCurrenciesSet","Set","supportedFiatCurrencies","provider","providerSupportedFiatCurrencies","filter","currency","has","paymentProviders","line1","line2","line3","supportPage","minOrderValue","maxOrderValue","validCurrencies","validCryptoCurrenciesByChain","value","display","includeFees","api","enforceMax","receiveHint","sell","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","supportedVerifierList","Object","values","prodTorusUrl","localStorageKeyPrefix","runOnLoad","fn","Promise","resolve","reject","window","document","body","then","catch","addEventListener","htmlToElement","html","template","createElement","trimmedHtml","trim","innerHTML","content","firstChild","handleEvent","handle","eventName","handler","handlerArgs","handlerWrapper","removeEventListener","handleStream","chunk","removeListener","on","documentReady","readyState","loglevel","getLogger","errors","disconnected","permanentlyDisconnected","sendSiteMetadata","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","shouldSendMetadata","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","enableDeprecation","sendDeprecation","events","close","data","networkChanged","notification","publicConfigStore","config","validatePaymentProvider","params","isValid","keys","length","selectedProvider","selectedParams","fiatValue","requestedOrderAmount","parseFloat","toString","selectedCurrency","includes","selectedCryptoCurrency","flat","map","finalCryptoCurrency","toLowerCase","createErrorMiddleware","req","res","next","error","ethErrors","rpc","invalidRequest","message","done","log","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","emit","getPreopenInstanceId","Math","random","slice","getTorusUrl","buildEnv","integrity","torusUrl","logLevel","version","versionUsed","response","get","useAPIKey","getUserLanguage","userLanguage","navigator","language","userLanguages","split","prototype","hasOwnProperty","call","EMITTED_NOTIFICATIONS","NOOP","FEATURES_PROVIDER_CHANGE_WINDOW","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_CONFIRM_WINDOW","getPopupFeatures","dualScreenLeft","screenLeft","undefined","screenX","dualScreenTop","screenTop","screenY","w","h","width","innerWidth","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","left","abs","top","features","SafeEventEmitter","defaultMaxListeners","getRpcPromiseCallback","unwrapResult","Array","isArray","result","TorusInpageProvider","accounts","isConnected","isUnlocked","initialized","isPermanentlyDisconnected","hasEmittedConnection","enable","experimentalMethods","send","constructor","connectionStream","jsonRpcStreamName","_defineProperty","isDuplexStream","Error","messages","isTorus","setMaxListeners","_state","_defaultState","selectedAddress","networkVersion","_handleAccountsChanged","bind","_handleChainChanged","_handleUnlockStateChanged","_handleConnect","_handleDisconnect","_handleStreamDisconnect","_sendSync","_rpcRequest","_warnOfDeprecation","_initializeState","request","sendAsync","mux","ObjectMultiplex","pump","_publicConfigStore","ObservableStore","storageKey","createStream","storeAsStream","ignoreStream","jsonRpcConnection","createStreamMiddleware","stream","rpcEngine","JRPCEngine","push","createIdRemapMiddleware","middleware","_rpcEngine","payload","type","_sentWarnings","args","callback","addListener","listener","once","prependListener","prependOnceListener","isInternal","cb","_payload","jsonrpc","err","tryPreopenHandle","methodOrPayload","callbackOrArgs","id","debug","isRecoverable","errorMessage","EthereumRpcError","streamName","isEthAccounts","finalAccounts","account","dequal","defaults","options","algorithms","delimiter","full","hashes","internalHashes","forEach","algorithm","createHash","update","digest","sri","output","join","main","finalOptions","PopupHandler","EventEmitter","url","target","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","open","href","focus","redirect","locationReplaceOnRedirect","location","replace","imgExists","img","onload","onerror","src","e","getSiteName","siteName","querySelector","metaTitle","title","hostname","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","getSiteMetadata","name","engine","domainMetadata","originalError","defaultVerifiers","iframeIntegrity","expectedCacheControlHeader","UNSAFE_METHODS","preLoadIframe","torusIframeHtml","check","hash","crossOrigin","rel","relList","supports","head","appendChild","Torus","configuration","buttonPosition","buttonSize","modalZIndex","apiKey","isLoggedIn","isInitialized","torusWidgetVisibility","requestedVerifier","currentVerifier","setAPIKey","alertZIndex","isIframeFullScreen","init","enableLogging","enabledVerifiers","network","host","networkName","blockExplorer","ticker","tickerName","loginConfig","showTorusButton","whiteLabel","skipTKey","useWalletConnect","mfaLevel","isCustomLogin","setDefaultLevel","enableAll","disableAll","torusIframeUrl","URL","pathname","endsWith","torusIframe","torusAlertContainer","style","setProperty","link","setAttribute","styleLink","defaultLanguage","customTranslations","mergedTranslations","deepmerge","languageTranslations","embedTranslations","handleSetup","_setupWeb3","initStream","communicationMux","getStream","success","_displayIframe","write","fetchUrl","resp","fetch","cache","headers","text","calculatedIntegrity","generateIntegrity","clearInit","login","verifier","login_hint","loginHint","ethereum","logout","logOutStream","statusStream","statusStreamHandler","status","loggedIn","cleanUp","isElement","element","Element","HTMLDocument","contains","remove","torusAlert","hideTorusButton","_sendWidgetVisibilityStatus","setProvider","rest","providerChangeStream","preopenInstanceId","_handleWindow","override","showWallet","path","showWalletStream","finalPath","showWalletHandler","instanceId","finalUrl","searchParams","append","x","walletWindow","getPublicAddress","verifierId","isExtended","walletVerifier","openloginVerifier","getUserInfo","userInfoAccessStream","userInfoAccessHandler","approved","rejected","newRequest","userInfoStream","userInfoHandler","handlerChunk","initiateTopup","JSON","stringify","topupStream","topupHandler","loginWithPrivateKey","loginParams","privateKey","userInfo","Buffer","loginPrivKeyStream","loginHandler","showWalletConnectScanner","walletConnectStream","walletConnectHandler","windowStream","handledWindow","_createPopupBlockAlert","closeHandler","_ref3","receivedId","_setEmbedWhiteLabel","theme","isDark","colors","classList","add","torusBrand1","torusGray2","_getLogoUrl","logoUrl","logoLight","logoDark","torusWidgetVisibilityStream","isFull","size","right","bottom","assign","metamaskStream","BasePostMessageStream","targetWindow","contentWindow","targetOrigin","origin","communicationStream","inpageProvider","detectAccountRequestPrototypeModifier","m","originalMethod","providerFunc","apply","setTimeout","handleLoginCb","_","_showLoginPopup","isLoginCallback","proxiedInpageProvider","Proxy","deleteProperty","setupMultiplex","widgetStream","calledFromEmbed","oauthStream","successAlert","btnContainer","bindOnLoad","children","attachOnLoad"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { get, setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, BasePostMessageStream, setupMultiplex } from '@toruslabs/openlogin-jrpc';\nimport deepmerge from 'lodash.merge';\nimport { ObservableStore, storeAsStream } from '@metamask/obs-store';\nimport { ethErrors, EthereumRpcError } from 'eth-rpc-errors';\nimport dequal from 'fast-deep-equal';\nimport { duplex } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport createHash from 'create-hash';\nimport { EventEmitter } from 'events';\n\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\"\n};\nconst WALLET_VERIFIERS = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  EMAIL_PASSWORDLESS: \"torus-auth0-email-passwordless\"\n};\nconst WALLET_OPENLOGIN_VERIFIER_MAP = {\n  [WALLET_VERIFIERS.GOOGLE]: \"tkey-google\",\n  [WALLET_VERIFIERS.FACEBOOK]: \"tkey-facebook\",\n  [WALLET_VERIFIERS.TWITCH]: \"tkey-twitch\",\n  [WALLET_VERIFIERS.REDDIT]: \"tkey-reddit\",\n  [WALLET_VERIFIERS.DISCORD]: \"tkey-discord\",\n  [WALLET_VERIFIERS.EMAIL_PASSWORDLESS]: \"tkey-auth0-email-passwordless\"\n};\nconst PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\",\n  BANXA: \"banxa\"\n};\nconst SUPPORTED_PAYMENT_NETWORK = {\n  MAINNET: \"mainnet\",\n  MATIC: \"matic\",\n  BSC_MAINNET: \"bsc_mainnet\",\n  AVALANCHE_MAINNET: \"avalanche_mainnet\",\n  XDAI: \"xdai\"\n};\nconst TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  BINANCE: \"binance\",\n  TESTING: \"testing\",\n  LRC: \"lrc\",\n  BETA: \"beta\",\n  BNB: \"bnb\",\n  POLYGON: \"polygon\"\n};\nconst BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\n\n/**\n * From https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC&extraParams=YourSite\n * GET https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC\n * Then map over returned entries, picking tsym\n *\n * Last updated: Date of commit\n */\nconst CRYPTO_COMPARE_CURRENCIES = [\"ETH\", \"USDT\", \"USDC\", \"TUSD\", \"EOSDT\", \"USD\", \"DAI\", \"GUSD\", \"DKKT\", \"PAX\", \"ILS\", \"RUB\", \"BYN\", \"EUR\", \"GBP\", \"JPY\", \"KRW\", \"PLN\", \"MXN\", \"AUD\", \"BRL\", \"CAD\", \"CHF\", \"KPW\", \"LAK\", \"LBP\", \"LKR\", \"XOF\", \"CNHT\", \"DOGE\", \"UAH\", \"TRY\", \"HKD\", \"XJP\", \"SGD\", \"USC\", \"NZD\", \"NGN\", \"RUR\", \"COP\", \"GHS\", \"EGP\", \"IDR\", \"BHD\", \"CRC\", \"PEN\", \"AED\", \"DOP\", \"PKR\", \"HUF\", \"VND\", \"XAR\", \"LTC\", \"RON\", \"OMR\", \"MYR\", \"DKK\", \"UGX\", \"ZMW\", \"SAR\", \"SEK\", \"GEL\", \"RWF\", \"IRR\", \"TZS\", \"CNY\", \"VEF\", \"BDT\", \"HRK\", \"CLP\", \"THB\", \"XAF\", \"ARS\", \"UYU\", \"SZL\", \"KZT\", \"NOK\", \"KES\", \"PAB\", \"INR\", \"CZK\", \"MAD\", \"TWD\", \"PHP\", \"ZAR\", \"BOB\", \"CDF\", \"DASH\", \"VES\", \"ISK\", \"MWK\", \"BAM\", \"TTD\", \"XRP\", \"JOD\", \"RSD\", \"HNL\", \"BGN\", \"GTQ\", \"BWP\", \"XMR\", \"MMK\", \"QAR\", \"AOA\", \"KWD\", \"MUR\", \"WUSD\", \"WEUR\", \"WAVES\", \"WTRY\", \"LRD\", \"LSL\", \"LYD\", \"AWG\", \"MDL\", \"BTO\", \"EURS\", \"CHFT\", \"MKD\", \"MNT\", \"MOP\", \"MRO\", \"MVR\", \"VOLLAR\", \"CKUSD\", \"KHR\", \"VUV\", \"BITCNY\", \"QC\", \"BBD\", \"NAD\", \"NPR\", \"PGK\", \"PYG\", \"BIF\", \"BMD\", \"BND\", \"XLM\", \"BNB\", \"SCR\", \"BAT\", \"CRO\", \"HT\", \"KCS\", \"LEO\", \"LINK\", \"MKR\", \"NPXS\", \"OMG\", \"REP\", \"ZB\", \"ZIL\", \"ZRX\", \"BCH\", \"BZD\", \"CUP\", \"CVE\", \"DJF\", \"DZD\", \"ERN\", \"ETB\", \"FJD\", \"FKP\", \"BUSD\", \"ANCT\", \"ALL\", \"AMD\", \"ANG\", \"CNYX\", \"IQD\", \"UZS\", \"TND\", \"GGP\", \"XAU\", \"KGS\", \"GIP\", \"JMD\", \"ZEC\", \"USDP\", \"BSV\", \"EMC2\", \"SNT\", \"GTO\", \"POWR\", \"EUSD\", \"EURT\", \"BCY\", \"BTS\", \"ATM\", \"BLOCKPAY\", \"ARDR\", \"AMP\", \"B2X\", \"BITGOLD\", \"BITEUR\", \"ATB\", \"BITUSD\", \"AGRS\", \"DFXT\", \"HIKEN\", \"BIX\", \"KNC\", \"EOS\", \"COB\", \"COSS\", \"BMH\", \"NANO\", \"BDG\", \"BNT\", \"XVG\", \"LKK1Y\", \"LKK\", \"USDK\", \"EURN\", \"NZDT\", \"JSE\", \"GMD\", \"GNF\", \"GYD\", \"YER\", \"XPF\", \"HTG\", \"SLL\", \"SOS\", \"WST\", \"SVC\", \"SYP\", \"NEO\", \"KMF\", \"JUMP\", \"AYA\", \"BLAST\", \"WGR\", \"BCN\", \"BTG\", \"URALS\", \"INN\", \"USDQ\", \"CNH\", \"HUSD\", \"BKRW\", \"NZDX\", \"EURX\", \"CADX\", \"USDEX\", \"JPYX\", \"AUDX\", \"VNDC\", \"EON\", \"GBPX\", \"CHFX\", \"USDJ\", \"IDRT\", \"USDS\", \"USDN\", \"BIDR\", \"IDK\", \"BSD\", \"BTN\", \"KYD\", \"NIO\", \"SBD\", \"SDG\", \"SHP\", \"TOP\", \"XCD\", \"XCHF\", \"CNYT\", \"GYEN\", \"ZUSD\", \"GOLD\", \"TRX\", \"TRYB\", \"PLATC\", \"STRAX\", \"UST\", \"GLM\", \"VAI\", \"BRZ\", \"DDRST\", \"XAUT\", \"MIM\"];\n/**\n * currencies supported by the payment provider\n * Last updated: Date of commit\n */\nconst PROVIDER_SUPPORTED_FIAT_CURRENCIES = {\n  // https://integrations.simplex.com/supported_currencies\n  // https://support.moonpay.com/hc/en-gb/articles/360011931457-Which-fiat-currencies-are-supported-\n  [PAYMENT_PROVIDER.MOONPAY]: [\"AUD\", \"BGN\", \"BRL\", \"CAD\", \"CHF\", \"CNY\", \"COP\", \"CZK\", \"DKK\", \"DOP\", \"EGP\", \"EUR\", \"GBP\", \"HKD\", \"HRK\", \"IDR\", \"ILS\", \"JPY\", \"JOD\", \"KES\", \"KRW\", \"KWD\", \"LKR\", \"MAD\", \"MXN\", \"MYR\", \"NGN\", \"NOK\", \"NZD\", \"OMR\", \"PEN\", \"PKR\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"TWD\", \"USD\", \"VND\", \"ZAR\"],\n  /**\n   * https://docs.sendwyre.com/docs/supported-currencies#fiat\n   * The ones where credit card is supported\n   */\n  [PAYMENT_PROVIDER.WYRE]: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"NZD\", \"ARS\", \"BRL\", \"CHF\", \"CLP\", \"COP\", \"CZK\", \"DKK\", \"HKD\", \"ILS\", \"INR\", \"ISK\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"PHP\", \"PLN\", \"SEK\", \"THB\", \"VND\", \"ZAR\"],\n  // https://support.ramp.network/en/articles/471-why-am-i-paying-in-usd-eur-gbp\n  [PAYMENT_PROVIDER.RAMPNETWORK]: [\"USD\", \"EUR\", \"GBP\"],\n  // From https://xanpool.com/ fiat select dropdown\n  [PAYMENT_PROVIDER.XANPOOL]: [\"SGD\", \"HKD\", \"THB\", \"PHP\", \"INR\", \"IDR\", \"MYR\", \"AUD\", \"NZD\", \"KRW\"],\n  // https://support.aax.com/en/articles/5295762-mercuryo\n  // RUB / UAH currently not supported\n  [PAYMENT_PROVIDER.MERCURYO]: [\"EUR\", \"USD\", \"GBP\", \"TRY\", \"JPY\", \"BRL\", \"NGN\", \"VND\", \"MXN\", \"KRW\"],\n  /**\n   * https://support.transak.com/hc/en-us/articles/360020615578-Credit-and-Debit-Card-Payments-through-Transak\n   * or\n   * https://transak.stoplight.io/docs/transak-docs/b3A6OTk1ODQ0-2-get-fiat-currencies\n   */\n  [PAYMENT_PROVIDER.TRANSAK]: [\"ARS\", \"AUD\", \"BBD\", \"BGN\", \"BMD\", \"BRL\", \"CAD\", \"CHF\", \"CLP\", \"CRC\", \"CZK\", \"DKK\", \"DOP\", \"EUR\", \"FJD\", \"FKP\", \"GBP\", \"GIP\", \"HRK\", \"HUF\", \"IDR\", \"ILS\", \"ISK\", \"JMD\", \"JPY\", \"KES\", \"KRW\", \"MDL\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PEN\", \"PHP\", \"PLN\", \"PYG\", \"RON\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"TZS\", \"USD\", \"ZAR\"],\n  [PAYMENT_PROVIDER.BANXA]: [\"EUR\", \"GBP\", \"USD\"]\n};\nconst cryptoCompareCurrenciesSet = new Set(CRYPTO_COMPARE_CURRENCIES);\n/**\n * Fiat currencies that we support\n */\nfunction supportedFiatCurrencies(provider) {\n  const providerSupportedFiatCurrencies = PROVIDER_SUPPORTED_FIAT_CURRENCIES[provider];\n  return providerSupportedFiatCurrencies.filter(currency => cryptoCompareCurrenciesSet.has(currency));\n}\n\nconst paymentProviders$1 = {\n  [PAYMENT_PROVIDER.MOONPAY]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"4.5% or 5 USD\",\n    line3: \"2,000€/day, 10,000€/mo\",\n    supportPage: \"https://help.moonpay.io/en/\",\n    minOrderValue: 24.99,\n    maxOrderValue: 50000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MOONPAY),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"aave\",\n        display: \"AAVE\"\n      }, {\n        value: \"bat\",\n        display: \"BAT\"\n      }, {\n        value: \"dai\",\n        display: \"DAI\"\n      }, {\n        value: \"eth\",\n        display: \"ETH\"\n      }, {\n        value: \"mkr\",\n        display: \"MKR\"\n      }, {\n        value: \"matic\",\n        display: \"MATIC\"\n      }, {\n        value: \"usdt\",\n        display: \"USDT\"\n      }, {\n        value: \"usdc\",\n        display: \"USDC\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"eth_polygon\",\n        display: \"ETH\"\n      }, {\n        value: \"matic_polygon\",\n        display: \"MATIC\"\n      }, {\n        value: \"usdc_polygon\",\n        display: \"USDC\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"bnb_bsc\",\n        display: \"BNB\"\n      }, {\n        value: \"busd_bsc\",\n        display: \"BUSD\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"avax_cchain\",\n        display: \"AVAX\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.WYRE]: {\n    line1: \"Apple Pay/ Debit/ Credit Card\",\n    line2: \"4.9% + 30¢ or 5 USD\",\n    line3: \"$250/day\",\n    supportPage: \"https://support.sendwyre.com/en/\",\n    minOrderValue: 5,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.WYRE),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"MKR\",\n        display: \"MKR\"\n      }, {\n        value: \"UNI\",\n        display: \"UNI\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"MUSDC\",\n        display: \"USDC\"\n      }],\n      // AVAXC? or AVAX?\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAXC\",\n        display: \"AVAXC\"\n      }]\n    },\n    includeFees: false,\n    api: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.RAMPNETWORK]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://instant.ramp.network/\",\n    minOrderValue: 50,\n    maxOrderValue: 20000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.RAMPNETWORK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"MATIC_DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"MATIC_MATIC\",\n        display: \"MATIC\"\n      }, {\n        value: \"MATIC_USDC\",\n        display: \"USDC\"\n      }],\n      // what about AVAXC?\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAX\",\n        display: \"AVAX\"\n      }]\n      // Temporary unavailable\n      // [SUPPORTED_PAYMENT_NETWORK.XDAI]: [{ value: 'XDAI_XDAI', display: 'XDAI' }],\n    },\n\n    includeFees: true,\n    api: true,\n    receiveHint: \"walletTopUp.receiveHintRamp\",\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.XANPOOL]: {\n    line1: \"PayNow/ InstaPay/ FPS/ GoJekPay/ UPI/ PromptPay/ <br>ViettelPay/ DuitNow\",\n    line2: \"2.5% buying, 3% selling\",\n    line3: \"$2,500 / day\",\n    supportPage: \"mailto:support@xanpool.com\",\n    minOrderValue: 100,\n    maxOrderValue: 2500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.XANPOOL),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    sell: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.MERCURYO]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"3.95% or 4 USD\",\n    line3: \"10,000€/day, 25,000€/mo\",\n    supportPage: \"mailto:support@mercuryo.io\",\n    minOrderValue: 30,\n    maxOrderValue: 5000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MERCURYO),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"BNB\",\n        display: \"BNB\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }, {\n        value: \"1INCH\",\n        display: \"1INCH\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.TRANSAK]: {\n    line1: \"Apple & Google Pay / Credit/Debit Card<br/>Bangkok Bank Mobile & iPay<br/>Bank Transfer (sepa/gbp) / SCB Mobile & Easy\",\n    line2: \"0.99% - 5.5% or 5 USD\",\n    line3: \"$5,000/day, $28,000/mo\",\n    supportPage: \"https://support.transak.com/hc/en-US\",\n    minOrderValue: 30,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.TRANSAK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"MATIC\",\n        display: \"MATIC\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }, {\n        value: \"WETH\",\n        display: \"WETH\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"BNB\",\n        display: \"BNB\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAX\",\n        display: \"AVAX\"\n      }]\n    },\n    includeFees: true,\n    enforceMax: true\n  },\n  [PAYMENT_PROVIDER.BANXA]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://support.banxa.com\",\n    minOrderValue: 20,\n    maxOrderValue: 15000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.BANXA),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }, {\n        value: \"LINK\",\n        display: \"LINK\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"CHZ\",\n        display: \"CHZ\"\n      }, {\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"MANA\",\n        display: \"MANA\"\n      }, {\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"COMP\",\n        display: \"COMP\"\n      }, {\n        value: \"ENJ\",\n        display: \"ENJ\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"MATIC\",\n        display: \"MATIC\"\n      }]\n      // [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{ value: \"BNB\", display: \"BNB\" }],\n    },\n\n    includeFees: true,\n    enforceMax: true\n  }\n};\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: Object.values(WALLET_VERIFIERS),\n  paymentProviders: paymentProviders$1,\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKeyPrefix: `torus-`\n};\n\nconst runOnLoad = fn => new Promise((resolve, reject) => {\n  if (window.document.body != null) {\n    Promise.resolve(fn()).then(resolve).catch(reject);\n  } else {\n    window.document.addEventListener(\"DOMContentLoaded\", () => {\n      Promise.resolve(fn()).then(resolve).catch(reject);\n    });\n  }\n});\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\nconst handleEvent = function (handle, eventName, handler) {\n  for (var _len = arguments.length, handlerArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    handlerArgs[_key - 3] = arguments[_key];\n  }\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\nconst handleStream = (handle, eventName, handler) => {\n  const handlerWrapper = chunk => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n  handle.on(eventName, handlerWrapper);\n};\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\n\nvar log = loglevel.getLogger(\"torus-embed\");\n\nvar messages = {\n  errors: {\n    disconnected: () => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: () => \"Torus: Disconnected from iframe. Page reload required.\",\n    sendSiteMetadata: () => \"Torus: Failed to send site metadata. This is an internal error, please report this bug.\",\n    unsupportedSync: method => `Torus: The Torus Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: () => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners, shouldSendMetadata) => `Invalid options. Received: { maxEventListeners: ${maxEventListeners}, shouldSendMetadata: ${shouldSendMetadata} }`,\n    invalidRequestArgs: () => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: () => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: () => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: () => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: method => `'args.logger' must include required method '${method}'.`\n  },\n  info: {\n    connected: chainId => `Torus: Connected to chain with ID \"${chainId}\".`\n  },\n  warnings: {\n    // deprecated methods\n    enableDeprecation: 'Torus: \"\"ethereum.enable()\" is deprecated and may be removed in the future. ' + 'Please use \"ethereum.send(\"eth_requestAccounts\")\" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',\n    sendDeprecation: 'Torus: \"ethereum.send(...)\" is deprecated and may be removed in the future.' + ' Please use \"ethereum.sendAsync(...)\" or \"ethereum.request(...)\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    events: {\n      close: 'Torus: The event \"close\" is deprecated and may be removed in the future. Please use \"disconnect\" instead.' + \"\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193\",\n      data: 'Torus: The event \"data\" is deprecated and will be removed in the future.' + 'Use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message',\n      networkChanged: 'Torus: The event \"networkChanged\" is deprecated and may be removed in the future.' + ' Please use \"chainChanged\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n      notification: 'Torus: The event \"notification\" is deprecated and may be removed in the future. ' + 'Please use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193'\n    },\n    publicConfigStore: 'Torus: The property \"publicConfigStore\" is deprecated and WILL be removed in the future.'\n  }\n};\n\nconst {\n  paymentProviders\n} = configuration;\nconst validatePaymentProvider = (provider, params) => {\n  const errors = {};\n  if (!provider) {\n    return {\n      errors,\n      isValid: true\n    };\n  }\n  if (provider && !paymentProviders[provider]) {\n    errors.provider = \"Invalid Provider\";\n    return {\n      errors,\n      isValid: Object.keys(errors).length === 0\n    };\n  }\n  const selectedProvider = paymentProviders[provider];\n  const selectedParams = params || {};\n  // set default values\n  // if (!selectedParams.selectedCurrency) [selectedParams.selectedCurrency] = selectedProvider.validCurrencies\n  // if (!selectedParams.fiatValue) selectedParams.fiatValue = selectedProvider.minOrderValue\n  // if (!selectedParams.selectedCryptoCurrency) [selectedParams.selectedCryptoCurrency] = selectedProvider.validCryptoCurrencies\n  // validations\n  if (selectedParams.fiatValue) {\n    const requestedOrderAmount = +parseFloat(selectedParams.fiatValue.toString()) || 0;\n    if (requestedOrderAmount < selectedProvider.minOrderValue) errors.fiatValue = \"Requested amount is lower than supported\";\n    if (requestedOrderAmount > selectedProvider.maxOrderValue && selectedProvider.enforceMax) errors.fiatValue = \"Requested amount is higher than supported\";\n  }\n  if (selectedParams.selectedCurrency && !selectedProvider.validCurrencies.includes(selectedParams.selectedCurrency)) {\n    errors.selectedCurrency = \"Unsupported currency\";\n  }\n  if (selectedParams.selectedCryptoCurrency) {\n    const validCryptoCurrenciesByChain = Object.values(selectedProvider.validCryptoCurrenciesByChain).flat().map(currency => currency.value);\n    const finalCryptoCurrency = provider === PAYMENT_PROVIDER.MOONPAY ? selectedParams.selectedCryptoCurrency.toLowerCase() : selectedParams.selectedCryptoCurrency;\n    if (validCryptoCurrenciesByChain && !validCryptoCurrenciesByChain.includes(finalCryptoCurrency)) errors.selectedCryptoCurrency = \"Unsupported cryptoCurrency\";\n  }\n  return {\n    errors,\n    isValid: Object.keys(errors).length === 0\n  };\n};\n// utility functions\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nfunction createErrorMiddleware() {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: req\n      });\n    }\n    next(done => {\n      const {\n        error\n      } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`MetaMask - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  let warningMsg = `MetaMask: Lost connection to \"${remoteLabel}\".`;\n  if (error?.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\nconst getPreopenInstanceId = () => Math.random().toString(36).slice(2);\nconst getTorusUrl = async (buildEnv, integrity) => {\n  let torusUrl;\n  let logLevel;\n  // Do not change this line\n  const version = \"1.41.2\";\n  let versionUsed = integrity.version || version;\n  try {\n    if ((buildEnv === \"binance\" || buildEnv === \"production\") && !integrity.version) {\n      let response;\n      if (!configuration.prodTorusUrl) response = await get(`${configuration.api}/latestversion?name=@toruslabs/torus-embed&version=${version}`, {}, {\n        useAPIKey: true\n      });else response = {\n        data: configuration.prodTorusUrl\n      };\n      versionUsed = response.data;\n      // eslint-disable-next-line require-atomic-updates\n      configuration.prodTorusUrl = response.data;\n    }\n  } catch (error) {\n    log.error(error, \"unable to fetch latest version\");\n  }\n  log.info(\"version used: \", versionUsed);\n  switch (buildEnv) {\n    case \"binance\":\n      torusUrl = `https://binance.tor.us/v${versionUsed}`;\n      logLevel = \"info\";\n      break;\n    case \"testing\":\n      torusUrl = \"https://testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"bnb\":\n      torusUrl = \"https://bnb.tor.us\";\n      logLevel = \"error\";\n      break;\n    case \"polygon\":\n      torusUrl = \"https://polygon.tor.us\";\n      logLevel = \"error\";\n      break;\n    case \"lrc\":\n      torusUrl = \"https://lrc.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"beta\":\n      torusUrl = \"https://beta.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"development\":\n      torusUrl = \"http://localhost:4050\";\n      logLevel = \"debug\";\n      break;\n    default:\n      torusUrl = `https://app.tor.us/v${versionUsed}`;\n      logLevel = \"error\";\n      break;\n  }\n  return {\n    torusUrl,\n    logLevel\n  };\n};\nconst getUserLanguage = () => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\nconst EMITTED_NOTIFICATIONS = [\"eth_subscription\" // per eth-json-rpc-filters/subscriptionManager\n];\n\nconst NOOP = () => {\n  // empty function\n};\nconst FEATURES_PROVIDER_CHANGE_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375\";\nconst FEATURES_DEFAULT_WALLET_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315\";\nconst FEATURES_CONFIRM_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450\";\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nSafeEventEmitter.defaultMaxListeners = 100;\n// resolve response.result, reject errors\nconst getRpcPromiseCallback = function (resolve, reject) {\n  let unwrapResult = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return (error, response) => {\n    if (error || response.error) {\n      return reject(error || response.error);\n    }\n    return !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  };\n};\nclass TorusInpageProvider extends SafeEventEmitter {\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n\n  constructor(connectionStream) {\n    let {\n      maxEventListeners = 100,\n      shouldSendMetadata = true,\n      jsonRpcStreamName = \"provider\"\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    _defineProperty(this, \"chainId\", void 0);\n    _defineProperty(this, \"selectedAddress\", void 0);\n    _defineProperty(this, \"_rpcEngine\", void 0);\n    _defineProperty(this, \"networkVersion\", void 0);\n    _defineProperty(this, \"shouldSendMetadata\", void 0);\n    _defineProperty(this, \"isTorus\", void 0);\n    _defineProperty(this, \"_publicConfigStore\", void 0);\n    _defineProperty(this, \"tryPreopenHandle\", void 0);\n    _defineProperty(this, \"enable\", void 0);\n    _defineProperty(this, \"_state\", void 0);\n    _defineProperty(this, \"_jsonRpcConnection\", void 0);\n    _defineProperty(this, \"_sentWarnings\", {\n      // methods\n      enable: false,\n      experimentalMethods: false,\n      send: false,\n      publicConfigStore: false,\n      // events\n      events: {\n        close: false,\n        data: false,\n        networkChanged: false,\n        notification: false\n      }\n    });\n    if (!duplex(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n    // private state\n    this._state = _objectSpread$1({}, TorusInpageProvider._defaultState);\n    // public state\n    this.selectedAddress = null;\n    this.networkVersion = null;\n    this.chainId = null;\n    this.shouldSendMetadata = shouldSendMetadata;\n    // bind functions (to prevent e.g. web3@1.x from making unbound calls)\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._sendSync = this._sendSync.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._warnOfDeprecation = this._warnOfDeprecation.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n    this.request = this.request.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"MetaMask\"));\n    // subscribe to metamask public config (one-way)\n    this._publicConfigStore = new ObservableStore({\n      storageKey: \"Metamask-Config\"\n    });\n    // handle isUnlocked changes, and chainChanged and networkChanged events\n    // this._publicConfigStore.subscribe((stringifiedState) => {\n    //   // This is because we are using store as string\n    //   const state = JSON.parse(stringifiedState as unknown as string);\n    //   if (\"isUnlocked\" in state && state.isUnlocked !== this._state.isUnlocked) {\n    //     this._state.isUnlocked = state.isUnlocked;\n    //     if (!this._state.isUnlocked) {\n    //       // accounts are never exposed when the extension is locked\n    //       this._handleAccountsChanged([]);\n    //     } else {\n    //       // this will get the exposed accounts, if any\n    //       try {\n    //         this._rpcRequest(\n    //           { method: \"eth_accounts\", params: [] },\n    //           NOOP,\n    //           true // indicating that eth_accounts _should_ update accounts\n    //         );\n    //       } catch (_) {\n    //         // Swallow error\n    //       }\n    //     }\n    //   }\n    //   if (\"selectedAddress\" in state && this.selectedAddress !== state.selectedAddress) {\n    //     try {\n    //       this._rpcRequest(\n    //         { method: \"eth_accounts\", params: [] },\n    //         NOOP,\n    //         true // indicating that eth_accounts _should_ update accounts\n    //       );\n    //     } catch (_) {\n    //       // Swallow error\n    //     }\n    //   }\n    //   // Emit chainChanged event on chain change\n    //   if (\"chainId\" in state && state.chainId !== this.chainId) {\n    //     this.chainId = state.chainId || null;\n    //     this.emit(\"chainChanged\", this.chainId);\n    //     // indicate that we've connected, for EIP-1193 compliance\n    //     // we do this here so that iframe can initialize\n    //     if (!this._state.hasEmittedConnection) {\n    //       this._handleConnect(this.chainId);\n    //       this._state.hasEmittedConnection = true;\n    //     }\n    //   }\n    //   // Emit networkChanged event on network change\n    //   if (\"networkVersion\" in state && state.networkVersion !== this.networkVersion) {\n    //     this.networkVersion = state.networkVersion || null;\n    //     this.emit(\"networkChanged\", this.networkVersion);\n    //   }\n    // });\n    pump(mux.createStream(\"publicConfig\"), storeAsStream(this._publicConfigStore),\n    // RPC requests should still work if only this stream fails\n    logStreamDisconnectWarning.bind(this, \"MetaMask PublicConfigStore\"));\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n    // setup own event listeners\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n    // connect to async provider\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, this._handleStreamDisconnect.bind(this, \"MetaMask RpcProvider\"));\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n    // json rpc notification listener\n    jsonRpcConnection.events.on(\"notification\", payload => {\n      const {\n        method,\n        params\n      } = payload;\n      if (method === \"wallet_accountsChanged\") {\n        this._handleAccountsChanged(params);\n      } else if (method === \"wallet_unlockStateChanged\") {\n        this._handleUnlockStateChanged(params);\n      } else if (method === \"wallet_chainChanged\") {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(payload.method)) {\n        // EIP 1193 subscriptions, per eth-json-rpc-filters/subscriptionManager\n        this.emit(\"data\", payload); // deprecated\n        this.emit(\"notification\", params.result);\n        this.emit(\"message\", {\n          type: method,\n          data: params\n        });\n      }\n      // Backward compatibility for older non EIP 1193 subscriptions\n      // this.emit('data', null, payload)\n    });\n  }\n\n  get publicConfigStore() {\n    if (!this._sentWarnings.publicConfigStore) {\n      log.warn(messages.warnings.publicConfigStore);\n      this._sentWarnings.publicConfigStore = true;\n    }\n    return this._publicConfigStore;\n  }\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected() {\n    return this._state.isConnected;\n  }\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args\n      });\n    }\n    const {\n      method,\n      params\n    } = args;\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args\n      });\n    }\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args\n      });\n    }\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n  sendAsync(payload, callback) {\n    this._rpcRequest(payload, callback);\n  }\n  /**\n   * We override the following event methods so that we can warn consumers\n   * about deprecated events:\n   *   addListener, on, once, prependListener, prependOnceListener\n   */\n  addListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.addListener(eventName, listener);\n  }\n  on(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.on(eventName, listener);\n  }\n  once(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.once(eventName, listener);\n  }\n  prependListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.prependListener(eventName, listener);\n  }\n  prependOnceListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.prependOnceListener(eventName, listener);\n  }\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async _initializeState() {\n    try {\n      const {\n        accounts,\n        chainId,\n        isUnlocked,\n        networkVersion\n      } = await this.request({\n        method: \"wallet_getProviderState\"\n      });\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", {\n        chainId\n      });\n      this._handleChainChanged({\n        chainId,\n        networkVersion\n      });\n      this._handleUnlockStateChanged({\n        accounts,\n        isUnlocked\n      });\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"MetaMask: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @param isInternal - false - Whether the request is internal.\n   */\n  _rpcRequest(payload, callback) {\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n      if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n        // handle accounts changing\n        cb = (err, res) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload, cb);\n        return;\n      }\n    }\n    this.tryPreopenHandle(_payload, cb);\n  }\n  send(methodOrPayload, callbackOrArgs) {\n    if (!this._sentWarnings.send) {\n      log.warn(messages.warnings.sendDeprecation);\n      this._sentWarnings.send = true;\n    }\n    if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest({\n            method: methodOrPayload,\n            params: callbackOrArgs\n          }, getRpcPromiseCallback(resolve, reject, false));\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n    if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n      return this._rpcRequest(methodOrPayload, callbackOrArgs);\n    }\n    return this._sendSync(methodOrPayload);\n  }\n  /**\n   * DEPRECATED.\n   * Internal backwards compatibility method, used in send.\n   */\n  _sendSync(payload) {\n    let result;\n    switch (payload.method) {\n      case \"eth_accounts\":\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n      case \"eth_coinbase\":\n        result = this.selectedAddress || null;\n        break;\n      case \"eth_uninstallFilter\":\n        this._rpcRequest(payload, NOOP);\n        result = true;\n        break;\n      case \"net_version\":\n        result = this.networkVersion || null;\n        break;\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result\n    };\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits MetaMaskInpageProvider#connect\n   */\n  _handleConnect(chainId) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        chainId\n      });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits MetaMaskInpageProvider#disconnect\n   */\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013,\n        // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011,\n        // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n      this.emit(\"disconnect\", error);\n    }\n  }\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits MetamaskInpageProvider#disconnect\n   */\n  _handleStreamDisconnect(streamName, error) {\n    logStreamDisconnectWarning(streamName, error, this);\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n  /**\n   * Called when accounts may have changed.\n   */\n  _handleAccountsChanged(accounts) {\n    let isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"MetaMask: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"MetaMask: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('MetaMask: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n      this._state.accounts = finalAccounts;\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = finalAccounts[0] || null;\n    }\n  }\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits MetamaskInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  _handleChainChanged() {\n    let {\n      chainId,\n      networkVersion\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!chainId || !networkVersion) {\n      log.error(\"MetaMask: Received invalid network parameters. Please report this bug.\", {\n        chainId,\n        networkVersion\n      });\n      return;\n    }\n    if (networkVersion === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  _handleUnlockStateChanged() {\n    let {\n      accounts,\n      isUnlocked\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\", {\n        isUnlocked\n      });\n      return;\n    }\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n  /**\n   * Warns of deprecation for the given event, if applicable.\n   */\n  _warnOfDeprecation(eventName) {\n    if (this._sentWarnings.events[eventName] === false) {\n      log.warn(messages.warnings.events[eventName]);\n      this._sentWarnings.events[eventName] = true;\n    }\n  }\n}\n_defineProperty(TorusInpageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\n\nconst defaults = options => ({\n  algorithms: options.algorithms || [\"sha256\"],\n  delimiter: options.delimiter || \" \",\n  full: options.full || false\n});\n// Generate list of hashes\nconst hashes = (options, data) => {\n  const internalHashes = {};\n  options.algorithms.forEach(algorithm => {\n    internalHashes[algorithm] = createHash(algorithm).update(data, \"utf8\").digest(\"base64\");\n  });\n  return internalHashes;\n};\n// Build an integrity string\nconst integrity = (options, sri) => {\n  let output = \"\";\n  // Hash list\n  output += Object.keys(sri.hashes).map(algorithm => `${algorithm}-${sri.hashes[algorithm]}`).join(options.delimiter);\n  return output;\n};\nconst main = (options, data) => {\n  // Defaults\n  const finalOptions = defaults(options);\n  const sri = {\n    hashes: hashes(finalOptions, data),\n    integrity: undefined\n  };\n  sri.integrity = integrity(finalOptions, sri);\n  return finalOptions.full ? sri : sri.integrity;\n};\n\nclass PopupHandler extends EventEmitter {\n  constructor(_ref) {\n    let {\n      url,\n      target,\n      features\n    } = _ref;\n    super();\n    _defineProperty(this, \"url\", void 0);\n    _defineProperty(this, \"target\", void 0);\n    _defineProperty(this, \"features\", void 0);\n    _defineProperty(this, \"window\", void 0);\n    _defineProperty(this, \"windowTimer\", void 0);\n    _defineProperty(this, \"iClosedWindow\", void 0);\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this._setupTimer();\n  }\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n        if (!this.iClosedWindow) {\n          this.emit(\"close\");\n        }\n        this.iClosedWindow = false;\n        this.window = undefined;\n      }\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n  open() {\n    this.window = window.open(this.url.href, this.target, this.features);\n    if (this.window?.focus) this.window.focus();\n  }\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\nfunction imgExists(url) {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = window => {\n  const {\n    document\n  } = window;\n  const siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n  const metaTitle = document.querySelector('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window) {\n  const {\n    document\n  } = window;\n  // Use the site's favicon if it exists\n  let icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n  // Search through available icons in no particular order\n  icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(_icon => Boolean(_icon.href));\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n  return null;\n}\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window)\n});\n/**\n * Sends site metadata over an RPC request.\n */\nasync function sendSiteMetadata(engine) {\n  try {\n    const domainMetadata = await getSiteMetadata();\n    // call engine.handle directly to avoid normal RPC request handling\n    engine.handle({\n      jsonrpc: \"2.0\",\n      id: getPreopenInstanceId(),\n      method: \"wallet_sendDomainMetadata\",\n      params: domainMetadata\n    }, NOOP);\n  } catch (error) {\n    log.error({\n      message: messages.errors.sendSiteMetadata(),\n      originalError: error\n    });\n  }\n}\n\nconst _excluded = [\"host\", \"chainId\", \"networkName\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nconst defaultVerifiers = {\n  [LOGIN_PROVIDER.GOOGLE]: true,\n  [LOGIN_PROVIDER.FACEBOOK]: true,\n  [LOGIN_PROVIDER.REDDIT]: true,\n  [LOGIN_PROVIDER.TWITCH]: true,\n  [LOGIN_PROVIDER.DISCORD]: true\n};\nconst iframeIntegrity = \"sha384-3tlMXFGy54V0YicIYCWAnajj2vGhPEirfxGIojxbDKfObgMa/Keub1EtL3ka8YEL\";\nconst expectedCacheControlHeader = \"max-age=3600\";\nconst UNSAFE_METHODS = [\"eth_sendTransaction\", \"eth_signTypedData\", \"eth_signTypedData_v3\", \"eth_signTypedData_v4\", \"personal_sign\", \"eth_getEncryptionPublicKey\", \"eth_decrypt\", \"wallet_addEthereumChain\", \"wallet_switchEthereumChain\"];\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const {\n      torusUrl\n    } = await getTorusUrl(\"production\", {\n      check: false,\n      hash: iframeIntegrity,\n      version: \"\"\n    });\n    torusIframeHtml.href = `${torusUrl}/popup`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\nclass Torus {\n  constructor() {\n    let {\n      buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n      buttonSize = 56,\n      modalZIndex = 99999,\n      apiKey = \"torus-default\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _defineProperty(this, \"buttonPosition\", BUTTON_POSITION.BOTTOM_LEFT);\n    _defineProperty(this, \"buttonSize\", void 0);\n    _defineProperty(this, \"torusUrl\", void 0);\n    _defineProperty(this, \"torusIframe\", void 0);\n    _defineProperty(this, \"styleLink\", void 0);\n    _defineProperty(this, \"isLoggedIn\", void 0);\n    _defineProperty(this, \"isInitialized\", void 0);\n    _defineProperty(this, \"torusWidgetVisibility\", void 0);\n    _defineProperty(this, \"torusAlert\", void 0);\n    _defineProperty(this, \"apiKey\", void 0);\n    _defineProperty(this, \"modalZIndex\", void 0);\n    _defineProperty(this, \"alertZIndex\", void 0);\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n    _defineProperty(this, \"isIframeFullScreen\", void 0);\n    _defineProperty(this, \"whiteLabel\", void 0);\n    _defineProperty(this, \"requestedVerifier\", void 0);\n    _defineProperty(this, \"currentVerifier\", void 0);\n    _defineProperty(this, \"embedTranslations\", void 0);\n    _defineProperty(this, \"ethereum\", void 0);\n    _defineProperty(this, \"provider\", void 0);\n    _defineProperty(this, \"communicationMux\", void 0);\n    _defineProperty(this, \"isLoginCallback\", void 0);\n    _defineProperty(this, \"paymentProviders\", configuration.paymentProviders);\n    _defineProperty(this, \"loginHint\", \"\");\n    _defineProperty(this, \"useWalletConnect\", void 0);\n    _defineProperty(this, \"isCustomLogin\", false);\n    this.buttonPosition = buttonPosition;\n    this.buttonSize = buttonSize;\n    this.torusUrl = \"\";\n    this.isLoggedIn = false; // ethereum.enable working\n    this.isInitialized = false; // init done\n    this.torusWidgetVisibility = true;\n    this.requestedVerifier = \"\";\n    this.currentVerifier = \"\";\n    // this.nodeDetailManager = new NodeDetailManager();\n    // this.torusJs = new TorusJs({\n    //   metadataHost: \"https://metadata.tor.us\",\n    //   allowHost: \"https://signer.tor.us/api/allow\",\n    //   network: \"mainnet\",\n    // });\n    this.apiKey = apiKey;\n    setAPIKey(apiKey);\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.isIframeFullScreen = false;\n  }\n  async init() {\n    let {\n      buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n      enableLogging = false,\n      // deprecated: use loginConfig instead\n      enabledVerifiers = defaultVerifiers,\n      network = {\n        host: \"mainnet\",\n        chainId: null,\n        networkName: \"\",\n        blockExplorer: \"\",\n        ticker: \"\",\n        tickerName: \"\"\n      },\n      loginConfig = {},\n      showTorusButton = true,\n      integrity = {\n        check: false,\n        hash: iframeIntegrity,\n        version: \"\"\n      },\n      whiteLabel,\n      skipTKey = false,\n      useWalletConnect = false,\n      mfaLevel = \"default\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    const {\n      torusUrl,\n      logLevel\n    } = await getTorusUrl(buildEnv, integrity);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    this.whiteLabel = whiteLabel;\n    this.useWalletConnect = useWalletConnect;\n    this.isCustomLogin = !!(loginConfig && Object.keys(loginConfig).length > 0) || !!(whiteLabel && Object.keys(whiteLabel).length > 0);\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();else log.disableAll();\n    this.torusWidgetVisibility = showTorusButton;\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"popup\";else torusIframeUrl.pathname += \"/popup\";\n    torusIframeUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n    // Iframe code\n    this.torusIframe = htmlToElement(`<iframe\n        id=\"torusIframe\"\n        allow=${useWalletConnect ? \"camera\" : \"\"}\n        class=\"torusIframe\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%; color-scheme: none;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex}\"\n      ></iframe>`);\n    this.torusAlertContainer = htmlToElement('<div id=\"torusAlertContainer\"></div>');\n    this.torusAlertContainer.style.display = \"none\";\n    this.torusAlertContainer.style.setProperty(\"z-index\", this.alertZIndex.toString());\n    const link = window.document.createElement(\"link\");\n    link.setAttribute(\"rel\", \"stylesheet\");\n    link.setAttribute(\"type\", \"text/css\");\n    link.setAttribute(\"href\", `${torusUrl}/css/widget.css`);\n    this.styleLink = link;\n    const {\n      defaultLanguage = getUserLanguage(),\n      customTranslations = {}\n    } = this.whiteLabel || {};\n    const mergedTranslations = deepmerge(configuration.translations, customTranslations);\n    const languageTranslations = mergedTranslations[defaultLanguage] || configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n    const handleSetup = async () => {\n      await documentReady();\n      return new Promise((resolve, reject) => {\n        this.torusIframe.onload = async () => {\n          // only do this if iframe is not full screen\n          this._setupWeb3();\n          const initStream = this.communicationMux.getStream(\"init_stream\");\n          initStream.on(\"data\", chunk => {\n            const {\n              name,\n              data,\n              error\n            } = chunk;\n            if (name === \"init_complete\" && data.success) {\n              // resolve promise\n              this.isInitialized = true;\n              this._displayIframe(this.isIframeFullScreen);\n              resolve(undefined);\n            } else if (error) {\n              reject(new Error(error));\n            }\n          });\n          initStream.write({\n            name: \"init_stream\",\n            data: {\n              enabledVerifiers,\n              loginConfig,\n              whiteLabel: this.whiteLabel,\n              buttonPosition: this.buttonPosition,\n              buttonSize: this.buttonSize,\n              torusWidgetVisibility: this.torusWidgetVisibility,\n              apiKey: this.apiKey,\n              skipTKey,\n              network,\n              mfaLevel\n            }\n          });\n        };\n        window.document.head.appendChild(this.styleLink);\n        window.document.body.appendChild(this.torusIframe);\n        window.document.body.appendChild(this.torusAlertContainer);\n      });\n    };\n    if (buildEnv === \"production\" && integrity.check) {\n      // hacky solution to check for iframe integrity\n      const fetchUrl = `${torusUrl}/popup`;\n      const resp = await fetch(fetchUrl, {\n        cache: \"reload\"\n      });\n      if (resp.headers.get(\"Cache-Control\") !== expectedCacheControlHeader) {\n        throw new Error(`Unexpected Cache-Control headers, got ${resp.headers.get(\"Cache-Control\")}`);\n      }\n      const response = await resp.text();\n      const calculatedIntegrity = main({\n        algorithms: [\"sha384\"]\n      }, response);\n      log.info(calculatedIntegrity, \"integrity\");\n      if (calculatedIntegrity === integrity.hash) {\n        await handleSetup();\n      } else {\n        this.clearInit();\n        throw new Error(\"Integrity check failed\");\n      }\n    } else {\n      await handleSetup();\n    }\n    return undefined;\n  }\n  login() {\n    let {\n      verifier = \"\",\n      login_hint: loginHint = \"\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    this.requestedVerifier = verifier;\n    this.loginHint = loginHint;\n    return this.ethereum.enable();\n  }\n  logout() {\n    return new Promise((resolve, reject) => {\n      if (!this.isLoggedIn) {\n        reject(new Error(\"User has not logged in yet\"));\n        return;\n      }\n      const logOutStream = this.communicationMux.getStream(\"logout\");\n      logOutStream.write({\n        name: \"logOut\"\n      });\n      const statusStream = this.communicationMux.getStream(\"status\");\n      const statusStreamHandler = status => {\n        if (!status.loggedIn) {\n          this.isLoggedIn = false;\n          this.currentVerifier = \"\";\n          this.requestedVerifier = \"\";\n          resolve();\n        } else reject(new Error(\"Some Error Occured\"));\n      };\n      handleStream(statusStream, \"data\", statusStreamHandler);\n    });\n  }\n  async cleanUp() {\n    if (this.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n  clearInit() {\n    function isElement(element) {\n      return element instanceof Element || element instanceof HTMLDocument;\n    }\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n    this.isInitialized = false;\n  }\n  hideTorusButton() {\n    this.torusWidgetVisibility = false;\n    this._sendWidgetVisibilityStatus(false);\n    this._displayIframe();\n  }\n  showTorusButton() {\n    this.torusWidgetVisibility = true;\n    this._sendWidgetVisibilityStatus(true);\n    this._displayIframe();\n  }\n  setProvider(_ref) {\n    let {\n        host = \"mainnet\",\n        chainId = null,\n        networkName = \"\"\n      } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n    return new Promise((resolve, reject) => {\n      const providerChangeStream = this.communicationMux.getStream(\"provider_change\");\n      const handler = chunk => {\n        const {\n          err,\n          success\n        } = chunk.data;\n        log.info(chunk);\n        if (err) {\n          reject(err);\n        } else if (success) {\n          resolve();\n        } else reject(new Error(\"some error occured\"));\n      };\n      handleStream(providerChangeStream, \"data\", handler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId, {\n        target: \"_blank\",\n        features: FEATURES_PROVIDER_CHANGE_WINDOW\n      });\n      providerChangeStream.write({\n        name: \"show_provider_change\",\n        data: {\n          network: _objectSpread({\n            host,\n            chainId,\n            networkName\n          }, rest),\n          preopenInstanceId,\n          override: false\n        }\n      });\n    });\n  }\n  showWallet(path) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const showWalletStream = this.communicationMux.getStream(\"show_wallet\");\n    const finalPath = path ? `/${path}` : \"\";\n    showWalletStream.write({\n      name: \"show_wallet\",\n      data: {\n        path: finalPath\n      }\n    });\n    const showWalletHandler = chunk => {\n      if (chunk.name === \"show_wallet_instance\") {\n        // Let the error propogate up (hence, no try catch)\n        const {\n          instanceId\n        } = chunk.data;\n        const finalUrl = new URL(`${this.torusUrl}/wallet${finalPath}`);\n        // Using URL constructor to prevent js injection and allow parameter validation.!\n        finalUrl.searchParams.append(\"integrity\", \"true\");\n        finalUrl.searchParams.append(\"instanceId\", instanceId);\n        Object.keys(params).forEach(x => {\n          finalUrl.searchParams.append(x, params[x]);\n        });\n        finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n        const walletWindow = new PopupHandler({\n          url: finalUrl,\n          features: FEATURES_DEFAULT_WALLET_WINDOW\n        });\n        walletWindow.open();\n      }\n    };\n    handleStream(showWalletStream, \"data\", showWalletHandler);\n  }\n  async getPublicAddress(_ref2) {\n    let {\n      verifier,\n      verifierId,\n      isExtended = false\n    } = _ref2;\n    if (!configuration.supportedVerifierList.includes(verifier) || !WALLET_OPENLOGIN_VERIFIER_MAP[verifier]) throw new Error(\"Unsupported verifier\");\n    const walletVerifier = verifier;\n    const openloginVerifier = WALLET_OPENLOGIN_VERIFIER_MAP[verifier];\n    const url = new URL(`https://api.tor.us/lookup/torus`);\n    url.searchParams.append(\"verifier\", openloginVerifier);\n    url.searchParams.append(\"verifierId\", verifierId);\n    url.searchParams.append(\"walletVerifier\", walletVerifier);\n    url.searchParams.append(\"network\", \"mainnet\");\n    url.searchParams.append(\"isExtended\", isExtended.toString());\n    return get(url.href, {\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      }\n    }, {\n      useAPIKey: true\n    });\n  }\n  getUserInfo(message) {\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const userInfoAccessStream = this.communicationMux.getStream(\"user_info_access\");\n        userInfoAccessStream.write({\n          name: \"user_info_access_request\"\n        });\n        const userInfoAccessHandler = chunk => {\n          const {\n            name,\n            data: {\n              approved,\n              payload,\n              rejected,\n              newRequest\n            }\n          } = chunk;\n          if (name === \"user_info_access_response\") {\n            if (approved) {\n              resolve(payload);\n            } else if (rejected) {\n              reject(new Error(\"User rejected the request\"));\n            } else if (newRequest) {\n              const userInfoStream = this.communicationMux.getStream(\"user_info\");\n              const userInfoHandler = handlerChunk => {\n                if (handlerChunk.name === \"user_info_response\") {\n                  if (handlerChunk.data.approved) {\n                    resolve(handlerChunk.data.payload);\n                  } else {\n                    reject(new Error(\"User rejected the request\"));\n                  }\n                }\n              };\n              handleStream(userInfoStream, \"data\", userInfoHandler);\n              const preopenInstanceId = getPreopenInstanceId();\n              this._handleWindow(preopenInstanceId, {\n                target: \"_blank\",\n                features: FEATURES_PROVIDER_CHANGE_WINDOW\n              });\n              userInfoStream.write({\n                name: \"user_info_request\",\n                data: {\n                  message,\n                  preopenInstanceId\n                }\n              });\n            }\n          }\n        };\n        handleStream(userInfoAccessStream, \"data\", userInfoAccessHandler);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n  initiateTopup(provider, params) {\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        const {\n          errors,\n          isValid\n        } = validatePaymentProvider(provider, params);\n        if (!isValid) {\n          reject(new Error(JSON.stringify(errors)));\n          return;\n        }\n        const topupStream = this.communicationMux.getStream(\"topup\");\n        const topupHandler = chunk => {\n          if (chunk.name === \"topup_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(topupStream, \"data\", topupHandler);\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId);\n        topupStream.write({\n          name: \"topup_request\",\n          data: {\n            provider,\n            params,\n            preopenInstanceId\n          }\n        });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n  async loginWithPrivateKey(loginParams) {\n    const {\n      privateKey,\n      userInfo\n    } = loginParams;\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        if (Buffer.from(privateKey, \"hex\").length !== 32) {\n          reject(new Error(\"Invalid private key, Please provide a 32 byte valid secp25k1 private key\"));\n          return;\n        }\n        const loginPrivKeyStream = this.communicationMux.getStream(\"login_with_private_key\");\n        const loginHandler = chunk => {\n          if (chunk.name === \"login_with_private_key_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(loginPrivKeyStream, \"data\", loginHandler);\n        loginPrivKeyStream.write({\n          name: \"login_with_private_key_request\",\n          data: {\n            privateKey,\n            userInfo\n          }\n        });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n  async showWalletConnectScanner() {\n    if (!this.useWalletConnect) throw new Error(\"Set `useWalletConnect` as true in init function options to use wallet connect scanner\");\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const walletConnectStream = this.communicationMux.getStream(\"wallet_connect_stream\");\n        const walletConnectHandler = chunk => {\n          if (chunk.name === \"wallet_connect_stream_res\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n            this._displayIframe();\n          }\n        };\n        handleStream(walletConnectStream, \"data\", walletConnectHandler);\n        walletConnectStream.write({\n          name: \"wallet_connect_stream_req\"\n        });\n        this._displayIframe(true);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n  _handleWindow(preopenInstanceId) {\n    let {\n      url,\n      target,\n      features\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (preopenInstanceId) {\n      const windowStream = this.communicationMux.getStream(\"window\");\n      const finalUrl = new URL(url || `${this.torusUrl}/redirect?preopenInstanceId=${preopenInstanceId}`);\n      if (finalUrl.hash) finalUrl.hash += `&isCustomLogin=${this.isCustomLogin}`;else finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n      const handledWindow = new PopupHandler({\n        url: finalUrl,\n        target,\n        features\n      });\n      handledWindow.open();\n      if (!handledWindow.window) {\n        this._createPopupBlockAlert(preopenInstanceId, finalUrl.href);\n        return;\n      }\n      windowStream.write({\n        name: \"opened_window\",\n        data: {\n          preopenInstanceId\n        }\n      });\n      const closeHandler = _ref3 => {\n        let {\n          preopenInstanceId: receivedId,\n          close\n        } = _ref3;\n        if (receivedId === preopenInstanceId && close) {\n          handledWindow.close();\n          windowStream.removeListener(\"data\", closeHandler);\n        }\n      };\n      windowStream.on(\"data\", closeHandler);\n      handledWindow.once(\"close\", () => {\n        windowStream.write({\n          data: {\n            preopenInstanceId,\n            closed: true\n          }\n        });\n        windowStream.removeListener(\"data\", closeHandler);\n      });\n    }\n  }\n  _setEmbedWhiteLabel(element) {\n    // Set whitelabel\n    const {\n      theme\n    } = this.whiteLabel || {};\n    if (theme) {\n      const {\n        isDark = false,\n        colors = {}\n      } = theme;\n      if (isDark) element.classList.add(\"torus-dark\");\n      if (colors.torusBrand1) element.style.setProperty(\"--torus-brand-1\", colors.torusBrand1);\n      if (colors.torusGray2) element.style.setProperty(\"--torus-gray-2\", colors.torusGray2);\n    }\n  }\n  _getLogoUrl() {\n    let logoUrl = `${this.torusUrl}/images/torus_icon-blue.svg`;\n    if (this.whiteLabel?.theme?.isDark) {\n      logoUrl = this.whiteLabel?.logoLight || logoUrl;\n    } else {\n      logoUrl = this.whiteLabel?.logoDark || logoUrl;\n    }\n    return logoUrl;\n  }\n  _sendWidgetVisibilityStatus(status) {\n    const torusWidgetVisibilityStream = this.communicationMux.getStream(\"torus-widget-visibility\");\n    torusWidgetVisibilityStream.write({\n      data: status\n    });\n  }\n  _displayIframe() {\n    let isFull = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const style = {};\n    const size = this.buttonSize + 14; // 15px padding\n    // set phase\n    if (!isFull) {\n      style.display = this.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = `${size}px`;\n      style.width = `${size}px`;\n      switch (this.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.torusIframe.style, style);\n    this.isIframeFullScreen = isFull;\n  }\n  _setupWeb3() {\n    log.info(\"setupWeb3 running\");\n    // setup background connection\n    const metamaskStream = new BasePostMessageStream({\n      name: \"embed_metamask\",\n      target: \"iframe_metamask\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    });\n    // Due to compatibility reasons, we should not set up multiplexing on window.metamaskstream\n    // because the MetamaskInpageProvider also attempts to do so.\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_comm\",\n      target: \"iframe_comm\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    });\n    // Backward compatibility with Gotchi :)\n    // window.metamaskStream = this.communicationStream\n    // compose the inpage provider\n    const inpageProvider = new TorusInpageProvider(metamaskStream);\n    // detect eth_requestAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = m => {\n      const originalMethod = inpageProvider[m];\n      inpageProvider[m] = function providerFunc(method) {\n        if (method && method === \"eth_requestAccounts\") {\n          return inpageProvider.enable();\n        }\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        return originalMethod.apply(this, [method, ...args]);\n      };\n    };\n    detectAccountRequestPrototypeModifier(\"send\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    inpageProvider.enable = () => {\n      return new Promise((resolve, reject) => {\n        // If user is already logged in, we assume they have given access to the website\n        inpageProvider.sendAsync({\n          jsonrpc: \"2.0\",\n          id: getPreopenInstanceId(),\n          method: \"eth_requestAccounts\",\n          params: []\n        }, (err, response) => {\n          const {\n            result: res\n          } = response || {};\n          if (err) {\n            setTimeout(() => {\n              reject(err);\n            }, 50);\n          } else if (Array.isArray(res) && res.length > 0) {\n            // If user is already rehydrated, resolve this\n            // else wait for something to be written to status stream\n            const handleLoginCb = () => {\n              if (this.requestedVerifier !== \"\" && this.currentVerifier !== this.requestedVerifier) {\n                const {\n                  requestedVerifier\n                } = this;\n                // eslint-disable-next-line promise/no-promise-in-callback\n                this.logout()\n                // eslint-disable-next-line promise/always-return\n                .then(_ => {\n                  this.requestedVerifier = requestedVerifier;\n                  this._showLoginPopup(true, resolve, reject);\n                }).catch(error => reject(error));\n              } else {\n                resolve(res);\n              }\n            };\n            if (this.isLoggedIn) {\n              handleLoginCb();\n            } else {\n              this.isLoginCallback = handleLoginCb;\n            }\n          } else {\n            // set up listener for login\n            this._showLoginPopup(true, resolve, reject);\n          }\n        });\n      });\n    };\n    inpageProvider.tryPreopenHandle = (payload, cb) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && UNSAFE_METHODS.includes(_payload.method)) {\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId, {\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW\n        });\n        _payload.preopenInstanceId = preopenInstanceId;\n      }\n      inpageProvider._rpcEngine.handle(_payload, cb);\n    };\n    // Work around for web3@1.0 deleting the bound `sendAsync` but not the unbound\n    // `sendAsync` method on the prototype, causing `this` reference issues with drizzle\n    const proxiedInpageProvider = new Proxy(inpageProvider, {\n      // straight up lie that we deleted the property so that it doesnt\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    this.ethereum = proxiedInpageProvider;\n    const communicationMux = setupMultiplex(communicationStream);\n    this.communicationMux = communicationMux;\n    const windowStream = communicationMux.getStream(\"window\");\n    windowStream.on(\"data\", chunk => {\n      if (chunk.name === \"create_window\") {\n        // url is the url we need to open\n        // we can pass the final url upfront so that it removes the step of redirecting to /redirect and waiting for finalUrl\n        this._createPopupBlockAlert(chunk.data.preopenInstanceId, chunk.data.url);\n      }\n    });\n    // show torus widget if button clicked\n    const widgetStream = communicationMux.getStream(\"widget\");\n    widgetStream.on(\"data\", chunk => {\n      const {\n        data\n      } = chunk;\n      this._displayIframe(data);\n    });\n    // Show torus button if wallet has been hydrated/detected\n    const statusStream = communicationMux.getStream(\"status\");\n    statusStream.on(\"data\", status => {\n      // login\n      if (status.loggedIn) {\n        this.isLoggedIn = status.loggedIn;\n        this.currentVerifier = status.verifier;\n      } // logout\n      else this._displayIframe();\n      if (this.isLoginCallback) {\n        this.isLoginCallback();\n        delete this.isLoginCallback;\n      }\n    });\n    this.provider = proxiedInpageProvider;\n    if (this.provider.shouldSendMetadata) sendSiteMetadata(this.provider._rpcEngine);\n    inpageProvider._initializeState();\n    log.debug(\"Torus - injected provider\");\n  }\n  _showLoginPopup(calledFromEmbed, resolve, reject) {\n    const loginHandler = data => {\n      const {\n        err,\n        selectedAddress\n      } = data;\n      if (err) {\n        log.error(err);\n        if (reject) reject(err);\n      }\n      // returns an array (cause accounts expects it)\n      else if (resolve) resolve([selectedAddress]);\n      if (this.isIframeFullScreen) this._displayIframe();\n    };\n    const oauthStream = this.communicationMux.getStream(\"oauth\");\n    if (!this.requestedVerifier) {\n      this._displayIframe(true);\n      handleStream(oauthStream, \"data\", loginHandler);\n      oauthStream.write({\n        name: \"oauth_modal\",\n        data: {\n          calledFromEmbed\n        }\n      });\n    } else {\n      handleStream(oauthStream, \"data\", loginHandler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId);\n      oauthStream.write({\n        name: \"oauth\",\n        data: {\n          calledFromEmbed,\n          verifier: this.requestedVerifier,\n          preopenInstanceId,\n          login_hint: this.loginHint\n        }\n      });\n    }\n  }\n  _createPopupBlockAlert(preopenInstanceId, url) {\n    const logoUrl = this._getLogoUrl();\n    const torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + `<div id=\"torusAlert__logo\"><img src=\"${logoUrl}\" /></div>` + \"<div>\" + `<h1 id=\"torusAlert__title\">${this.embedTranslations.actionRequired}</h1>` + `<p id=\"torusAlert__desc\">${this.embedTranslations.pendingAction}</p>` + \"</div>\" + \"</div>\");\n    const successAlert = htmlToElement(`<div><a id=\"torusAlert__btn\">${this.embedTranslations.continue}</a></div>`);\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(preopenInstanceId, {\n          url,\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW\n        });\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n    this._setEmbedWhiteLabel(torusAlert);\n    const attachOnLoad = () => {\n      this.torusAlertContainer.style.display = \"block\";\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n    runOnLoad(attachOnLoad);\n    runOnLoad(bindOnLoad);\n  }\n}\n\nexport { BUTTON_POSITION, LOGIN_PROVIDER, PAYMENT_PROVIDER, SUPPORTED_PAYMENT_NETWORK, TORUS_BUILD_ENV, TorusInpageProvider, WALLET_OPENLOGIN_VERIFIER_MAP, WALLET_VERIFIERS, Torus as default };\n//# sourceMappingURL=torus.esm.js.map\n"]},"metadata":{},"sourceType":"module"}