{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports[\"default\"] = void 0;\nexports.getSocketInstance = getSocketInstance;\nexports.keccak256 = keccak256;\nexports.microSeconds = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.removeStorageEventListener = removeStorageEventListener;\nexports.setupSocketConnection = setupSocketConnection;\nexports.storageKey = storageKey;\nexports.type = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _obliviousSet = require(\"oblivious-set\");\n\nvar _socket = require(\"socket.io-client\");\n\nvar _eccrypto = require(\"@toruslabs/eccrypto\");\n\nvar _metadataHelpers = require(\"@toruslabs/metadata-helpers\");\n\nvar _keccak = _interopRequireDefault(require(\"keccak\"));\n\nvar _util = require(\"../util\");\n\nvar _options = require(\"../options\");\n/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside of webworkers because they have no access to locastorage\n * This is basically implemented to support IE9 or your grandmothers toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\n\n\nvar microSeconds = _util.microSeconds; // PASS IN STRING/BUFFER TO GET BUFFER\n\nexports.microSeconds = microSeconds;\n\nfunction keccak256(a) {\n  return (0, _keccak[\"default\"])('keccak256').update(a).digest();\n}\n\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nvar type = 'server';\nexports.type = type;\nvar SOCKET_CONN_INSTANCE = null; // used to decide to reconnect socket e.g. when socket connection is disconnected unexpectedly\n\nvar runningChannels = new Set();\n\nfunction storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n/**\n * writes the new message to the storage\n * and fires the storage-event so other readers can find it\n */\n\n\nfunction postMessage(channelState, messageJson) {\n  return new Promise(function (res, rej) {\n    (0, _util.sleep)().then( /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n      var key, channelEncPrivKey, encData, body;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            key = storageKey(channelState.channelName);\n            channelEncPrivKey = keccak256(key);\n            _context.next = 4;\n            return (0, _metadataHelpers.encryptData)(channelEncPrivKey.toString('hex'), {\n              token: (0, _util.randomToken)(),\n              time: new Date().getTime(),\n              data: messageJson,\n              uuid: channelState.uuid\n            });\n\n          case 4:\n            encData = _context.sent;\n            _context.t0 = (0, _eccrypto.getPublic)(channelEncPrivKey).toString('hex');\n            _context.t1 = encData;\n            _context.next = 9;\n            return (0, _eccrypto.sign)(channelEncPrivKey, keccak256(encData));\n\n          case 9:\n            _context.t2 = _context.sent.toString('hex');\n            body = {\n              key: _context.t0,\n              data: _context.t1,\n              signature: _context.t2\n            };\n            if (channelState.timeout) body.timeout = channelState.timeout;\n            return _context.abrupt(\"return\", fetch(channelState.serverUrl + '/channel/set', {\n              method: 'POST',\n              body: JSON.stringify(body),\n              headers: {\n                'Content-Type': 'application/json; charset=utf-8'\n              }\n            }).then(res)[\"catch\"](rej));\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    })));\n  });\n}\n\nfunction getSocketInstance(serverUrl) {\n  if (SOCKET_CONN_INSTANCE) {\n    return SOCKET_CONN_INSTANCE;\n  }\n\n  var SOCKET_CONN = (0, _socket.io)(serverUrl, {\n    transports: ['websocket', 'polling'],\n    // use WebSocket first, if available\n    withCredentials: true,\n    reconnectionDelayMax: 10000,\n    reconnectionAttempts: 10\n  });\n  SOCKET_CONN.on('connect_error', function (err) {\n    // revert to classic upgrade\n    SOCKET_CONN.io.opts.transports = ['polling', 'websocket'];\n\n    _util.log.error('connect error', err);\n  });\n  SOCKET_CONN.on('connect', /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n    var engine;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          engine = SOCKET_CONN.io.engine;\n\n          _util.log.debug('initially connected to', engine.transport.name); // in most cases, prints \"polling\"\n\n\n          engine.once('upgrade', function () {\n            // called when the transport is upgraded (i.e. from HTTP long-polling to WebSocket)\n            _util.log.debug('upgraded', engine.transport.name); // in most cases, prints \"websocket\"\n\n          });\n          engine.once('close', function (reason) {\n            // called when the underlying connection is closed\n            _util.log.debug('connection closed', reason);\n          });\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  })));\n  SOCKET_CONN.on('error', function (err) {\n    _util.log.error('socket errored', err);\n\n    SOCKET_CONN.disconnect();\n  });\n  SOCKET_CONN_INSTANCE = SOCKET_CONN;\n  return SOCKET_CONN;\n}\n\nfunction setupSocketConnection(serverUrl, channelName, fn) {\n  var socketConn = getSocketInstance(serverUrl);\n  var key = storageKey(channelName);\n  var channelEncPrivKey = keccak256(key);\n  var channelPubKey = (0, _eccrypto.getPublic)(channelEncPrivKey).toString('hex');\n\n  if (socketConn.connected) {\n    socketConn.emit('check_auth_status', channelPubKey);\n  } else {\n    socketConn.once('connect', function () {\n      _util.log.debug('connected with socket');\n\n      socketConn.emit('check_auth_status', channelPubKey);\n    });\n  }\n\n  var reconnect = function reconnect() {\n    socketConn.once('connect', /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3() {\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            socketConn.emit('check_auth_status', channelPubKey);\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    })));\n  };\n\n  var visibilityListener = function visibilityListener() {\n    // if channel is closed, then remove the listener.\n    if (!socketConn) {\n      document.removeEventListener('visibilitychange', visibilityListener);\n      return;\n    } // if not connected, then wait for connection and ping server for latest msg.\n\n\n    if (!socketConn.connected && document.visibilityState === 'visible') {\n      reconnect();\n    }\n  };\n\n  var listener = /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(ev) {\n      var decData;\n      return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return (0, _metadataHelpers.decryptData)(channelEncPrivKey.toString('hex'), ev);\n\n          case 3:\n            decData = _context4.sent;\n\n            _util.log.info(decData);\n\n            fn(decData);\n            _context4.next = 11;\n            break;\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](0);\n\n            _util.log.error(_context4.t0);\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[0, 8]]);\n    }));\n\n    return function listener(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  socketConn.on('disconnect', function () {\n    _util.log.debug('socket disconnected');\n\n    if (runningChannels.has(channelName)) {\n      _util.log.error('socket disconnected unexpectedly, reconnecting socket');\n\n      reconnect();\n    }\n  });\n  socketConn.on(channelPubKey + \"_success\", listener);\n  if (typeof document !== 'undefined') document.addEventListener('visibilitychange', visibilityListener);\n  return socketConn;\n}\n\nfunction removeStorageEventListener() {\n  if (SOCKET_CONN_INSTANCE) {\n    SOCKET_CONN_INSTANCE.disconnect();\n  }\n}\n\nfunction create(channelName, options) {\n  options = (0, _options.fillOptionsWithDefaults)(options);\n\n  if (!canBeUsed(options)) {\n    throw new Error('BroadcastChannel: server cannot be used');\n  }\n\n  var uuid = (0, _util.randomToken)();\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n\n  var eMIs = new _obliviousSet.ObliviousSet(options.server.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs,\n    // emittedMessagesIds\n    serverUrl: options.server.url\n  };\n  if (options.server.timeout) state.timeout = options.server.timeout;\n  setupSocketConnection(options.server.url, channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n\n    if (msgObj.uuid === state.uuid) return; // own message\n\n    if (!msgObj.token || state.eMIs.has(msgObj.token)) return; // already emitted\n    // if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    state.eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  runningChannels.add(channelName);\n  return state;\n}\n\nfunction close(channelState) {\n  runningChannels[\"delete\"](channelState.channelName); // give 2 sec for all msgs which are in transit to be consumed\n  // by receiver.\n  // window.setTimeout(() => {\n  //     removeStorageEventListener(channelState);\n  //     SOCKET_CONN_INSTANCE = null;\n  // }, 1000);\n}\n\nfunction onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\n\nfunction canBeUsed() {\n  return true;\n}\n\nfunction averageResponseTime() {\n  var defaultTime = 500; // TODO: Maybe increase it based on operation\n\n  return defaultTime;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/dev3rs/provipdiploma/node_modules/@toruslabs/broadcast-channel/dist/lib/methods/server.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","averageResponseTime","canBeUsed","close","create","getSocketInstance","keccak256","microSeconds","onMessage","postMessage","removeStorageEventListener","setupSocketConnection","storageKey","type","_regenerator","_asyncToGenerator2","_obliviousSet","_socket","_eccrypto","_metadataHelpers","_keccak","_util","_options","a","update","digest","KEY_PREFIX","SOCKET_CONN_INSTANCE","runningChannels","Set","channelName","channelState","messageJson","Promise","res","rej","sleep","then","mark","_callee","key","channelEncPrivKey","encData","body","wrap","_callee$","_context","prev","next","encryptData","toString","token","randomToken","time","Date","getTime","data","uuid","sent","t0","getPublic","t1","sign","t2","signature","timeout","abrupt","fetch","serverUrl","method","JSON","stringify","headers","stop","SOCKET_CONN","io","transports","withCredentials","reconnectionDelayMax","reconnectionAttempts","on","err","opts","log","error","_callee2","engine","_callee2$","_context2","debug","transport","name","once","reason","disconnect","fn","socketConn","channelPubKey","connected","emit","reconnect","_callee3","_callee3$","_context3","visibilityListener","document","removeEventListener","visibilityState","listener","_ref4","_callee4","ev","decData","_callee4$","_context4","decryptData","info","_x","apply","arguments","has","addEventListener","options","fillOptionsWithDefaults","Error","eMIs","ObliviousSet","server","removeTimeout","state","url","msgObj","messagesCallback","add","messagesCallbackTime","defaultTime","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports[\"default\"] = void 0;\nexports.getSocketInstance = getSocketInstance;\nexports.keccak256 = keccak256;\nexports.microSeconds = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.removeStorageEventListener = removeStorageEventListener;\nexports.setupSocketConnection = setupSocketConnection;\nexports.storageKey = storageKey;\nexports.type = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _obliviousSet = require(\"oblivious-set\");\nvar _socket = require(\"socket.io-client\");\nvar _eccrypto = require(\"@toruslabs/eccrypto\");\nvar _metadataHelpers = require(\"@toruslabs/metadata-helpers\");\nvar _keccak = _interopRequireDefault(require(\"keccak\"));\nvar _util = require(\"../util\");\nvar _options = require(\"../options\");\n/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside of webworkers because they have no access to locastorage\n * This is basically implemented to support IE9 or your grandmothers toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\n\nvar microSeconds = _util.microSeconds;\n\n// PASS IN STRING/BUFFER TO GET BUFFER\nexports.microSeconds = microSeconds;\nfunction keccak256(a) {\n  return (0, _keccak[\"default\"])('keccak256').update(a).digest();\n}\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nvar type = 'server';\nexports.type = type;\nvar SOCKET_CONN_INSTANCE = null;\n// used to decide to reconnect socket e.g. when socket connection is disconnected unexpectedly\nvar runningChannels = new Set();\nfunction storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n\n/**\n * writes the new message to the storage\n * and fires the storage-event so other readers can find it\n */\nfunction postMessage(channelState, messageJson) {\n  return new Promise(function (res, rej) {\n    (0, _util.sleep)().then( /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n      var key, channelEncPrivKey, encData, body;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            key = storageKey(channelState.channelName);\n            channelEncPrivKey = keccak256(key);\n            _context.next = 4;\n            return (0, _metadataHelpers.encryptData)(channelEncPrivKey.toString('hex'), {\n              token: (0, _util.randomToken)(),\n              time: new Date().getTime(),\n              data: messageJson,\n              uuid: channelState.uuid\n            });\n          case 4:\n            encData = _context.sent;\n            _context.t0 = (0, _eccrypto.getPublic)(channelEncPrivKey).toString('hex');\n            _context.t1 = encData;\n            _context.next = 9;\n            return (0, _eccrypto.sign)(channelEncPrivKey, keccak256(encData));\n          case 9:\n            _context.t2 = _context.sent.toString('hex');\n            body = {\n              key: _context.t0,\n              data: _context.t1,\n              signature: _context.t2\n            };\n            if (channelState.timeout) body.timeout = channelState.timeout;\n            return _context.abrupt(\"return\", fetch(channelState.serverUrl + '/channel/set', {\n              method: 'POST',\n              body: JSON.stringify(body),\n              headers: {\n                'Content-Type': 'application/json; charset=utf-8'\n              }\n            }).then(res)[\"catch\"](rej));\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    })));\n  });\n}\nfunction getSocketInstance(serverUrl) {\n  if (SOCKET_CONN_INSTANCE) {\n    return SOCKET_CONN_INSTANCE;\n  }\n  var SOCKET_CONN = (0, _socket.io)(serverUrl, {\n    transports: ['websocket', 'polling'],\n    // use WebSocket first, if available\n    withCredentials: true,\n    reconnectionDelayMax: 10000,\n    reconnectionAttempts: 10\n  });\n  SOCKET_CONN.on('connect_error', function (err) {\n    // revert to classic upgrade\n    SOCKET_CONN.io.opts.transports = ['polling', 'websocket'];\n    _util.log.error('connect error', err);\n  });\n  SOCKET_CONN.on('connect', /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n    var engine;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          engine = SOCKET_CONN.io.engine;\n          _util.log.debug('initially connected to', engine.transport.name); // in most cases, prints \"polling\"\n          engine.once('upgrade', function () {\n            // called when the transport is upgraded (i.e. from HTTP long-polling to WebSocket)\n            _util.log.debug('upgraded', engine.transport.name); // in most cases, prints \"websocket\"\n          });\n\n          engine.once('close', function (reason) {\n            // called when the underlying connection is closed\n            _util.log.debug('connection closed', reason);\n          });\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  })));\n  SOCKET_CONN.on('error', function (err) {\n    _util.log.error('socket errored', err);\n    SOCKET_CONN.disconnect();\n  });\n  SOCKET_CONN_INSTANCE = SOCKET_CONN;\n  return SOCKET_CONN;\n}\nfunction setupSocketConnection(serverUrl, channelName, fn) {\n  var socketConn = getSocketInstance(serverUrl);\n  var key = storageKey(channelName);\n  var channelEncPrivKey = keccak256(key);\n  var channelPubKey = (0, _eccrypto.getPublic)(channelEncPrivKey).toString('hex');\n  if (socketConn.connected) {\n    socketConn.emit('check_auth_status', channelPubKey);\n  } else {\n    socketConn.once('connect', function () {\n      _util.log.debug('connected with socket');\n      socketConn.emit('check_auth_status', channelPubKey);\n    });\n  }\n  var reconnect = function reconnect() {\n    socketConn.once('connect', /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3() {\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            socketConn.emit('check_auth_status', channelPubKey);\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    })));\n  };\n  var visibilityListener = function visibilityListener() {\n    // if channel is closed, then remove the listener.\n    if (!socketConn) {\n      document.removeEventListener('visibilitychange', visibilityListener);\n      return;\n    }\n    // if not connected, then wait for connection and ping server for latest msg.\n    if (!socketConn.connected && document.visibilityState === 'visible') {\n      reconnect();\n    }\n  };\n  var listener = /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(ev) {\n      var decData;\n      return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return (0, _metadataHelpers.decryptData)(channelEncPrivKey.toString('hex'), ev);\n          case 3:\n            decData = _context4.sent;\n            _util.log.info(decData);\n            fn(decData);\n            _context4.next = 11;\n            break;\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](0);\n            _util.log.error(_context4.t0);\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[0, 8]]);\n    }));\n    return function listener(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  socketConn.on('disconnect', function () {\n    _util.log.debug('socket disconnected');\n    if (runningChannels.has(channelName)) {\n      _util.log.error('socket disconnected unexpectedly, reconnecting socket');\n      reconnect();\n    }\n  });\n  socketConn.on(channelPubKey + \"_success\", listener);\n  if (typeof document !== 'undefined') document.addEventListener('visibilitychange', visibilityListener);\n  return socketConn;\n}\nfunction removeStorageEventListener() {\n  if (SOCKET_CONN_INSTANCE) {\n    SOCKET_CONN_INSTANCE.disconnect();\n  }\n}\nfunction create(channelName, options) {\n  options = (0, _options.fillOptionsWithDefaults)(options);\n  if (!canBeUsed(options)) {\n    throw new Error('BroadcastChannel: server cannot be used');\n  }\n  var uuid = (0, _util.randomToken)();\n\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n  var eMIs = new _obliviousSet.ObliviousSet(options.server.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs,\n    // emittedMessagesIds\n    serverUrl: options.server.url\n  };\n  if (options.server.timeout) state.timeout = options.server.timeout;\n  setupSocketConnection(options.server.url, channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n    if (msgObj.uuid === state.uuid) return; // own message\n    if (!msgObj.token || state.eMIs.has(msgObj.token)) return; // already emitted\n    // if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    state.eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  runningChannels.add(channelName);\n  return state;\n}\nfunction close(channelState) {\n  runningChannels[\"delete\"](channelState.channelName);\n  // give 2 sec for all msgs which are in transit to be consumed\n  // by receiver.\n  // window.setTimeout(() => {\n  //     removeStorageEventListener(channelState);\n  //     SOCKET_CONN_INSTANCE = null;\n  // }, 1000);\n}\n\nfunction onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\nfunction canBeUsed() {\n  return true;\n}\nfunction averageResponseTime() {\n  var defaultTime = 500;\n  // TODO: Maybe increase it based on operation\n  return defaultTime;\n}\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}