{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isHashObject = exports.uint8ArrayToHashObject = exports.hashObjectToUint8Array = exports.hashTwoObjects = exports.hash = void 0;\n\nconst as_sha256_1 = require(\"@chainsafe/as-sha256\");\n\nconst input = new Uint8Array(64);\n/**\n * Hash two 32 byte arrays\n */\n\nfunction hash(a, b) {\n  input.set(a, 0);\n  input.set(b, 32);\n  return as_sha256_1.digest64(input);\n}\n\nexports.hash = hash;\n/**\n * Hash 2 objects, each store 8 numbers (equivalent to Uint8Array(32))\n */\n\nfunction hashTwoObjects(a, b) {\n  return as_sha256_1.digest64HashObjects(a, b);\n}\n\nexports.hashTwoObjects = hashTwoObjects;\n\nfunction hashObjectToUint8Array(obj) {\n  const byteArr = new Uint8Array(32);\n  as_sha256_1.hashObjectToByteArray(obj, byteArr, 0);\n  return byteArr;\n}\n\nexports.hashObjectToUint8Array = hashObjectToUint8Array;\n\nfunction uint8ArrayToHashObject(byteArr) {\n  return as_sha256_1.byteArrayToHashObject(byteArr);\n}\n\nexports.uint8ArrayToHashObject = uint8ArrayToHashObject;\n\nfunction isHashObject(hash) {\n  // @ts-ignore\n  return hash.length === undefined;\n}\n\nexports.isHashObject = isHashObject;","map":{"version":3,"sources":["/Users/dev3rs/provipdiploma/node_modules/@chainsafe/persistent-merkle-tree/lib/hash.js"],"names":["Object","defineProperty","exports","value","isHashObject","uint8ArrayToHashObject","hashObjectToUint8Array","hashTwoObjects","hash","as_sha256_1","require","input","Uint8Array","a","b","set","digest64","digest64HashObjects","obj","byteArr","hashObjectToByteArray","byteArrayToHashObject","length","undefined"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,sBAAR,GAAiCH,OAAO,CAACI,sBAAR,GAAiCJ,OAAO,CAACK,cAAR,GAAyBL,OAAO,CAACM,IAAR,GAAe,KAAK,CAAtI;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,sBAAD,CAA3B;;AACA,MAAMC,KAAK,GAAG,IAAIC,UAAJ,CAAe,EAAf,CAAd;AACA;AACA;AACA;;AACA,SAASJ,IAAT,CAAcK,CAAd,EAAiBC,CAAjB,EAAoB;AAChBH,EAAAA,KAAK,CAACI,GAAN,CAAUF,CAAV,EAAa,CAAb;AACAF,EAAAA,KAAK,CAACI,GAAN,CAAUD,CAAV,EAAa,EAAb;AACA,SAAOL,WAAW,CAACO,QAAZ,CAAqBL,KAArB,CAAP;AACH;;AACDT,OAAO,CAACM,IAAR,GAAeA,IAAf;AACA;AACA;AACA;;AACA,SAASD,cAAT,CAAwBM,CAAxB,EAA2BC,CAA3B,EAA8B;AAC1B,SAAOL,WAAW,CAACQ,mBAAZ,CAAgCJ,CAAhC,EAAmCC,CAAnC,CAAP;AACH;;AACDZ,OAAO,CAACK,cAAR,GAAyBA,cAAzB;;AACA,SAASD,sBAAT,CAAgCY,GAAhC,EAAqC;AACjC,QAAMC,OAAO,GAAG,IAAIP,UAAJ,CAAe,EAAf,CAAhB;AACAH,EAAAA,WAAW,CAACW,qBAAZ,CAAkCF,GAAlC,EAAuCC,OAAvC,EAAgD,CAAhD;AACA,SAAOA,OAAP;AACH;;AACDjB,OAAO,CAACI,sBAAR,GAAiCA,sBAAjC;;AACA,SAASD,sBAAT,CAAgCc,OAAhC,EAAyC;AACrC,SAAOV,WAAW,CAACY,qBAAZ,CAAkCF,OAAlC,CAAP;AACH;;AACDjB,OAAO,CAACG,sBAAR,GAAiCA,sBAAjC;;AACA,SAASD,YAAT,CAAsBI,IAAtB,EAA4B;AACxB;AACA,SAAOA,IAAI,CAACc,MAAL,KAAgBC,SAAvB;AACH;;AACDrB,OAAO,CAACE,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isHashObject = exports.uint8ArrayToHashObject = exports.hashObjectToUint8Array = exports.hashTwoObjects = exports.hash = void 0;\nconst as_sha256_1 = require(\"@chainsafe/as-sha256\");\nconst input = new Uint8Array(64);\n/**\n * Hash two 32 byte arrays\n */\nfunction hash(a, b) {\n    input.set(a, 0);\n    input.set(b, 32);\n    return as_sha256_1.digest64(input);\n}\nexports.hash = hash;\n/**\n * Hash 2 objects, each store 8 numbers (equivalent to Uint8Array(32))\n */\nfunction hashTwoObjects(a, b) {\n    return as_sha256_1.digest64HashObjects(a, b);\n}\nexports.hashTwoObjects = hashTwoObjects;\nfunction hashObjectToUint8Array(obj) {\n    const byteArr = new Uint8Array(32);\n    as_sha256_1.hashObjectToByteArray(obj, byteArr, 0);\n    return byteArr;\n}\nexports.hashObjectToUint8Array = hashObjectToUint8Array;\nfunction uint8ArrayToHashObject(byteArr) {\n    return as_sha256_1.byteArrayToHashObject(byteArr);\n}\nexports.uint8ArrayToHashObject = uint8ArrayToHashObject;\nfunction isHashObject(hash) {\n    // @ts-ignore\n    return hash.length === undefined;\n}\nexports.isHashObject = isHashObject;\n"]},"metadata":{},"sourceType":"script"}