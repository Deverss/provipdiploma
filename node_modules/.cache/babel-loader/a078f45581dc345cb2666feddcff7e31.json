{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.chooseMethod = chooseMethod;\n\nvar _native = _interopRequireDefault(require(\"./methods/native.js\"));\n\nvar _indexedDb = _interopRequireDefault(require(\"./methods/indexed-db.js\"));\n\nvar _localstorage = _interopRequireDefault(require(\"./methods/localstorage.js\"));\n\nvar _server = _interopRequireDefault(require(\"./methods/server.js\"));\n\nvar _simulate = _interopRequireDefault(require(\"./methods/simulate.js\")); // order is important\n\n\nvar METHODS = [_native[\"default\"], // fastest\n_indexedDb[\"default\"], _localstorage[\"default\"], _server[\"default\"]];\n\nfunction chooseMethod(options) {\n  var chooseMethods = [].concat(options.methods, METHODS).filter(Boolean); // directly chosen\n\n  if (options.type) {\n    if (options.type === 'simulate') {\n      // only use simulate-method if directly chosen\n      return _simulate[\"default\"];\n    }\n\n    var ret = chooseMethods.find(function (m) {\n      return m.type === options.type;\n    });\n    if (!ret) throw new Error('method-type ' + options.type + ' not found');else return ret;\n  }\n  /**\n   * if no webworker support is needed,\n   * remove idb from the list so that localstorage is been chosen\n   */\n\n\n  if (!options.webWorkerSupport) {\n    chooseMethods = chooseMethods.filter(function (m) {\n      return m.type !== 'idb';\n    });\n  }\n\n  var useMethod = chooseMethods.find(function (method) {\n    return method.canBeUsed(options);\n  });\n  if (!useMethod) throw new Error(\"No useable method found in \" + JSON.stringify(METHODS.map(function (m) {\n    return m.type;\n  })));else return useMethod;\n}","map":{"version":3,"sources":["/Users/dev3rs/provipdiploma/node_modules/@toruslabs/broadcast-channel/dist/lib/method-chooser.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","chooseMethod","_native","_indexedDb","_localstorage","_server","_simulate","METHODS","options","chooseMethods","concat","methods","filter","Boolean","type","ret","find","m","Error","webWorkerSupport","useMethod","method","canBeUsed","JSON","stringify","map"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AACAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,YAAR,GAAuBA,YAAvB;;AACA,IAAIC,OAAO,GAAGP,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAApC;;AACA,IAAIO,UAAU,GAAGR,sBAAsB,CAACC,OAAO,CAAC,yBAAD,CAAR,CAAvC;;AACA,IAAIQ,aAAa,GAAGT,sBAAsB,CAACC,OAAO,CAAC,2BAAD,CAAR,CAA1C;;AACA,IAAIS,OAAO,GAAGV,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAApC;;AACA,IAAIU,SAAS,GAAGX,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAAtC,C,CACA;;;AACA,IAAIW,OAAO,GAAG,CAACL,OAAO,CAAC,SAAD,CAAR,EACd;AACAC,UAAU,CAAC,SAAD,CAFI,EAESC,aAAa,CAAC,SAAD,CAFtB,EAEmCC,OAAO,CAAC,SAAD,CAF1C,CAAd;;AAGA,SAASJ,YAAT,CAAsBO,OAAtB,EAA+B;AAC7B,MAAIC,aAAa,GAAG,GAAGC,MAAH,CAAUF,OAAO,CAACG,OAAlB,EAA2BJ,OAA3B,EAAoCK,MAApC,CAA2CC,OAA3C,CAApB,CAD6B,CAG7B;;AACA,MAAIL,OAAO,CAACM,IAAZ,EAAkB;AAChB,QAAIN,OAAO,CAACM,IAAR,KAAiB,UAArB,EAAiC;AAC/B;AACA,aAAOR,SAAS,CAAC,SAAD,CAAhB;AACD;;AACD,QAAIS,GAAG,GAAGN,aAAa,CAACO,IAAd,CAAmB,UAAUC,CAAV,EAAa;AACxC,aAAOA,CAAC,CAACH,IAAF,KAAWN,OAAO,CAACM,IAA1B;AACD,KAFS,CAAV;AAGA,QAAI,CAACC,GAAL,EAAU,MAAM,IAAIG,KAAJ,CAAU,iBAAiBV,OAAO,CAACM,IAAzB,GAAgC,YAA1C,CAAN,CAAV,KAA6E,OAAOC,GAAP;AAC9E;AAED;AACF;AACA;AACA;;;AACE,MAAI,CAACP,OAAO,CAACW,gBAAb,EAA+B;AAC7BV,IAAAA,aAAa,GAAGA,aAAa,CAACG,MAAd,CAAqB,UAAUK,CAAV,EAAa;AAChD,aAAOA,CAAC,CAACH,IAAF,KAAW,KAAlB;AACD,KAFe,CAAhB;AAGD;;AACD,MAAIM,SAAS,GAAGX,aAAa,CAACO,IAAd,CAAmB,UAAUK,MAAV,EAAkB;AACnD,WAAOA,MAAM,CAACC,SAAP,CAAiBd,OAAjB,CAAP;AACD,GAFe,CAAhB;AAGA,MAAI,CAACY,SAAL,EAAgB,MAAM,IAAIF,KAAJ,CAAU,gCAAgCK,IAAI,CAACC,SAAL,CAAejB,OAAO,CAACkB,GAAR,CAAY,UAAUR,CAAV,EAAa;AACtG,WAAOA,CAAC,CAACH,IAAT;AACD,GAF8E,CAAf,CAA1C,CAAN,CAAhB,KAEU,OAAOM,SAAP;AACX","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.chooseMethod = chooseMethod;\nvar _native = _interopRequireDefault(require(\"./methods/native.js\"));\nvar _indexedDb = _interopRequireDefault(require(\"./methods/indexed-db.js\"));\nvar _localstorage = _interopRequireDefault(require(\"./methods/localstorage.js\"));\nvar _server = _interopRequireDefault(require(\"./methods/server.js\"));\nvar _simulate = _interopRequireDefault(require(\"./methods/simulate.js\"));\n// order is important\nvar METHODS = [_native[\"default\"],\n// fastest\n_indexedDb[\"default\"], _localstorage[\"default\"], _server[\"default\"]];\nfunction chooseMethod(options) {\n  var chooseMethods = [].concat(options.methods, METHODS).filter(Boolean);\n\n  // directly chosen\n  if (options.type) {\n    if (options.type === 'simulate') {\n      // only use simulate-method if directly chosen\n      return _simulate[\"default\"];\n    }\n    var ret = chooseMethods.find(function (m) {\n      return m.type === options.type;\n    });\n    if (!ret) throw new Error('method-type ' + options.type + ' not found');else return ret;\n  }\n\n  /**\n   * if no webworker support is needed,\n   * remove idb from the list so that localstorage is been chosen\n   */\n  if (!options.webWorkerSupport) {\n    chooseMethods = chooseMethods.filter(function (m) {\n      return m.type !== 'idb';\n    });\n  }\n  var useMethod = chooseMethods.find(function (method) {\n    return method.canBeUsed(options);\n  });\n  if (!useMethod) throw new Error(\"No useable method found in \" + JSON.stringify(METHODS.map(function (m) {\n    return m.type;\n  })));else return useMethod;\n}"]},"metadata":{},"sourceType":"script"}