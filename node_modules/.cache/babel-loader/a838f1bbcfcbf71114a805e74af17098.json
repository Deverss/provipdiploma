{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports.microSeconds = exports[\"default\"] = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.type = void 0;\n\nvar _util = require(\"../util\");\n\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar type = 'native';\nexports.type = type;\n\nfunction create(channelName) {\n  var state = {\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n\n  };\n\n  state.bc.onmessage = function (msg) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msg.data);\n    }\n  };\n\n  return state;\n}\n\nfunction close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\n\nfunction postMessage(channelState, messageJson) {\n  try {\n    channelState.bc.postMessage(messageJson, false);\n    return _util.PROMISE_RESOLVED_VOID;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nfunction onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\n\nfunction canBeUsed(options) {\n  /**\n   * in the electron-renderer, isNode will be true even if we are in browser-context\n   * so we also check if window is undefined\n   */\n  if (typeof window === 'undefined') return false;\n  if (!options.support3PC) return false;\n\n  if (typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n\n    return true;\n  } else return false;\n}\n\nfunction averageResponseTime() {\n  return 150;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/dev3rs/provipdiploma/node_modules/@toruslabs/broadcast-channel/dist/lib/methods/native.js"],"names":["Object","defineProperty","exports","value","averageResponseTime","canBeUsed","close","create","microSeconds","onMessage","postMessage","type","_util","require","channelName","state","messagesCallback","bc","BroadcastChannel","subFns","onmessage","msg","data","channelState","messageJson","PROMISE_RESOLVED_VOID","err","Promise","reject","fn","options","window","support3PC","_pubkey","Error","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports.microSeconds = exports[\"default\"] = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.type = void 0;\nvar _util = require(\"../util\");\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar type = 'native';\nexports.type = type;\nfunction create(channelName) {\n  var state = {\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n  };\n\n  state.bc.onmessage = function (msg) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msg.data);\n    }\n  };\n  return state;\n}\nfunction close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\nfunction postMessage(channelState, messageJson) {\n  try {\n    channelState.bc.postMessage(messageJson, false);\n    return _util.PROMISE_RESOLVED_VOID;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\nfunction onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nfunction canBeUsed(options) {\n  /**\n   * in the electron-renderer, isNode will be true even if we are in browser-context\n   * so we also check if window is undefined\n   */\n  if (typeof window === 'undefined') return false;\n  if (!options.support3PC) return false;\n  if (typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n    return true;\n  } else return false;\n}\nfunction averageResponseTime() {\n  return 150;\n}\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}