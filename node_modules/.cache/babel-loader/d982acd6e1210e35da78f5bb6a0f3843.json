{"ast":null,"code":"import _typeof from '@babel/runtime/helpers/typeof';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { Duplex } from 'readable-stream';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport { randomId } from '@toruslabs/openlogin-utils';\nimport { EventEmitter } from 'events';\nimport _wrapNativeSuper from '@babel/runtime/helpers/wrapNativeSuper';\nimport stringify from 'fast-safe-stringify';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport { serializeError } from 'eth-rpc-errors';\nimport eos from 'end-of-stream';\nimport once from 'once';\nimport pump from 'pump';\n\nfunction _createSuper$6(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$6();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$6() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction noop() {\n  return undefined;\n}\n\nvar SYN = \"SYN\";\nvar ACK = \"ACK\";\nvar BRK = \"BRK\";\n\nvar BasePostMessageStream = /*#__PURE__*/function (_Duplex) {\n  _inherits(BasePostMessageStream, _Duplex);\n\n  var _super = _createSuper$6(BasePostMessageStream);\n\n  function BasePostMessageStream(_ref) {\n    var _this;\n\n    var name = _ref.name,\n        target = _ref.target,\n        _ref$targetWindow = _ref.targetWindow,\n        targetWindow = _ref$targetWindow === void 0 ? window : _ref$targetWindow,\n        _ref$targetOrigin = _ref.targetOrigin,\n        targetOrigin = _ref$targetOrigin === void 0 ? \"*\" : _ref$targetOrigin;\n\n    _classCallCheck(this, BasePostMessageStream);\n\n    _this = _super.call(this, {\n      objectMode: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_init\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_haveSyn\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_name\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_target\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_targetWindow\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_targetOrigin\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onMessage\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_synIntervalId\", void 0);\n\n    if (!name || !target) {\n      throw new Error(\"Invalid input.\");\n    }\n\n    _this._init = false;\n    _this._haveSyn = false;\n    _this._name = name;\n    _this._target = target; // target origin\n\n    _this._targetWindow = targetWindow;\n    _this._targetOrigin = targetOrigin;\n    _this._onMessage = _this.onMessage.bind(_assertThisInitialized(_this));\n    _this._synIntervalId = null;\n    window.addEventListener(\"message\", _this._onMessage, false);\n\n    _this._handShake();\n\n    return _this;\n  }\n\n  _createClass(BasePostMessageStream, [{\n    key: \"_break\",\n    value: function _break() {\n      this.cork();\n\n      this._write(BRK, null, noop);\n\n      this._haveSyn = false;\n      this._init = false;\n    }\n  }, {\n    key: \"_handShake\",\n    value: function _handShake() {\n      this._write(SYN, null, noop);\n\n      this.cork();\n    }\n  }, {\n    key: \"_onData\",\n    value: function _onData(data) {\n      if (!this._init) {\n        // listen for handshake\n        if (data === SYN) {\n          this._haveSyn = true;\n\n          this._write(ACK, null, noop);\n        } else if (data === ACK) {\n          this._init = true;\n\n          if (!this._haveSyn) {\n            this._write(ACK, null, noop);\n          }\n\n          this.uncork();\n        }\n      } else if (data === BRK) {\n        this._break();\n      } else {\n        // forward message\n        try {\n          this.push(data);\n        } catch (err) {\n          this.emit(\"error\", err);\n        }\n      }\n    }\n  }, {\n    key: \"_postMessage\",\n    value: function _postMessage(data) {\n      var originConstraint = this._targetOrigin;\n\n      this._targetWindow.postMessage({\n        target: this._target,\n        data: data\n      }, originConstraint);\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(event) {\n      var message = event.data; // validate message\n\n      if (this._targetOrigin !== \"*\" && event.origin !== this._targetOrigin || event.source !== this._targetWindow || _typeof(message) !== \"object\" || message.target !== this._name || !message.data) {\n        return;\n      }\n\n      this._onData(message.data);\n    }\n  }, {\n    key: \"_read\",\n    value: function _read() {\n      return undefined;\n    }\n  }, {\n    key: \"_write\",\n    value: function _write(data, _, cb) {\n      this._postMessage(data);\n\n      cb();\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      window.removeEventListener(\"message\", this._onMessage, false);\n    }\n  }]);\n\n  return BasePostMessageStream;\n}(Duplex);\n\nfunction _createSuper$5(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$5();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$5() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction safeApply(handler, context, args) {\n  try {\n    Reflect.apply(handler, context, args);\n  } catch (err) {\n    // Throw error after timeout so as not to interrupt the stack\n    setTimeout(function () {\n      throw err;\n    });\n  }\n}\n\nfunction arrayClone(arr) {\n  var n = arr.length;\n  var copy = new Array(n);\n\n  for (var i = 0; i < n; i += 1) {\n    copy[i] = arr[i];\n  }\n\n  return copy;\n}\n\nvar SafeEventEmitter = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(SafeEventEmitter, _EventEmitter);\n\n  var _super = _createSuper$5(SafeEventEmitter);\n\n  function SafeEventEmitter() {\n    _classCallCheck(this, SafeEventEmitter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SafeEventEmitter, [{\n    key: \"emit\",\n    value: function emit(type) {\n      var doError = type === \"error\";\n      var events = this._events;\n\n      if (events !== undefined) {\n        doError = doError && events.error === undefined;\n      } else if (!doError) {\n        return false;\n      } // If there is no 'error' event listener then throw.\n\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      if (doError) {\n        var er;\n\n        if (args.length > 0) {\n          er = args[0];\n        }\n\n        if (er instanceof Error) {\n          // Note: The comments on the `throw` lines are intentional, they show\n          // up in Node's output if this results in an unhandled exception.\n          throw er; // Unhandled 'error' event\n        } // At least give some kind of context to the user\n\n\n        var err = new Error(\"Unhandled error.\".concat(er ? \" (\".concat(er.message, \")\") : \"\"));\n        err.context = er;\n        throw err; // Unhandled 'error' event\n      }\n\n      var handler = events[type];\n\n      if (handler === undefined) {\n        return false;\n      }\n\n      if (typeof handler === \"function\") {\n        safeApply(handler, this, args);\n      } else {\n        var len = handler.length;\n        var listeners = arrayClone(handler);\n\n        for (var i = 0; i < len; i += 1) {\n          safeApply(listeners[i], this, args);\n        }\n      }\n\n      return true;\n    }\n  }]);\n\n  return SafeEventEmitter;\n}(EventEmitter);\n\nfunction _createSuper$4(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$4();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$4() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar SerializableError = /*#__PURE__*/function (_Error) {\n  _inherits(SerializableError, _Error);\n\n  var _super = _createSuper$4(SerializableError);\n\n  function SerializableError(_ref) {\n    var _this;\n\n    var code = _ref.code,\n        message = _ref.message,\n        data = _ref.data;\n\n    _classCallCheck(this, SerializableError);\n\n    if (!Number.isInteger(code)) {\n      throw new Error(\"code must be an integer\");\n    }\n\n    if (!message || typeof message !== \"string\") {\n      throw new Error(\"message must be string\");\n    }\n\n    _this = _super.call(this, message);\n\n    _defineProperty(_assertThisInitialized(_this), \"code\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"data\", void 0);\n\n    _this.code = code;\n\n    if (data !== undefined) {\n      _this.data = data;\n    }\n\n    return _this;\n  }\n\n  _createClass(SerializableError, [{\n    key: \"toString\",\n    value: function toString() {\n      return stringify({\n        code: this.code,\n        message: this.message,\n        data: this.data,\n        stack: this.stack\n      });\n    }\n  }]);\n\n  return SerializableError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar getRpcPromiseCallback = function getRpcPromiseCallback(resolve, reject) {\n  var unwrapResult = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return function (error, response) {\n    if (error || response.error) {\n      reject(error || response.error);\n    } else if (!unwrapResult || Array.isArray(response)) {\n      resolve(response);\n    } else {\n      resolve(response.result);\n    }\n  };\n};\n\nfunction createErrorMiddleware(log) {\n  return function (req, res, next, end) {\n    try {\n      // json-rpc-engine will terminate the request when it notices this error\n      if (typeof req.method !== \"string\" || !req.method) {\n        res.error = new SerializableError({\n          code: -32603,\n          message: \"invalid method\"\n        });\n        end();\n        return;\n      }\n\n      next(function (done) {\n        var error = res.error;\n\n        if (!error) {\n          return done();\n        }\n\n        log.error(\"OpenLogin - RPC Error: \".concat(error.message), error);\n        return done();\n      });\n    } catch (error) {\n      log.error(\"OpenLogin - RPC Error thrown: \".concat(error.message), error);\n      res.error = new SerializableError({\n        code: -32603,\n        message: error.message\n      });\n      end();\n    }\n  };\n}\n\nfunction createStreamMiddleware() {\n  var idMap = {};\n\n  function readNoop() {\n    return false;\n  }\n\n  var events = new SafeEventEmitter();\n\n  function processResponse(res) {\n    var context = idMap[res.id];\n\n    if (!context) {\n      throw new Error(\"StreamMiddleware - Unknown response id \\\"\".concat(res.id, \"\\\"\"));\n    }\n\n    delete idMap[res.id]; // copy whole res onto original res\n\n    Object.assign(context.res, res); // run callback on empty stack,\n    // prevent internal stream-handler from catching errors\n\n    setTimeout(context.end);\n  }\n\n  function processNotification(res) {\n    events.emit(\"notification\", res);\n  }\n\n  function processMessage(res, _encoding, cb) {\n    var err;\n\n    try {\n      var isNotification = !res.id;\n\n      if (isNotification) {\n        processNotification(res);\n      } else {\n        processResponse(res);\n      }\n    } catch (_err) {\n      err = _err;\n    } // continue processing stream\n\n\n    cb(err);\n  }\n\n  var stream = new Duplex({\n    objectMode: true,\n    read: readNoop,\n    write: processMessage\n  });\n\n  var middleware = function middleware(req, res, next, end) {\n    // write req to stream\n    stream.push(req); // register request on id map\n\n    idMap[req.id] = {\n      req: req,\n      res: res,\n      next: next,\n      end: end\n    };\n  };\n\n  return {\n    events: events,\n    middleware: middleware,\n    stream: stream\n  };\n}\n\nfunction createScaffoldMiddleware(handlers) {\n  return function (req, res, next, end) {\n    var handler = handlers[req.method]; // if no handler, return\n\n    if (handler === undefined) {\n      return next();\n    } // if handler is fn, call as middleware\n\n\n    if (typeof handler === \"function\") {\n      return handler(req, res, next, end);\n    } // if handler is some other value, use as result\n\n\n    res.result = handler;\n    return end();\n  };\n}\n\nfunction createIdRemapMiddleware() {\n  return function (req, res, next, _end) {\n    var originalId = req.id;\n    var newId = randomId();\n    req.id = newId;\n    res.id = newId;\n    next(function (done) {\n      req.id = originalId;\n      res.id = originalId;\n      done();\n    });\n  };\n}\n\nfunction createLoggerMiddleware(logger) {\n  return function (req, res, next, _) {\n    logger.debug(\"REQ\", req, \"RES\", res);\n    next();\n  };\n}\n\nfunction createAsyncMiddleware(asyncMiddleware) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(req, res, next, end) {\n      var resolveNextPromise, nextPromise, returnHandlerCallback, nextWasCalled, asyncNext;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // nextPromise is the key to the implementation\n              // it is resolved by the return handler passed to the\n              // \"next\" function\n              nextPromise = new Promise(function (resolve) {\n                resolveNextPromise = resolve;\n              });\n              returnHandlerCallback = null;\n              nextWasCalled = false; // This will be called by the consumer's async middleware.\n\n              asyncNext = /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          nextWasCalled = true; // We pass a return handler to next(). When it is called by the engine,\n                          // the consumer's async middleware will resume executing.\n\n                          next(function (runReturnHandlersCallback) {\n                            // This callback comes from JRPCEngine._runReturnHandlers\n                            returnHandlerCallback = runReturnHandlersCallback;\n                            resolveNextPromise();\n                          });\n                          _context.next = 4;\n                          return nextPromise;\n\n                        case 4:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function asyncNext() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              _context2.prev = 4;\n              _context2.next = 7;\n              return asyncMiddleware(req, res, asyncNext);\n\n            case 7:\n              if (!nextWasCalled) {\n                _context2.next = 13;\n                break;\n              }\n\n              _context2.next = 10;\n              return nextPromise;\n\n            case 10:\n              // we must wait until the return handler is called\n              returnHandlerCallback(null);\n              _context2.next = 14;\n              break;\n\n            case 13:\n              end(null);\n\n            case 14:\n              _context2.next = 19;\n              break;\n\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](4);\n\n              if (returnHandlerCallback) {\n                returnHandlerCallback(_context2.t0);\n              } else {\n                end(_context2.t0);\n              }\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[4, 16]]);\n    }));\n\n    return function (_x, _x2, _x3, _x4) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _createSuper$3(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$3();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$3() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * A JSON-RPC request and response processor.\n * Give it a stack of middleware, pass it requests, and get back responses.\n */\n\n\nvar JRPCEngine = /*#__PURE__*/function (_SafeEventEmitter) {\n  _inherits(JRPCEngine, _SafeEventEmitter);\n\n  var _super = _createSuper$3(JRPCEngine);\n\n  function JRPCEngine() {\n    var _this;\n\n    _classCallCheck(this, JRPCEngine);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"_middleware\", void 0);\n\n    _this._middleware = [];\n    return _this;\n  }\n  /**\n   * Serially executes the given stack of middleware.\n   *\n   * @returns An array of any error encountered during middleware execution,\n   * a boolean indicating whether the request was completed, and an array of\n   * middleware-defined return handlers.\n   */\n\n\n  _createClass(JRPCEngine, [{\n    key: \"push\",\n    value:\n    /**\n     * Add a middleware function to the engine's middleware stack.\n     *\n     * @param middleware - The middleware function to add.\n     */\n    function push(middleware) {\n      this._middleware.push(middleware);\n    }\n  }, {\n    key: \"handle\",\n    value: function handle(req, cb) {\n      if (cb && typeof cb !== \"function\") {\n        throw new Error('\"callback\" must be a function if provided.');\n      }\n\n      if (Array.isArray(req)) {\n        if (cb) {\n          return this._handleBatch(req, cb);\n        }\n\n        return this._handleBatch(req);\n      }\n\n      if (cb) {\n        return this._handle(req, cb);\n      }\n\n      return this._promiseHandle(req);\n    }\n    /**\n     * Returns this engine as a middleware function that can be pushed to other\n     * engines.\n     *\n     * @returns This engine as a middleware function.\n     */\n\n  }, {\n    key: \"asMiddleware\",\n    value: function asMiddleware() {\n      var _this2 = this;\n\n      return /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(req, res, next, end) {\n          var _yield$JRPCEngine$_ru, _yield$JRPCEngine$_ru2, middlewareError, isComplete, returnHandlers;\n\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n                  _context2.next = 3;\n                  return JRPCEngine._runAllMiddleware(req, res, _this2._middleware);\n\n                case 3:\n                  _yield$JRPCEngine$_ru = _context2.sent;\n                  _yield$JRPCEngine$_ru2 = _slicedToArray(_yield$JRPCEngine$_ru, 3);\n                  middlewareError = _yield$JRPCEngine$_ru2[0];\n                  isComplete = _yield$JRPCEngine$_ru2[1];\n                  returnHandlers = _yield$JRPCEngine$_ru2[2];\n\n                  if (!isComplete) {\n                    _context2.next = 12;\n                    break;\n                  }\n\n                  _context2.next = 11;\n                  return JRPCEngine._runReturnHandlers(returnHandlers);\n\n                case 11:\n                  return _context2.abrupt(\"return\", end(middlewareError));\n\n                case 12:\n                  return _context2.abrupt(\"return\", next( /*#__PURE__*/function () {\n                    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(handlerCallback) {\n                      return _regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              _context.prev = 0;\n                              _context.next = 3;\n                              return JRPCEngine._runReturnHandlers(returnHandlers);\n\n                            case 3:\n                              _context.next = 8;\n                              break;\n\n                            case 5:\n                              _context.prev = 5;\n                              _context.t0 = _context[\"catch\"](0);\n                              return _context.abrupt(\"return\", handlerCallback(_context.t0));\n\n                            case 8:\n                              return _context.abrupt(\"return\", handlerCallback());\n\n                            case 9:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee, null, [[0, 5]]);\n                    }));\n\n                    return function (_x5) {\n                      return _ref2.apply(this, arguments);\n                    };\n                  }()));\n\n                case 15:\n                  _context2.prev = 15;\n                  _context2.t0 = _context2[\"catch\"](0);\n                  return _context2.abrupt(\"return\", end(_context2.t0));\n\n                case 18:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[0, 15]]);\n        }));\n\n        return function (_x, _x2, _x3, _x4) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    }\n  }, {\n    key: \"_handleBatch\",\n    value: function () {\n      var _handleBatch2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(reqs, cb) {\n        var responses;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return Promise.all( // 1. Begin executing each request in the order received\n                reqs.map(this._promiseHandle.bind(this)));\n\n              case 3:\n                responses = _context3.sent;\n\n                if (!cb) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", cb(null, responses));\n\n              case 6:\n                return _context3.abrupt(\"return\", responses);\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](0);\n\n                if (!cb) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", cb(_context3.t0));\n\n              case 13:\n                throw _context3.t0;\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 9]]);\n      }));\n\n      function _handleBatch(_x6, _x7) {\n        return _handleBatch2.apply(this, arguments);\n      }\n\n      return _handleBatch;\n    }()\n    /**\n     * A promise-wrapped _handle.\n     */\n\n  }, {\n    key: \"_promiseHandle\",\n    value: function _promiseHandle(req) {\n      var _this3 = this;\n\n      return new Promise(function (resolve) {\n        _this3._handle(req, function (_err, res) {\n          // There will always be a response, and it will always have any error\n          // that is caught and propagated.\n          resolve(res);\n        });\n      });\n    }\n    /**\n     * Ensures that the request object is valid, processes it, and passes any\n     * error and the response object to the given callback.\n     *\n     * Does not reject.\n     */\n\n  }, {\n    key: \"_handle\",\n    value: function () {\n      var _handle2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(callerReq, cb) {\n        var _error2, _error3, req, res, error;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(!callerReq || Array.isArray(callerReq) || _typeof(callerReq) !== \"object\")) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                _error2 = new SerializableError({\n                  code: -32603,\n                  message: \"request must be plain object\"\n                });\n                return _context4.abrupt(\"return\", cb(_error2, {\n                  id: undefined,\n                  jsonrpc: \"2.0\",\n                  error: _error2\n                }));\n\n              case 3:\n                if (!(typeof callerReq.method !== \"string\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                _error3 = new SerializableError({\n                  code: -32603,\n                  message: \"method must be string\"\n                });\n                return _context4.abrupt(\"return\", cb(_error3, {\n                  id: callerReq.id,\n                  jsonrpc: \"2.0\",\n                  error: _error3\n                }));\n\n              case 6:\n                req = _objectSpread$1({}, callerReq);\n                res = {\n                  id: req.id,\n                  jsonrpc: req.jsonrpc\n                };\n                error = null;\n                _context4.prev = 9;\n                _context4.next = 12;\n                return this._processRequest(req, res);\n\n              case 12:\n                _context4.next = 17;\n                break;\n\n              case 14:\n                _context4.prev = 14;\n                _context4.t0 = _context4[\"catch\"](9); // A request handler error, a re-thrown middleware error, or something\n                // unexpected.\n\n                error = _context4.t0;\n\n              case 17:\n                if (error) {\n                  // Ensure no result is present on an errored response\n                  delete res.result;\n\n                  if (!res.error) {\n                    res.error = serializeError(error);\n                  }\n                }\n\n                return _context4.abrupt(\"return\", cb(error, res));\n\n              case 19:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[9, 14]]);\n      }));\n\n      function _handle(_x8, _x9) {\n        return _handle2.apply(this, arguments);\n      }\n\n      return _handle;\n    }()\n    /**\n     * For the given request and response, runs all middleware and their return\n     * handlers, if any, and ensures that internal request processing semantics\n     * are satisfied.\n     */\n\n  }, {\n    key: \"_processRequest\",\n    value: function () {\n      var _processRequest2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(req, res) {\n        var _yield$JRPCEngine$_ru3, _yield$JRPCEngine$_ru4, error, isComplete, returnHandlers;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n              case 2:\n                _yield$JRPCEngine$_ru3 = _context5.sent;\n                _yield$JRPCEngine$_ru4 = _slicedToArray(_yield$JRPCEngine$_ru3, 3);\n                error = _yield$JRPCEngine$_ru4[0];\n                isComplete = _yield$JRPCEngine$_ru4[1];\n                returnHandlers = _yield$JRPCEngine$_ru4[2]; // Throw if \"end\" was not called, or if the response has neither a result\n                // nor an error.\n\n                JRPCEngine._checkForCompletion(req, res, isComplete); // The return handlers should run even if an error was encountered during\n                // middleware processing.\n\n\n                _context5.next = 10;\n                return JRPCEngine._runReturnHandlers(returnHandlers);\n\n              case 10:\n                if (!error) {\n                  _context5.next = 12;\n                  break;\n                }\n\n                throw error;\n\n              case 12:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function _processRequest(_x10, _x11) {\n        return _processRequest2.apply(this, arguments);\n      }\n\n      return _processRequest;\n    }()\n  }], [{\n    key: \"_runAllMiddleware\",\n    value: function () {\n      var _runAllMiddleware2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(req, res, middlewareStack) {\n        var returnHandlers, error, isComplete, _iterator, _step, middleware, _yield$JRPCEngine$_ru5, _yield$JRPCEngine$_ru6;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                returnHandlers = [];\n                error = null;\n                isComplete = false; // Go down stack of middleware, call and collect optional returnHandlers\n\n                _iterator = _createForOfIteratorHelper(middlewareStack);\n                _context6.prev = 4;\n\n                _iterator.s();\n\n              case 6:\n                if ((_step = _iterator.n()).done) {\n                  _context6.next = 18;\n                  break;\n                }\n\n                middleware = _step.value;\n                _context6.next = 10;\n                return JRPCEngine._runMiddleware(req, res, middleware, returnHandlers);\n\n              case 10:\n                _yield$JRPCEngine$_ru5 = _context6.sent;\n                _yield$JRPCEngine$_ru6 = _slicedToArray(_yield$JRPCEngine$_ru5, 2);\n                error = _yield$JRPCEngine$_ru6[0];\n                isComplete = _yield$JRPCEngine$_ru6[1];\n\n                if (!isComplete) {\n                  _context6.next = 16;\n                  break;\n                }\n\n                return _context6.abrupt(\"break\", 18);\n\n              case 16:\n                _context6.next = 6;\n                break;\n\n              case 18:\n                _context6.next = 23;\n                break;\n\n              case 20:\n                _context6.prev = 20;\n                _context6.t0 = _context6[\"catch\"](4);\n\n                _iterator.e(_context6.t0);\n\n              case 23:\n                _context6.prev = 23;\n\n                _iterator.f();\n\n                return _context6.finish(23);\n\n              case 26:\n                return _context6.abrupt(\"return\", [error, isComplete, returnHandlers.reverse()]);\n\n              case 27:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[4, 20, 23, 26]]);\n      }));\n\n      function _runAllMiddleware(_x12, _x13, _x14) {\n        return _runAllMiddleware2.apply(this, arguments);\n      }\n\n      return _runAllMiddleware;\n    }()\n    /**\n     * Runs an individual middleware.\n     *\n     * @returns An array of any error encountered during middleware exection,\n     * and a boolean indicating whether the request should end.\n     */\n\n  }, {\n    key: \"_runMiddleware\",\n    value: function _runMiddleware(req, res, middleware, returnHandlers) {\n      return new Promise(function (resolve) {\n        var end = function end(err) {\n          var error = err || res.error;\n\n          if (error) {\n            res.error = serializeError(error);\n          } // True indicates that the request should end\n\n\n          resolve([error, true]);\n        };\n\n        var next = function next(returnHandler) {\n          if (res.error) {\n            end(res.error);\n          } else {\n            if (returnHandler) {\n              if (typeof returnHandler !== \"function\") {\n                end(new SerializableError({\n                  code: -32603,\n                  message: \"JRPCEngine: 'next' return handlers must be functions\"\n                }));\n              }\n\n              returnHandlers.push(returnHandler);\n            } // False indicates that the request should not end\n\n\n            resolve([null, false]);\n          }\n        };\n\n        try {\n          middleware(req, res, next, end);\n        } catch (error) {\n          end(error);\n        }\n      });\n    }\n    /**\n     * Serially executes array of return handlers. The request and response are\n     * assumed to be in their scope.\n     */\n\n  }, {\n    key: \"_runReturnHandlers\",\n    value: function () {\n      var _runReturnHandlers2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(handlers) {\n        var _iterator2, _step2, _loop;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _iterator2 = _createForOfIteratorHelper(handlers);\n                _context8.prev = 1;\n                _loop = /*#__PURE__*/_regeneratorRuntime.mark(function _loop() {\n                  var handler;\n                  return _regeneratorRuntime.wrap(function _loop$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          handler = _step2.value;\n                          _context7.next = 3;\n                          return new Promise(function (resolve, reject) {\n                            handler(function (err) {\n                              return err ? reject(err) : resolve();\n                            });\n                          });\n\n                        case 3:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _loop);\n                });\n\n                _iterator2.s();\n\n              case 4:\n                if ((_step2 = _iterator2.n()).done) {\n                  _context8.next = 8;\n                  break;\n                }\n\n                return _context8.delegateYield(_loop(), \"t0\", 6);\n\n              case 6:\n                _context8.next = 4;\n                break;\n\n              case 8:\n                _context8.next = 13;\n                break;\n\n              case 10:\n                _context8.prev = 10;\n                _context8.t1 = _context8[\"catch\"](1);\n\n                _iterator2.e(_context8.t1);\n\n              case 13:\n                _context8.prev = 13;\n\n                _iterator2.f();\n\n                return _context8.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee7, null, [[1, 10, 13, 16]]);\n      }));\n\n      function _runReturnHandlers(_x15) {\n        return _runReturnHandlers2.apply(this, arguments);\n      }\n\n      return _runReturnHandlers;\n    }()\n    /**\n     * Throws an error if the response has neither a result nor an error, or if\n     * the \"isComplete\" flag is falsy.\n     */\n\n  }, {\n    key: \"_checkForCompletion\",\n    value: function _checkForCompletion(req, res, isComplete) {\n      if (!(\"result\" in res) && !(\"error\" in res)) {\n        throw new SerializableError({\n          code: -32603,\n          message: \"Response has no error or result for request\"\n        });\n      }\n\n      if (!isComplete) {\n        throw new SerializableError({\n          code: -32603,\n          message: \"Nothing ended request\"\n        });\n      }\n    }\n  }]);\n\n  return JRPCEngine;\n}(SafeEventEmitter);\n\nfunction mergeMiddleware(middlewareStack) {\n  var engine = new JRPCEngine();\n  middlewareStack.forEach(function (middleware) {\n    return engine.push(middleware);\n  });\n  return engine.asMiddleware();\n}\n\nfunction createEngineStream(opts) {\n  if (!opts || !opts.engine) {\n    throw new Error(\"Missing engine parameter!\");\n  }\n\n  var engine = opts.engine; // eslint-disable-next-line prefer-const\n\n  var stream;\n\n  function read() {\n    return undefined;\n  }\n\n  function write(req, _encoding, cb) {\n    engine.handle(req, function (_err, res) {\n      stream.push(res);\n    });\n    cb();\n  }\n\n  stream = new Duplex({\n    objectMode: true,\n    read: read,\n    write: write\n  }); // forward notifications\n\n  if (engine.on) {\n    engine.on(\"notification\", function (message) {\n      stream.push(message);\n    });\n  }\n\n  return stream;\n}\n\nfunction _createSuper$2(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$2();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$2() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar Substream = /*#__PURE__*/function (_Duplex) {\n  _inherits(Substream, _Duplex);\n\n  var _super = _createSuper$2(Substream);\n\n  function Substream(_ref) {\n    var _this;\n\n    var parent = _ref.parent,\n        name = _ref.name;\n\n    _classCallCheck(this, Substream);\n\n    _this = _super.call(this, {\n      objectMode: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parent\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_name\", void 0);\n\n    _this._parent = parent;\n    _this._name = name;\n    return _this;\n  }\n  /**\n   * Explicitly sets read operations to a no-op.\n   */\n\n\n  _createClass(Substream, [{\n    key: \"_read\",\n    value: function _read() {\n      return undefined;\n    }\n    /**\n     * Called when data should be written to this writable stream.\n     *\n     * @param chunk - Arbitrary object to write\n     * @param encoding - Encoding to use when writing payload\n     * @param callback - Called when writing is complete or an error occurs\n     */\n\n  }, {\n    key: \"_write\",\n    value: function _write(chunk, _encoding, callback) {\n      this._parent.push({\n        name: this._name,\n        data: chunk\n      });\n\n      callback();\n    }\n  }]);\n\n  return Substream;\n}(Duplex);\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _createSuper$1(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$1();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$1() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar IGNORE_SUBSTREAM = Symbol(\"IGNORE_SUBSTREAM\");\n\nvar ObjectMultiplex = /*#__PURE__*/function (_Duplex) {\n  _inherits(ObjectMultiplex, _Duplex);\n\n  var _super = _createSuper$1(ObjectMultiplex);\n\n  function ObjectMultiplex() {\n    var _this;\n\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ObjectMultiplex);\n\n    _this = _super.call(this, _objectSpread(_objectSpread({}, opts), {}, {\n      objectMode: true\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_substreams\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"getStream\", void 0);\n\n    _this._substreams = {};\n    return _this;\n  }\n\n  _createClass(ObjectMultiplex, [{\n    key: \"createStream\",\n    value: function createStream(name) {\n      // validate name\n      if (!name) {\n        throw new Error(\"ObjectMultiplex - name must not be empty\");\n      }\n\n      if (this._substreams[name]) {\n        throw new Error(\"ObjectMultiplex - Substream for name \\\"\".concat(name, \"\\\" already exists\"));\n      } // create substream\n\n\n      var substream = new Substream({\n        parent: this,\n        name: name\n      });\n      this._substreams[name] = substream; // listen for parent stream to end\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n      anyStreamEnd(this, function (_error) {\n        return substream.destroy(_error || undefined);\n      });\n      return substream;\n    } // ignore streams (dont display orphaned data warning)\n\n  }, {\n    key: \"ignoreStream\",\n    value: function ignoreStream(name) {\n      // validate name\n      if (!name) {\n        throw new Error(\"ObjectMultiplex - name must not be empty\");\n      }\n\n      if (this._substreams[name]) {\n        throw new Error(\"ObjectMultiplex - Substream for name \\\"\".concat(name, \"\\\" already exists\"));\n      } // set\n\n\n      this._substreams[name] = IGNORE_SUBSTREAM;\n    }\n  }, {\n    key: \"_read\",\n    value: function _read() {\n      return undefined;\n    }\n  }, {\n    key: \"_write\",\n    value: function _write(chunk, _encoding, callback) {\n      var name = chunk.name,\n          data = chunk.data;\n\n      if (!name) {\n        window.console.warn(\"ObjectMultiplex - malformed chunk without name \\\"\".concat(chunk, \"\\\"\"));\n        return callback();\n      } // get corresponding substream\n\n\n      var substream = this._substreams[name];\n\n      if (!substream) {\n        window.console.warn(\"ObjectMultiplex - orphaned data for stream \\\"\".concat(name, \"\\\"\"));\n        return callback();\n      } // push data into substream\n\n\n      if (substream !== IGNORE_SUBSTREAM) {\n        substream.push(data);\n      }\n\n      return callback();\n    }\n  }]);\n\n  return ObjectMultiplex;\n}(Duplex); // util\n\n\nfunction anyStreamEnd(stream, _cb) {\n  var cb = once(_cb);\n  eos(stream, {\n    readable: false\n  }, cb);\n  eos(stream, {\n    writable: false\n  }, cb);\n}\n\nfunction setupMultiplex(stream) {\n  var mux = new ObjectMultiplex();\n\n  mux.getStream = function streamHelper(name) {\n    if (this._substreams[name]) {\n      return this._substreams[name];\n    }\n\n    return this.createStream(name);\n  };\n\n  pump(stream, mux, stream, function (err) {\n    if (err) window.console.error(err);\n  });\n  return mux;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar PostMessageStream = /*#__PURE__*/function (_BasePostMessageStrea) {\n  _inherits(PostMessageStream, _BasePostMessageStrea);\n\n  var _super = _createSuper(PostMessageStream);\n\n  function PostMessageStream() {\n    _classCallCheck(this, PostMessageStream);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PostMessageStream, [{\n    key: \"_postMessage\",\n    value: function _postMessage(data) {\n      var originConstraint = this._targetOrigin;\n\n      if (_typeof(data) === \"object\") {\n        var dataObj = data;\n\n        if (_typeof(dataObj.data) === \"object\") {\n          var dataObjData = dataObj.data;\n\n          if (Array.isArray(dataObjData.params) && dataObjData.params.length > 0) {\n            var dataObjDataParam = dataObjData.params[0];\n\n            if (dataObjDataParam._origin) {\n              originConstraint = dataObjDataParam._origin;\n            } // add a constraint for the response\n\n\n            dataObjDataParam._origin = window.location.origin;\n          }\n        }\n      }\n\n      this._targetWindow.postMessage({\n        target: this._target,\n        data: data\n      }, originConstraint);\n    }\n  }]);\n\n  return PostMessageStream;\n}(BasePostMessageStream);\n\nexport { BasePostMessageStream, IGNORE_SUBSTREAM, JRPCEngine, ObjectMultiplex, PostMessageStream, SafeEventEmitter, SerializableError, Substream, createAsyncMiddleware, createEngineStream, createErrorMiddleware, createIdRemapMiddleware, createLoggerMiddleware, createScaffoldMiddleware, createStreamMiddleware, getRpcPromiseCallback, mergeMiddleware, setupMultiplex };","map":{"version":3,"sources":["../src/basePostMessageStream.ts","../src/safeEventEmitter.ts","../src/serializableError.ts","../src/jrpc.ts","../src/jrpcEngine.ts","../src/substream.ts","../src/mux.ts","../src/postMessageStream.ts"],"names":["noop","undefined","SYN","ACK","BRK","BasePostMessageStream","Duplex","name","target","targetWindow","window","targetOrigin","objectMode","Error","_init","_haveSyn","_name","_target","_targetWindow","_targetOrigin","_onMessage","onMessage","bind","_synIntervalId","addEventListener","_handShake","cork","_write","data","uncork","_break","push","err","emit","originConstraint","postMessage","event","message","origin","source","_onData","_","cb","_postMessage","removeEventListener","safeApply","handler","context","args","Reflect","apply","setTimeout","arrayClone","arr","n","length","copy","Array","i","SafeEventEmitter","EventEmitter","type","doError","events","_events","error","er","len","listeners","SerializableError","code","Number","isInteger","stringify","stack","getRpcPromiseCallback","resolve","reject","unwrapResult","response","isArray","result","createErrorMiddleware","log","req","res","next","end","method","done","createStreamMiddleware","idMap","readNoop","processResponse","id","Object","assign","processNotification","processMessage","_encoding","isNotification","_err","stream","read","write","middleware","createScaffoldMiddleware","handlers","createIdRemapMiddleware","_end","originalId","newId","randomId","createLoggerMiddleware","logger","debug","createAsyncMiddleware","asyncMiddleware","nextPromise","Promise","resolveNextPromise","returnHandlerCallback","nextWasCalled","asyncNext","runReturnHandlersCallback","JRPCEngine","_middleware","middlewareStack","returnHandlers","isComplete","_runMiddleware","reverse","serializeError","returnHandler","_handleBatch","_handle","_promiseHandle","middlewareError","_runAllMiddleware","_runReturnHandlers","handlerCallback","reqs","responses","all","map","callerReq","jsonrpc","_processRequest","_checkForCompletion","mergeMiddleware","engine","forEach","asMiddleware","createEngineStream","opts","handle","on","Substream","parent","_parent","chunk","callback","IGNORE_SUBSTREAM","Symbol","ObjectMultiplex","_substreams","substream","anyStreamEnd","_error","destroy","console","warn","_cb","once","eos","readable","writable","setupMultiplex","mux","getStream","streamHelper","createStream","pump","PostMessageStream","dataObj","dataObjData","params","dataObjDataParam","_origin","location"],"mappings":"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","sourcesContent":["import _typeof from '@babel/runtime/helpers/typeof';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { Duplex } from 'readable-stream';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport { randomId } from '@toruslabs/openlogin-utils';\nimport { EventEmitter } from 'events';\nimport _wrapNativeSuper from '@babel/runtime/helpers/wrapNativeSuper';\nimport stringify from 'fast-safe-stringify';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport { serializeError } from 'eth-rpc-errors';\nimport eos from 'end-of-stream';\nimport once from 'once';\nimport pump from 'pump';\n\nfunction _createSuper$6(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$6(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$6() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction noop() {\n  return undefined;\n}\nvar SYN = \"SYN\";\nvar ACK = \"ACK\";\nvar BRK = \"BRK\";\nvar BasePostMessageStream = /*#__PURE__*/function (_Duplex) {\n  _inherits(BasePostMessageStream, _Duplex);\n  var _super = _createSuper$6(BasePostMessageStream);\n  function BasePostMessageStream(_ref) {\n    var _this;\n    var name = _ref.name,\n      target = _ref.target,\n      _ref$targetWindow = _ref.targetWindow,\n      targetWindow = _ref$targetWindow === void 0 ? window : _ref$targetWindow,\n      _ref$targetOrigin = _ref.targetOrigin,\n      targetOrigin = _ref$targetOrigin === void 0 ? \"*\" : _ref$targetOrigin;\n    _classCallCheck(this, BasePostMessageStream);\n    _this = _super.call(this, {\n      objectMode: true\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_init\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_haveSyn\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_name\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_target\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_targetWindow\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_targetOrigin\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_onMessage\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_synIntervalId\", void 0);\n    if (!name || !target) {\n      throw new Error(\"Invalid input.\");\n    }\n    _this._init = false;\n    _this._haveSyn = false;\n    _this._name = name;\n    _this._target = target; // target origin\n    _this._targetWindow = targetWindow;\n    _this._targetOrigin = targetOrigin;\n    _this._onMessage = _this.onMessage.bind(_assertThisInitialized(_this));\n    _this._synIntervalId = null;\n    window.addEventListener(\"message\", _this._onMessage, false);\n    _this._handShake();\n    return _this;\n  }\n  _createClass(BasePostMessageStream, [{\n    key: \"_break\",\n    value: function _break() {\n      this.cork();\n      this._write(BRK, null, noop);\n      this._haveSyn = false;\n      this._init = false;\n    }\n  }, {\n    key: \"_handShake\",\n    value: function _handShake() {\n      this._write(SYN, null, noop);\n      this.cork();\n    }\n  }, {\n    key: \"_onData\",\n    value: function _onData(data) {\n      if (!this._init) {\n        // listen for handshake\n        if (data === SYN) {\n          this._haveSyn = true;\n          this._write(ACK, null, noop);\n        } else if (data === ACK) {\n          this._init = true;\n          if (!this._haveSyn) {\n            this._write(ACK, null, noop);\n          }\n          this.uncork();\n        }\n      } else if (data === BRK) {\n        this._break();\n      } else {\n        // forward message\n        try {\n          this.push(data);\n        } catch (err) {\n          this.emit(\"error\", err);\n        }\n      }\n    }\n  }, {\n    key: \"_postMessage\",\n    value: function _postMessage(data) {\n      var originConstraint = this._targetOrigin;\n      this._targetWindow.postMessage({\n        target: this._target,\n        data: data\n      }, originConstraint);\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(event) {\n      var message = event.data;\n      // validate message\n      if (this._targetOrigin !== \"*\" && event.origin !== this._targetOrigin || event.source !== this._targetWindow || _typeof(message) !== \"object\" || message.target !== this._name || !message.data) {\n        return;\n      }\n      this._onData(message.data);\n    }\n  }, {\n    key: \"_read\",\n    value: function _read() {\n      return undefined;\n    }\n  }, {\n    key: \"_write\",\n    value: function _write(data, _, cb) {\n      this._postMessage(data);\n      cb();\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      window.removeEventListener(\"message\", this._onMessage, false);\n    }\n  }]);\n  return BasePostMessageStream;\n}(Duplex);\n\nfunction _createSuper$5(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$5(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$5() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction safeApply(handler, context, args) {\n  try {\n    Reflect.apply(handler, context, args);\n  } catch (err) {\n    // Throw error after timeout so as not to interrupt the stack\n    setTimeout(function () {\n      throw err;\n    });\n  }\n}\nfunction arrayClone(arr) {\n  var n = arr.length;\n  var copy = new Array(n);\n  for (var i = 0; i < n; i += 1) {\n    copy[i] = arr[i];\n  }\n  return copy;\n}\nvar SafeEventEmitter = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(SafeEventEmitter, _EventEmitter);\n  var _super = _createSuper$5(SafeEventEmitter);\n  function SafeEventEmitter() {\n    _classCallCheck(this, SafeEventEmitter);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SafeEventEmitter, [{\n    key: \"emit\",\n    value: function emit(type) {\n      var doError = type === \"error\";\n      var events = this._events;\n      if (events !== undefined) {\n        doError = doError && events.error === undefined;\n      } else if (!doError) {\n        return false;\n      }\n      // If there is no 'error' event listener then throw.\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      if (doError) {\n        var er;\n        if (args.length > 0) {\n          er = args[0];\n        }\n        if (er instanceof Error) {\n          // Note: The comments on the `throw` lines are intentional, they show\n          // up in Node's output if this results in an unhandled exception.\n          throw er; // Unhandled 'error' event\n        }\n        // At least give some kind of context to the user\n        var err = new Error(\"Unhandled error.\".concat(er ? \" (\".concat(er.message, \")\") : \"\"));\n        err.context = er;\n        throw err; // Unhandled 'error' event\n      }\n\n      var handler = events[type];\n      if (handler === undefined) {\n        return false;\n      }\n      if (typeof handler === \"function\") {\n        safeApply(handler, this, args);\n      } else {\n        var len = handler.length;\n        var listeners = arrayClone(handler);\n        for (var i = 0; i < len; i += 1) {\n          safeApply(listeners[i], this, args);\n        }\n      }\n      return true;\n    }\n  }]);\n  return SafeEventEmitter;\n}(EventEmitter);\n\nfunction _createSuper$4(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$4(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$4() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar SerializableError = /*#__PURE__*/function (_Error) {\n  _inherits(SerializableError, _Error);\n  var _super = _createSuper$4(SerializableError);\n  function SerializableError(_ref) {\n    var _this;\n    var code = _ref.code,\n      message = _ref.message,\n      data = _ref.data;\n    _classCallCheck(this, SerializableError);\n    if (!Number.isInteger(code)) {\n      throw new Error(\"code must be an integer\");\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error(\"message must be string\");\n    }\n    _this = _super.call(this, message);\n    _defineProperty(_assertThisInitialized(_this), \"code\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"data\", void 0);\n    _this.code = code;\n    if (data !== undefined) {\n      _this.data = data;\n    }\n    return _this;\n  }\n  _createClass(SerializableError, [{\n    key: \"toString\",\n    value: function toString() {\n      return stringify({\n        code: this.code,\n        message: this.message,\n        data: this.data,\n        stack: this.stack\n      });\n    }\n  }]);\n  return SerializableError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar getRpcPromiseCallback = function getRpcPromiseCallback(resolve, reject) {\n  var unwrapResult = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return function (error, response) {\n    if (error || response.error) {\n      reject(error || response.error);\n    } else if (!unwrapResult || Array.isArray(response)) {\n      resolve(response);\n    } else {\n      resolve(response.result);\n    }\n  };\n};\nfunction createErrorMiddleware(log) {\n  return function (req, res, next, end) {\n    try {\n      // json-rpc-engine will terminate the request when it notices this error\n      if (typeof req.method !== \"string\" || !req.method) {\n        res.error = new SerializableError({\n          code: -32603,\n          message: \"invalid method\"\n        });\n        end();\n        return;\n      }\n      next(function (done) {\n        var error = res.error;\n        if (!error) {\n          return done();\n        }\n        log.error(\"OpenLogin - RPC Error: \".concat(error.message), error);\n        return done();\n      });\n    } catch (error) {\n      log.error(\"OpenLogin - RPC Error thrown: \".concat(error.message), error);\n      res.error = new SerializableError({\n        code: -32603,\n        message: error.message\n      });\n      end();\n    }\n  };\n}\nfunction createStreamMiddleware() {\n  var idMap = {};\n  function readNoop() {\n    return false;\n  }\n  var events = new SafeEventEmitter();\n  function processResponse(res) {\n    var context = idMap[res.id];\n    if (!context) {\n      throw new Error(\"StreamMiddleware - Unknown response id \\\"\".concat(res.id, \"\\\"\"));\n    }\n    delete idMap[res.id];\n    // copy whole res onto original res\n    Object.assign(context.res, res);\n    // run callback on empty stack,\n    // prevent internal stream-handler from catching errors\n    setTimeout(context.end);\n  }\n  function processNotification(res) {\n    events.emit(\"notification\", res);\n  }\n  function processMessage(res, _encoding, cb) {\n    var err;\n    try {\n      var isNotification = !res.id;\n      if (isNotification) {\n        processNotification(res);\n      } else {\n        processResponse(res);\n      }\n    } catch (_err) {\n      err = _err;\n    }\n    // continue processing stream\n    cb(err);\n  }\n  var stream = new Duplex({\n    objectMode: true,\n    read: readNoop,\n    write: processMessage\n  });\n  var middleware = function middleware(req, res, next, end) {\n    // write req to stream\n    stream.push(req);\n    // register request on id map\n    idMap[req.id] = {\n      req: req,\n      res: res,\n      next: next,\n      end: end\n    };\n  };\n  return {\n    events: events,\n    middleware: middleware,\n    stream: stream\n  };\n}\nfunction createScaffoldMiddleware(handlers) {\n  return function (req, res, next, end) {\n    var handler = handlers[req.method];\n    // if no handler, return\n    if (handler === undefined) {\n      return next();\n    }\n    // if handler is fn, call as middleware\n    if (typeof handler === \"function\") {\n      return handler(req, res, next, end);\n    }\n    // if handler is some other value, use as result\n    res.result = handler;\n    return end();\n  };\n}\nfunction createIdRemapMiddleware() {\n  return function (req, res, next, _end) {\n    var originalId = req.id;\n    var newId = randomId();\n    req.id = newId;\n    res.id = newId;\n    next(function (done) {\n      req.id = originalId;\n      res.id = originalId;\n      done();\n    });\n  };\n}\nfunction createLoggerMiddleware(logger) {\n  return function (req, res, next, _) {\n    logger.debug(\"REQ\", req, \"RES\", res);\n    next();\n  };\n}\nfunction createAsyncMiddleware(asyncMiddleware) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(req, res, next, end) {\n      var resolveNextPromise, nextPromise, returnHandlerCallback, nextWasCalled, asyncNext;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // nextPromise is the key to the implementation\n              // it is resolved by the return handler passed to the\n              // \"next\" function\n              nextPromise = new Promise(function (resolve) {\n                resolveNextPromise = resolve;\n              });\n              returnHandlerCallback = null;\n              nextWasCalled = false; // This will be called by the consumer's async middleware.\n              asyncNext = /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          nextWasCalled = true;\n                          // We pass a return handler to next(). When it is called by the engine,\n                          // the consumer's async middleware will resume executing.\n                          next(function (runReturnHandlersCallback) {\n                            // This callback comes from JRPCEngine._runReturnHandlers\n                            returnHandlerCallback = runReturnHandlersCallback;\n                            resolveNextPromise();\n                          });\n                          _context.next = 4;\n                          return nextPromise;\n                        case 4:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n                return function asyncNext() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n              _context2.prev = 4;\n              _context2.next = 7;\n              return asyncMiddleware(req, res, asyncNext);\n            case 7:\n              if (!nextWasCalled) {\n                _context2.next = 13;\n                break;\n              }\n              _context2.next = 10;\n              return nextPromise;\n            case 10:\n              // we must wait until the return handler is called\n              returnHandlerCallback(null);\n              _context2.next = 14;\n              break;\n            case 13:\n              end(null);\n            case 14:\n              _context2.next = 19;\n              break;\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](4);\n              if (returnHandlerCallback) {\n                returnHandlerCallback(_context2.t0);\n              } else {\n                end(_context2.t0);\n              }\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[4, 16]]);\n    }));\n    return function (_x, _x2, _x3, _x4) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper$3(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$3(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$3() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n/**\n * A JSON-RPC request and response processor.\n * Give it a stack of middleware, pass it requests, and get back responses.\n */\nvar JRPCEngine = /*#__PURE__*/function (_SafeEventEmitter) {\n  _inherits(JRPCEngine, _SafeEventEmitter);\n  var _super = _createSuper$3(JRPCEngine);\n  function JRPCEngine() {\n    var _this;\n    _classCallCheck(this, JRPCEngine);\n    _this = _super.call(this);\n    _defineProperty(_assertThisInitialized(_this), \"_middleware\", void 0);\n    _this._middleware = [];\n    return _this;\n  }\n  /**\n   * Serially executes the given stack of middleware.\n   *\n   * @returns An array of any error encountered during middleware execution,\n   * a boolean indicating whether the request was completed, and an array of\n   * middleware-defined return handlers.\n   */\n  _createClass(JRPCEngine, [{\n    key: \"push\",\n    value:\n    /**\n     * Add a middleware function to the engine's middleware stack.\n     *\n     * @param middleware - The middleware function to add.\n     */\n    function push(middleware) {\n      this._middleware.push(middleware);\n    }\n  }, {\n    key: \"handle\",\n    value: function handle(req, cb) {\n      if (cb && typeof cb !== \"function\") {\n        throw new Error('\"callback\" must be a function if provided.');\n      }\n      if (Array.isArray(req)) {\n        if (cb) {\n          return this._handleBatch(req, cb);\n        }\n        return this._handleBatch(req);\n      }\n      if (cb) {\n        return this._handle(req, cb);\n      }\n      return this._promiseHandle(req);\n    }\n    /**\n     * Returns this engine as a middleware function that can be pushed to other\n     * engines.\n     *\n     * @returns This engine as a middleware function.\n     */\n  }, {\n    key: \"asMiddleware\",\n    value: function asMiddleware() {\n      var _this2 = this;\n      return /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(req, res, next, end) {\n          var _yield$JRPCEngine$_ru, _yield$JRPCEngine$_ru2, middlewareError, isComplete, returnHandlers;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n                  _context2.next = 3;\n                  return JRPCEngine._runAllMiddleware(req, res, _this2._middleware);\n                case 3:\n                  _yield$JRPCEngine$_ru = _context2.sent;\n                  _yield$JRPCEngine$_ru2 = _slicedToArray(_yield$JRPCEngine$_ru, 3);\n                  middlewareError = _yield$JRPCEngine$_ru2[0];\n                  isComplete = _yield$JRPCEngine$_ru2[1];\n                  returnHandlers = _yield$JRPCEngine$_ru2[2];\n                  if (!isComplete) {\n                    _context2.next = 12;\n                    break;\n                  }\n                  _context2.next = 11;\n                  return JRPCEngine._runReturnHandlers(returnHandlers);\n                case 11:\n                  return _context2.abrupt(\"return\", end(middlewareError));\n                case 12:\n                  return _context2.abrupt(\"return\", next( /*#__PURE__*/function () {\n                    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(handlerCallback) {\n                      return _regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              _context.prev = 0;\n                              _context.next = 3;\n                              return JRPCEngine._runReturnHandlers(returnHandlers);\n                            case 3:\n                              _context.next = 8;\n                              break;\n                            case 5:\n                              _context.prev = 5;\n                              _context.t0 = _context[\"catch\"](0);\n                              return _context.abrupt(\"return\", handlerCallback(_context.t0));\n                            case 8:\n                              return _context.abrupt(\"return\", handlerCallback());\n                            case 9:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee, null, [[0, 5]]);\n                    }));\n                    return function (_x5) {\n                      return _ref2.apply(this, arguments);\n                    };\n                  }()));\n                case 15:\n                  _context2.prev = 15;\n                  _context2.t0 = _context2[\"catch\"](0);\n                  return _context2.abrupt(\"return\", end(_context2.t0));\n                case 18:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[0, 15]]);\n        }));\n        return function (_x, _x2, _x3, _x4) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    }\n  }, {\n    key: \"_handleBatch\",\n    value: function () {\n      var _handleBatch2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(reqs, cb) {\n        var responses;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return Promise.all(\n                // 1. Begin executing each request in the order received\n                reqs.map(this._promiseHandle.bind(this)));\n              case 3:\n                responses = _context3.sent;\n                if (!cb) {\n                  _context3.next = 6;\n                  break;\n                }\n                return _context3.abrupt(\"return\", cb(null, responses));\n              case 6:\n                return _context3.abrupt(\"return\", responses);\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](0);\n                if (!cb) {\n                  _context3.next = 13;\n                  break;\n                }\n                return _context3.abrupt(\"return\", cb(_context3.t0));\n              case 13:\n                throw _context3.t0;\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 9]]);\n      }));\n      function _handleBatch(_x6, _x7) {\n        return _handleBatch2.apply(this, arguments);\n      }\n      return _handleBatch;\n    }()\n    /**\n     * A promise-wrapped _handle.\n     */\n  }, {\n    key: \"_promiseHandle\",\n    value: function _promiseHandle(req) {\n      var _this3 = this;\n      return new Promise(function (resolve) {\n        _this3._handle(req, function (_err, res) {\n          // There will always be a response, and it will always have any error\n          // that is caught and propagated.\n          resolve(res);\n        });\n      });\n    }\n    /**\n     * Ensures that the request object is valid, processes it, and passes any\n     * error and the response object to the given callback.\n     *\n     * Does not reject.\n     */\n  }, {\n    key: \"_handle\",\n    value: function () {\n      var _handle2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(callerReq, cb) {\n        var _error2, _error3, req, res, error;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(!callerReq || Array.isArray(callerReq) || _typeof(callerReq) !== \"object\")) {\n                  _context4.next = 3;\n                  break;\n                }\n                _error2 = new SerializableError({\n                  code: -32603,\n                  message: \"request must be plain object\"\n                });\n                return _context4.abrupt(\"return\", cb(_error2, {\n                  id: undefined,\n                  jsonrpc: \"2.0\",\n                  error: _error2\n                }));\n              case 3:\n                if (!(typeof callerReq.method !== \"string\")) {\n                  _context4.next = 6;\n                  break;\n                }\n                _error3 = new SerializableError({\n                  code: -32603,\n                  message: \"method must be string\"\n                });\n                return _context4.abrupt(\"return\", cb(_error3, {\n                  id: callerReq.id,\n                  jsonrpc: \"2.0\",\n                  error: _error3\n                }));\n              case 6:\n                req = _objectSpread$1({}, callerReq);\n                res = {\n                  id: req.id,\n                  jsonrpc: req.jsonrpc\n                };\n                error = null;\n                _context4.prev = 9;\n                _context4.next = 12;\n                return this._processRequest(req, res);\n              case 12:\n                _context4.next = 17;\n                break;\n              case 14:\n                _context4.prev = 14;\n                _context4.t0 = _context4[\"catch\"](9);\n                // A request handler error, a re-thrown middleware error, or something\n                // unexpected.\n                error = _context4.t0;\n              case 17:\n                if (error) {\n                  // Ensure no result is present on an errored response\n                  delete res.result;\n                  if (!res.error) {\n                    res.error = serializeError(error);\n                  }\n                }\n                return _context4.abrupt(\"return\", cb(error, res));\n              case 19:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[9, 14]]);\n      }));\n      function _handle(_x8, _x9) {\n        return _handle2.apply(this, arguments);\n      }\n      return _handle;\n    }()\n    /**\n     * For the given request and response, runs all middleware and their return\n     * handlers, if any, and ensures that internal request processing semantics\n     * are satisfied.\n     */\n  }, {\n    key: \"_processRequest\",\n    value: function () {\n      var _processRequest2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(req, res) {\n        var _yield$JRPCEngine$_ru3, _yield$JRPCEngine$_ru4, error, isComplete, returnHandlers;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return JRPCEngine._runAllMiddleware(req, res, this._middleware);\n              case 2:\n                _yield$JRPCEngine$_ru3 = _context5.sent;\n                _yield$JRPCEngine$_ru4 = _slicedToArray(_yield$JRPCEngine$_ru3, 3);\n                error = _yield$JRPCEngine$_ru4[0];\n                isComplete = _yield$JRPCEngine$_ru4[1];\n                returnHandlers = _yield$JRPCEngine$_ru4[2];\n                // Throw if \"end\" was not called, or if the response has neither a result\n                // nor an error.\n                JRPCEngine._checkForCompletion(req, res, isComplete);\n                // The return handlers should run even if an error was encountered during\n                // middleware processing.\n                _context5.next = 10;\n                return JRPCEngine._runReturnHandlers(returnHandlers);\n              case 10:\n                if (!error) {\n                  _context5.next = 12;\n                  break;\n                }\n                throw error;\n              case 12:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n      function _processRequest(_x10, _x11) {\n        return _processRequest2.apply(this, arguments);\n      }\n      return _processRequest;\n    }()\n  }], [{\n    key: \"_runAllMiddleware\",\n    value: function () {\n      var _runAllMiddleware2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(req, res, middlewareStack) {\n        var returnHandlers, error, isComplete, _iterator, _step, middleware, _yield$JRPCEngine$_ru5, _yield$JRPCEngine$_ru6;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                returnHandlers = [];\n                error = null;\n                isComplete = false; // Go down stack of middleware, call and collect optional returnHandlers\n                _iterator = _createForOfIteratorHelper(middlewareStack);\n                _context6.prev = 4;\n                _iterator.s();\n              case 6:\n                if ((_step = _iterator.n()).done) {\n                  _context6.next = 18;\n                  break;\n                }\n                middleware = _step.value;\n                _context6.next = 10;\n                return JRPCEngine._runMiddleware(req, res, middleware, returnHandlers);\n              case 10:\n                _yield$JRPCEngine$_ru5 = _context6.sent;\n                _yield$JRPCEngine$_ru6 = _slicedToArray(_yield$JRPCEngine$_ru5, 2);\n                error = _yield$JRPCEngine$_ru6[0];\n                isComplete = _yield$JRPCEngine$_ru6[1];\n                if (!isComplete) {\n                  _context6.next = 16;\n                  break;\n                }\n                return _context6.abrupt(\"break\", 18);\n              case 16:\n                _context6.next = 6;\n                break;\n              case 18:\n                _context6.next = 23;\n                break;\n              case 20:\n                _context6.prev = 20;\n                _context6.t0 = _context6[\"catch\"](4);\n                _iterator.e(_context6.t0);\n              case 23:\n                _context6.prev = 23;\n                _iterator.f();\n                return _context6.finish(23);\n              case 26:\n                return _context6.abrupt(\"return\", [error, isComplete, returnHandlers.reverse()]);\n              case 27:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[4, 20, 23, 26]]);\n      }));\n      function _runAllMiddleware(_x12, _x13, _x14) {\n        return _runAllMiddleware2.apply(this, arguments);\n      }\n      return _runAllMiddleware;\n    }()\n    /**\n     * Runs an individual middleware.\n     *\n     * @returns An array of any error encountered during middleware exection,\n     * and a boolean indicating whether the request should end.\n     */\n  }, {\n    key: \"_runMiddleware\",\n    value: function _runMiddleware(req, res, middleware, returnHandlers) {\n      return new Promise(function (resolve) {\n        var end = function end(err) {\n          var error = err || res.error;\n          if (error) {\n            res.error = serializeError(error);\n          }\n          // True indicates that the request should end\n          resolve([error, true]);\n        };\n        var next = function next(returnHandler) {\n          if (res.error) {\n            end(res.error);\n          } else {\n            if (returnHandler) {\n              if (typeof returnHandler !== \"function\") {\n                end(new SerializableError({\n                  code: -32603,\n                  message: \"JRPCEngine: 'next' return handlers must be functions\"\n                }));\n              }\n              returnHandlers.push(returnHandler);\n            }\n            // False indicates that the request should not end\n            resolve([null, false]);\n          }\n        };\n        try {\n          middleware(req, res, next, end);\n        } catch (error) {\n          end(error);\n        }\n      });\n    }\n    /**\n     * Serially executes array of return handlers. The request and response are\n     * assumed to be in their scope.\n     */\n  }, {\n    key: \"_runReturnHandlers\",\n    value: function () {\n      var _runReturnHandlers2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(handlers) {\n        var _iterator2, _step2, _loop;\n        return _regeneratorRuntime.wrap(function _callee7$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _iterator2 = _createForOfIteratorHelper(handlers);\n                _context8.prev = 1;\n                _loop = /*#__PURE__*/_regeneratorRuntime.mark(function _loop() {\n                  var handler;\n                  return _regeneratorRuntime.wrap(function _loop$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          handler = _step2.value;\n                          _context7.next = 3;\n                          return new Promise(function (resolve, reject) {\n                            handler(function (err) {\n                              return err ? reject(err) : resolve();\n                            });\n                          });\n                        case 3:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _loop);\n                });\n                _iterator2.s();\n              case 4:\n                if ((_step2 = _iterator2.n()).done) {\n                  _context8.next = 8;\n                  break;\n                }\n                return _context8.delegateYield(_loop(), \"t0\", 6);\n              case 6:\n                _context8.next = 4;\n                break;\n              case 8:\n                _context8.next = 13;\n                break;\n              case 10:\n                _context8.prev = 10;\n                _context8.t1 = _context8[\"catch\"](1);\n                _iterator2.e(_context8.t1);\n              case 13:\n                _context8.prev = 13;\n                _iterator2.f();\n                return _context8.finish(13);\n              case 16:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee7, null, [[1, 10, 13, 16]]);\n      }));\n      function _runReturnHandlers(_x15) {\n        return _runReturnHandlers2.apply(this, arguments);\n      }\n      return _runReturnHandlers;\n    }()\n    /**\n     * Throws an error if the response has neither a result nor an error, or if\n     * the \"isComplete\" flag is falsy.\n     */\n  }, {\n    key: \"_checkForCompletion\",\n    value: function _checkForCompletion(req, res, isComplete) {\n      if (!(\"result\" in res) && !(\"error\" in res)) {\n        throw new SerializableError({\n          code: -32603,\n          message: \"Response has no error or result for request\"\n        });\n      }\n      if (!isComplete) {\n        throw new SerializableError({\n          code: -32603,\n          message: \"Nothing ended request\"\n        });\n      }\n    }\n  }]);\n  return JRPCEngine;\n}(SafeEventEmitter);\nfunction mergeMiddleware(middlewareStack) {\n  var engine = new JRPCEngine();\n  middlewareStack.forEach(function (middleware) {\n    return engine.push(middleware);\n  });\n  return engine.asMiddleware();\n}\nfunction createEngineStream(opts) {\n  if (!opts || !opts.engine) {\n    throw new Error(\"Missing engine parameter!\");\n  }\n  var engine = opts.engine;\n  // eslint-disable-next-line prefer-const\n  var stream;\n  function read() {\n    return undefined;\n  }\n  function write(req, _encoding, cb) {\n    engine.handle(req, function (_err, res) {\n      stream.push(res);\n    });\n    cb();\n  }\n  stream = new Duplex({\n    objectMode: true,\n    read: read,\n    write: write\n  });\n  // forward notifications\n  if (engine.on) {\n    engine.on(\"notification\", function (message) {\n      stream.push(message);\n    });\n  }\n  return stream;\n}\n\nfunction _createSuper$2(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$2(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$2() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar Substream = /*#__PURE__*/function (_Duplex) {\n  _inherits(Substream, _Duplex);\n  var _super = _createSuper$2(Substream);\n  function Substream(_ref) {\n    var _this;\n    var parent = _ref.parent,\n      name = _ref.name;\n    _classCallCheck(this, Substream);\n    _this = _super.call(this, {\n      objectMode: true\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_parent\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_name\", void 0);\n    _this._parent = parent;\n    _this._name = name;\n    return _this;\n  }\n  /**\n   * Explicitly sets read operations to a no-op.\n   */\n  _createClass(Substream, [{\n    key: \"_read\",\n    value: function _read() {\n      return undefined;\n    }\n    /**\n     * Called when data should be written to this writable stream.\n     *\n     * @param chunk - Arbitrary object to write\n     * @param encoding - Encoding to use when writing payload\n     * @param callback - Called when writing is complete or an error occurs\n     */\n  }, {\n    key: \"_write\",\n    value: function _write(chunk, _encoding, callback) {\n      this._parent.push({\n        name: this._name,\n        data: chunk\n      });\n      callback();\n    }\n  }]);\n  return Substream;\n}(Duplex);\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper$1(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$1(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$1() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar IGNORE_SUBSTREAM = Symbol(\"IGNORE_SUBSTREAM\");\nvar ObjectMultiplex = /*#__PURE__*/function (_Duplex) {\n  _inherits(ObjectMultiplex, _Duplex);\n  var _super = _createSuper$1(ObjectMultiplex);\n  function ObjectMultiplex() {\n    var _this;\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, ObjectMultiplex);\n    _this = _super.call(this, _objectSpread(_objectSpread({}, opts), {}, {\n      objectMode: true\n    }));\n    _defineProperty(_assertThisInitialized(_this), \"_substreams\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"getStream\", void 0);\n    _this._substreams = {};\n    return _this;\n  }\n  _createClass(ObjectMultiplex, [{\n    key: \"createStream\",\n    value: function createStream(name) {\n      // validate name\n      if (!name) {\n        throw new Error(\"ObjectMultiplex - name must not be empty\");\n      }\n      if (this._substreams[name]) {\n        throw new Error(\"ObjectMultiplex - Substream for name \\\"\".concat(name, \"\\\" already exists\"));\n      }\n      // create substream\n      var substream = new Substream({\n        parent: this,\n        name: name\n      });\n      this._substreams[name] = substream;\n      // listen for parent stream to end\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      anyStreamEnd(this, function (_error) {\n        return substream.destroy(_error || undefined);\n      });\n      return substream;\n    }\n    // ignore streams (dont display orphaned data warning)\n  }, {\n    key: \"ignoreStream\",\n    value: function ignoreStream(name) {\n      // validate name\n      if (!name) {\n        throw new Error(\"ObjectMultiplex - name must not be empty\");\n      }\n      if (this._substreams[name]) {\n        throw new Error(\"ObjectMultiplex - Substream for name \\\"\".concat(name, \"\\\" already exists\"));\n      }\n      // set\n      this._substreams[name] = IGNORE_SUBSTREAM;\n    }\n  }, {\n    key: \"_read\",\n    value: function _read() {\n      return undefined;\n    }\n  }, {\n    key: \"_write\",\n    value: function _write(chunk, _encoding, callback) {\n      var name = chunk.name,\n        data = chunk.data;\n      if (!name) {\n        window.console.warn(\"ObjectMultiplex - malformed chunk without name \\\"\".concat(chunk, \"\\\"\"));\n        return callback();\n      }\n      // get corresponding substream\n      var substream = this._substreams[name];\n      if (!substream) {\n        window.console.warn(\"ObjectMultiplex - orphaned data for stream \\\"\".concat(name, \"\\\"\"));\n        return callback();\n      }\n      // push data into substream\n      if (substream !== IGNORE_SUBSTREAM) {\n        substream.push(data);\n      }\n      return callback();\n    }\n  }]);\n  return ObjectMultiplex;\n}(Duplex);\n// util\nfunction anyStreamEnd(stream, _cb) {\n  var cb = once(_cb);\n  eos(stream, {\n    readable: false\n  }, cb);\n  eos(stream, {\n    writable: false\n  }, cb);\n}\nfunction setupMultiplex(stream) {\n  var mux = new ObjectMultiplex();\n  mux.getStream = function streamHelper(name) {\n    if (this._substreams[name]) {\n      return this._substreams[name];\n    }\n    return this.createStream(name);\n  };\n  pump(stream, mux, stream, function (err) {\n    if (err) window.console.error(err);\n  });\n  return mux;\n}\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar PostMessageStream = /*#__PURE__*/function (_BasePostMessageStrea) {\n  _inherits(PostMessageStream, _BasePostMessageStrea);\n  var _super = _createSuper(PostMessageStream);\n  function PostMessageStream() {\n    _classCallCheck(this, PostMessageStream);\n    return _super.apply(this, arguments);\n  }\n  _createClass(PostMessageStream, [{\n    key: \"_postMessage\",\n    value: function _postMessage(data) {\n      var originConstraint = this._targetOrigin;\n      if (_typeof(data) === \"object\") {\n        var dataObj = data;\n        if (_typeof(dataObj.data) === \"object\") {\n          var dataObjData = dataObj.data;\n          if (Array.isArray(dataObjData.params) && dataObjData.params.length > 0) {\n            var dataObjDataParam = dataObjData.params[0];\n            if (dataObjDataParam._origin) {\n              originConstraint = dataObjDataParam._origin;\n            }\n            // add a constraint for the response\n            dataObjDataParam._origin = window.location.origin;\n          }\n        }\n      }\n      this._targetWindow.postMessage({\n        target: this._target,\n        data: data\n      }, originConstraint);\n    }\n  }]);\n  return PostMessageStream;\n}(BasePostMessageStream);\n\nexport { BasePostMessageStream, IGNORE_SUBSTREAM, JRPCEngine, ObjectMultiplex, PostMessageStream, SafeEventEmitter, SerializableError, Substream, createAsyncMiddleware, createEngineStream, createErrorMiddleware, createIdRemapMiddleware, createLoggerMiddleware, createScaffoldMiddleware, createStreamMiddleware, getRpcPromiseCallback, mergeMiddleware, setupMultiplex };\n//# sourceMappingURL=openloginJrpc.esm.js.map\n"]},"metadata":{},"sourceType":"module"}