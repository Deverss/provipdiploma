{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QRCode = void 0;\n\nvar isEqual = require(\"lodash.isequal\");\n\nvar qrGenerator = require(\"qrcode-generator\");\n\nvar React = require(\"react\");\n\nvar ReactDOM = require(\"react-dom\");\n\nvar QRCode =\n/** @class */\nfunction (_super) {\n  __extends(QRCode, _super);\n\n  function QRCode(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.canvas = React.createRef();\n    return _this;\n  }\n\n  QRCode.utf16to8 = function (str) {\n    var out = '',\n        i,\n        c;\n    var len = str.length;\n\n    for (i = 0; i < len; i++) {\n      c = str.charCodeAt(i);\n\n      if (c >= 0x0001 && c <= 0x007F) {\n        out += str.charAt(i);\n      } else if (c > 0x07FF) {\n        out += String.fromCharCode(0xE0 | c >> 12 & 0x0F);\n        out += String.fromCharCode(0x80 | c >> 6 & 0x3F);\n        out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n      } else {\n        out += String.fromCharCode(0xC0 | c >> 6 & 0x1F);\n        out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n      }\n    }\n\n    return out;\n  };\n  /**\n   * Draw a rounded square in the canvas\n   */\n\n\n  QRCode.prototype.drawRoundedSquare = function (lineWidth, x, y, size, color, radii, fill, ctx) {\n    ctx.lineWidth = lineWidth;\n    ctx.fillStyle = color;\n    ctx.strokeStyle = color; // Adjust coordinates so that the outside of the stroke is aligned to the edges\n\n    y += lineWidth / 2;\n    x += lineWidth / 2;\n    size -= lineWidth;\n\n    if (!Array.isArray(radii)) {\n      radii = [radii, radii, radii, radii];\n    } // Radius should not be greater than half the size or less than zero\n\n\n    radii = radii.map(function (r) {\n      r = Math.min(r, size / 2);\n      return r < 0 ? 0 : r;\n    });\n    var rTopLeft = radii[0] || 0;\n    var rTopRight = radii[1] || 0;\n    var rBottomRight = radii[2] || 0;\n    var rBottomLeft = radii[3] || 0;\n    ctx.beginPath();\n    ctx.moveTo(x + rTopLeft, y);\n    ctx.lineTo(x + size - rTopRight, y);\n    if (rTopRight) ctx.quadraticCurveTo(x + size, y, x + size, y + rTopRight);\n    ctx.lineTo(x + size, y + size - rBottomRight);\n    if (rBottomRight) ctx.quadraticCurveTo(x + size, y + size, x + size - rBottomRight, y + size);\n    ctx.lineTo(x + rBottomLeft, y + size);\n    if (rBottomLeft) ctx.quadraticCurveTo(x, y + size, x, y + size - rBottomLeft);\n    ctx.lineTo(x, y + rTopLeft);\n    if (rTopLeft) ctx.quadraticCurveTo(x, y, x + rTopLeft, y);\n    ctx.closePath();\n    ctx.stroke();\n\n    if (fill) {\n      ctx.fill();\n    }\n  };\n  /**\n   * Draw a single positional pattern eye.\n   */\n\n\n  QRCode.prototype.drawPositioningPattern = function (ctx, cellSize, offset, row, col, color, radii) {\n    if (radii === void 0) {\n      radii = [0, 0, 0, 0];\n    }\n\n    var lineWidth = Math.ceil(cellSize);\n    var radiiOuter;\n    var radiiInner;\n\n    if (typeof radii !== 'number' && !Array.isArray(radii)) {\n      radiiOuter = radii.outer || 0;\n      radiiInner = radii.inner || 0;\n    } else {\n      radiiOuter = radii;\n      radiiInner = radiiOuter;\n    }\n\n    var colorOuter;\n    var colorInner;\n\n    if (typeof color !== 'string') {\n      colorOuter = color.outer;\n      colorInner = color.inner;\n    } else {\n      colorOuter = color;\n      colorInner = color;\n    }\n\n    var y = row * cellSize + offset;\n    var x = col * cellSize + offset;\n    var size = cellSize * 7; // Outer box\n\n    this.drawRoundedSquare(lineWidth, x, y, size, colorOuter, radiiOuter, false, ctx); // Inner box\n\n    size = cellSize * 3;\n    y += cellSize * 2;\n    x += cellSize * 2;\n    this.drawRoundedSquare(lineWidth, x, y, size, colorInner, radiiInner, true, ctx);\n  };\n\n  ;\n  /**\n   * Is this dot inside a positional pattern zone.\n   */\n\n  QRCode.prototype.isInPositioninZone = function (col, row, zones) {\n    return zones.some(function (zone) {\n      return row >= zone.row && row <= zone.row + 7 && col >= zone.col && col <= zone.col + 7;\n    });\n  };\n\n  QRCode.prototype.transformPixelLengthIntoNumberOfCells = function (pixelLength, cellSize) {\n    return pixelLength / cellSize;\n  };\n\n  QRCode.prototype.isCoordinateInImage = function (col, row, dWidthLogo, dHeightLogo, dxLogo, dyLogo, cellSize, logoImage) {\n    if (logoImage) {\n      var numberOfCellsMargin = 2;\n      var firstRowOfLogo = this.transformPixelLengthIntoNumberOfCells(dxLogo, cellSize);\n      var firstColumnOfLogo = this.transformPixelLengthIntoNumberOfCells(dyLogo, cellSize);\n      var logoWidthInCells = this.transformPixelLengthIntoNumberOfCells(dWidthLogo, cellSize) - 1;\n      var logoHeightInCells = this.transformPixelLengthIntoNumberOfCells(dHeightLogo, cellSize) - 1;\n      return row >= firstRowOfLogo - numberOfCellsMargin && row <= firstRowOfLogo + logoWidthInCells + numberOfCellsMargin // check rows\n      && col >= firstColumnOfLogo - numberOfCellsMargin && col <= firstColumnOfLogo + logoHeightInCells + numberOfCellsMargin; // check cols\n    } else {\n      return false;\n    }\n  };\n\n  QRCode.prototype.shouldComponentUpdate = function (nextProps) {\n    return !isEqual(this.props, nextProps);\n  };\n\n  QRCode.prototype.componentDidMount = function () {\n    this.update();\n  };\n\n  QRCode.prototype.componentDidUpdate = function () {\n    this.update();\n  };\n\n  QRCode.prototype.update = function () {\n    var _a = this.props,\n        value = _a.value,\n        ecLevel = _a.ecLevel,\n        enableCORS = _a.enableCORS,\n        bgColor = _a.bgColor,\n        fgColor = _a.fgColor,\n        logoImage = _a.logoImage,\n        logoOpacity = _a.logoOpacity,\n        logoOnLoad = _a.logoOnLoad,\n        removeQrCodeBehindLogo = _a.removeQrCodeBehindLogo,\n        qrStyle = _a.qrStyle,\n        eyeRadius = _a.eyeRadius,\n        eyeColor = _a.eyeColor,\n        logoPaddingStyle = _a.logoPaddingStyle; // just make sure that these params are passed as numbers\n\n    var size = +this.props.size;\n    var quietZone = +this.props.quietZone;\n    var logoWidth = this.props.logoWidth ? +this.props.logoWidth : 0;\n    var logoHeight = this.props.logoHeight ? +this.props.logoHeight : 0;\n    var logoPadding = this.props.logoPadding ? +this.props.logoPadding : 0;\n    var qrCode = qrGenerator(0, ecLevel);\n    qrCode.addData(QRCode.utf16to8(value));\n    qrCode.make();\n    var canvas = ReactDOM.findDOMNode(this.canvas.current);\n    var ctx = canvas.getContext('2d');\n    var canvasSize = size + 2 * quietZone;\n    var length = qrCode.getModuleCount();\n    var cellSize = size / length;\n    var scale = window.devicePixelRatio || 1;\n    canvas.height = canvas.width = canvasSize * scale;\n    ctx.scale(scale, scale);\n    ctx.fillStyle = bgColor;\n    ctx.fillRect(0, 0, canvasSize, canvasSize);\n    var offset = quietZone;\n    var positioningZones = [{\n      row: 0,\n      col: 0\n    }, {\n      row: 0,\n      col: length - 7\n    }, {\n      row: length - 7,\n      col: 0\n    }];\n    ctx.strokeStyle = fgColor;\n\n    if (qrStyle === 'dots') {\n      ctx.fillStyle = fgColor;\n      var radius = cellSize / 2;\n\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones)) {\n            ctx.beginPath();\n            ctx.arc(Math.round(col * cellSize) + radius + offset, Math.round(row * cellSize) + radius + offset, radius / 100 * 75, 0, 2 * Math.PI, false);\n            ctx.closePath();\n            ctx.fill();\n          }\n        }\n      }\n    } else {\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones)) {\n            ctx.fillStyle = fgColor;\n            var w = Math.ceil((col + 1) * cellSize) - Math.floor(col * cellSize);\n            var h = Math.ceil((row + 1) * cellSize) - Math.floor(row * cellSize);\n            ctx.fillRect(Math.round(col * cellSize) + offset, Math.round(row * cellSize) + offset, w, h);\n          }\n        }\n      }\n    } // Draw positioning patterns\n\n\n    for (var i = 0; i < 3; i++) {\n      var _b = positioningZones[i],\n          row = _b.row,\n          col = _b.col;\n      var radii = eyeRadius;\n      var color = void 0;\n\n      if (Array.isArray(radii)) {\n        radii = radii[i];\n      }\n\n      if (typeof radii == 'number') {\n        radii = [radii, radii, radii, radii];\n      }\n\n      if (!eyeColor) {\n        // if not specified, eye color is the same as foreground, \n        color = fgColor;\n      } else {\n        if (Array.isArray(eyeColor)) {\n          // if array, we pass the single color\n          color = eyeColor[i];\n        } else {\n          color = eyeColor;\n        }\n      }\n\n      this.drawPositioningPattern(ctx, cellSize, offset, row, col, color, radii);\n    }\n\n    if (logoImage) {\n      var image_1 = new Image();\n\n      if (enableCORS) {\n        image_1.crossOrigin = 'Anonymous';\n      }\n\n      image_1.onload = function () {\n        ctx.save();\n        var dWidthLogo = logoWidth || size * 0.2;\n        var dHeightLogo = logoHeight || dWidthLogo;\n        var dxLogo = (size - dWidthLogo) / 2;\n        var dyLogo = (size - dHeightLogo) / 2;\n\n        if (removeQrCodeBehindLogo || logoPadding) {\n          ctx.beginPath();\n          ctx.strokeStyle = bgColor;\n          ctx.fillStyle = bgColor;\n          var dWidthLogoPadding = dWidthLogo + 2 * logoPadding;\n          var dHeightLogoPadding = dHeightLogo + 2 * logoPadding;\n          var dxLogoPadding = dxLogo + offset - logoPadding;\n          var dyLogoPadding = dyLogo + offset - logoPadding;\n\n          if (logoPaddingStyle === 'circle') {\n            var dxCenterLogoPadding = dxLogoPadding + dWidthLogoPadding / 2;\n            var dyCenterLogoPadding = dyLogoPadding + dHeightLogoPadding / 2;\n            ctx.ellipse(dxCenterLogoPadding, dyCenterLogoPadding, dWidthLogoPadding / 2, dHeightLogoPadding / 2, 0, 0, 2 * Math.PI);\n            ctx.stroke();\n            ctx.fill();\n          } else {\n            ctx.fillRect(dxLogoPadding, dyLogoPadding, dWidthLogoPadding, dHeightLogoPadding);\n          }\n        }\n\n        ctx.globalAlpha = logoOpacity;\n        ctx.drawImage(image_1, dxLogo + offset, dyLogo + offset, dWidthLogo, dHeightLogo);\n        ctx.restore();\n\n        if (logoOnLoad) {\n          logoOnLoad();\n        }\n      };\n\n      image_1.src = logoImage;\n    }\n  };\n\n  QRCode.prototype.render = function () {\n    var _a;\n\n    var qrSize = +this.props.size + 2 * +this.props.quietZone;\n    return React.createElement('canvas', {\n      id: (_a = this.props.id) !== null && _a !== void 0 ? _a : 'react-qrcode-logo',\n      height: qrSize,\n      width: qrSize,\n      style: {\n        height: qrSize + 'px',\n        width: qrSize + 'px'\n      },\n      ref: this.canvas\n    });\n  };\n\n  QRCode.defaultProps = {\n    value: 'https://reactjs.org/',\n    ecLevel: 'M',\n    enableCORS: false,\n    size: 150,\n    quietZone: 10,\n    bgColor: '#FFFFFF',\n    fgColor: '#000000',\n    logoOpacity: 1,\n    qrStyle: 'squares',\n    eyeRadius: [0, 0, 0],\n    logoPaddingStyle: 'square'\n  };\n  return QRCode;\n}(React.Component);\n\nexports.QRCode = QRCode;","map":{"version":3,"sources":["/Users/dev3rs/provipdiploma/node_modules/react-qrcode-logo/dist/index.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","QRCode","isEqual","require","qrGenerator","React","ReactDOM","_super","props","_this","call","canvas","createRef","utf16to8","str","out","i","c","len","length","charCodeAt","charAt","String","fromCharCode","drawRoundedSquare","lineWidth","x","y","size","color","radii","fill","ctx","fillStyle","strokeStyle","isArray","map","r","Math","min","rTopLeft","rTopRight","rBottomRight","rBottomLeft","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","stroke","drawPositioningPattern","cellSize","offset","row","col","ceil","radiiOuter","radiiInner","outer","inner","colorOuter","colorInner","isInPositioninZone","zones","some","zone","transformPixelLengthIntoNumberOfCells","pixelLength","isCoordinateInImage","dWidthLogo","dHeightLogo","dxLogo","dyLogo","logoImage","numberOfCellsMargin","firstRowOfLogo","firstColumnOfLogo","logoWidthInCells","logoHeightInCells","shouldComponentUpdate","nextProps","componentDidMount","update","componentDidUpdate","_a","ecLevel","enableCORS","bgColor","fgColor","logoOpacity","logoOnLoad","removeQrCodeBehindLogo","qrStyle","eyeRadius","eyeColor","logoPaddingStyle","quietZone","logoWidth","logoHeight","logoPadding","qrCode","addData","make","findDOMNode","current","getContext","canvasSize","getModuleCount","scale","window","devicePixelRatio","height","width","fillRect","positioningZones","radius","isDark","arc","round","PI","w","floor","h","_b","image_1","Image","crossOrigin","onload","save","dWidthLogoPadding","dHeightLogoPadding","dxLogoPadding","dyLogoPadding","dxCenterLogoPadding","dyCenterLogoPadding","ellipse","globalAlpha","drawImage","restore","src","render","qrSize","createElement","id","style","ref","defaultProps","Component"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QRCode = void 0;\nvar isEqual = require(\"lodash.isequal\");\nvar qrGenerator = require(\"qrcode-generator\");\nvar React = require(\"react\");\nvar ReactDOM = require(\"react-dom\");\nvar QRCode = /** @class */ (function (_super) {\n    __extends(QRCode, _super);\n    function QRCode(props) {\n        var _this = _super.call(this, props) || this;\n        _this.canvas = React.createRef();\n        return _this;\n    }\n    QRCode.utf16to8 = function (str) {\n        var out = '', i, c;\n        var len = str.length;\n        for (i = 0; i < len; i++) {\n            c = str.charCodeAt(i);\n            if ((c >= 0x0001) && (c <= 0x007F)) {\n                out += str.charAt(i);\n            }\n            else if (c > 0x07FF) {\n                out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n                out += String.fromCharCode(0x80 | ((c >> 6) & 0x3F));\n                out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));\n            }\n            else {\n                out += String.fromCharCode(0xC0 | ((c >> 6) & 0x1F));\n                out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));\n            }\n        }\n        return out;\n    };\n    /**\n     * Draw a rounded square in the canvas\n     */\n    QRCode.prototype.drawRoundedSquare = function (lineWidth, x, y, size, color, radii, fill, ctx) {\n        ctx.lineWidth = lineWidth;\n        ctx.fillStyle = color;\n        ctx.strokeStyle = color;\n        // Adjust coordinates so that the outside of the stroke is aligned to the edges\n        y += lineWidth / 2;\n        x += lineWidth / 2;\n        size -= lineWidth;\n        if (!Array.isArray(radii)) {\n            radii = [radii, radii, radii, radii];\n        }\n        // Radius should not be greater than half the size or less than zero\n        radii = radii.map(function (r) {\n            r = Math.min(r, size / 2);\n            return (r < 0) ? 0 : r;\n        });\n        var rTopLeft = radii[0] || 0;\n        var rTopRight = radii[1] || 0;\n        var rBottomRight = radii[2] || 0;\n        var rBottomLeft = radii[3] || 0;\n        ctx.beginPath();\n        ctx.moveTo(x + rTopLeft, y);\n        ctx.lineTo(x + size - rTopRight, y);\n        if (rTopRight)\n            ctx.quadraticCurveTo(x + size, y, x + size, y + rTopRight);\n        ctx.lineTo(x + size, y + size - rBottomRight);\n        if (rBottomRight)\n            ctx.quadraticCurveTo(x + size, y + size, x + size - rBottomRight, y + size);\n        ctx.lineTo(x + rBottomLeft, y + size);\n        if (rBottomLeft)\n            ctx.quadraticCurveTo(x, y + size, x, y + size - rBottomLeft);\n        ctx.lineTo(x, y + rTopLeft);\n        if (rTopLeft)\n            ctx.quadraticCurveTo(x, y, x + rTopLeft, y);\n        ctx.closePath();\n        ctx.stroke();\n        if (fill) {\n            ctx.fill();\n        }\n    };\n    /**\n     * Draw a single positional pattern eye.\n     */\n    QRCode.prototype.drawPositioningPattern = function (ctx, cellSize, offset, row, col, color, radii) {\n        if (radii === void 0) { radii = [0, 0, 0, 0]; }\n        var lineWidth = Math.ceil(cellSize);\n        var radiiOuter;\n        var radiiInner;\n        if (typeof radii !== 'number' && !Array.isArray(radii)) {\n            radiiOuter = radii.outer || 0;\n            radiiInner = radii.inner || 0;\n        }\n        else {\n            radiiOuter = radii;\n            radiiInner = radiiOuter;\n        }\n        var colorOuter;\n        var colorInner;\n        if (typeof color !== 'string') {\n            colorOuter = color.outer;\n            colorInner = color.inner;\n        }\n        else {\n            colorOuter = color;\n            colorInner = color;\n        }\n        var y = (row * cellSize) + offset;\n        var x = (col * cellSize) + offset;\n        var size = cellSize * 7;\n        // Outer box\n        this.drawRoundedSquare(lineWidth, x, y, size, colorOuter, radiiOuter, false, ctx);\n        // Inner box\n        size = cellSize * 3;\n        y += cellSize * 2;\n        x += cellSize * 2;\n        this.drawRoundedSquare(lineWidth, x, y, size, colorInner, radiiInner, true, ctx);\n    };\n    ;\n    /**\n     * Is this dot inside a positional pattern zone.\n     */\n    QRCode.prototype.isInPositioninZone = function (col, row, zones) {\n        return zones.some(function (zone) { return (row >= zone.row && row <= zone.row + 7 &&\n            col >= zone.col && col <= zone.col + 7); });\n    };\n    QRCode.prototype.transformPixelLengthIntoNumberOfCells = function (pixelLength, cellSize) {\n        return pixelLength / cellSize;\n    };\n    QRCode.prototype.isCoordinateInImage = function (col, row, dWidthLogo, dHeightLogo, dxLogo, dyLogo, cellSize, logoImage) {\n        if (logoImage) {\n            var numberOfCellsMargin = 2;\n            var firstRowOfLogo = this.transformPixelLengthIntoNumberOfCells(dxLogo, cellSize);\n            var firstColumnOfLogo = this.transformPixelLengthIntoNumberOfCells(dyLogo, cellSize);\n            var logoWidthInCells = this.transformPixelLengthIntoNumberOfCells(dWidthLogo, cellSize) - 1;\n            var logoHeightInCells = this.transformPixelLengthIntoNumberOfCells(dHeightLogo, cellSize) - 1;\n            return row >= firstRowOfLogo - numberOfCellsMargin && row <= firstRowOfLogo + logoWidthInCells + numberOfCellsMargin // check rows\n                && col >= firstColumnOfLogo - numberOfCellsMargin && col <= firstColumnOfLogo + logoHeightInCells + numberOfCellsMargin; // check cols\n        }\n        else {\n            return false;\n        }\n    };\n    QRCode.prototype.shouldComponentUpdate = function (nextProps) {\n        return !isEqual(this.props, nextProps);\n    };\n    QRCode.prototype.componentDidMount = function () {\n        this.update();\n    };\n    QRCode.prototype.componentDidUpdate = function () {\n        this.update();\n    };\n    QRCode.prototype.update = function () {\n        var _a = this.props, value = _a.value, ecLevel = _a.ecLevel, enableCORS = _a.enableCORS, bgColor = _a.bgColor, fgColor = _a.fgColor, logoImage = _a.logoImage, logoOpacity = _a.logoOpacity, logoOnLoad = _a.logoOnLoad, removeQrCodeBehindLogo = _a.removeQrCodeBehindLogo, qrStyle = _a.qrStyle, eyeRadius = _a.eyeRadius, eyeColor = _a.eyeColor, logoPaddingStyle = _a.logoPaddingStyle;\n        // just make sure that these params are passed as numbers\n        var size = +this.props.size;\n        var quietZone = +this.props.quietZone;\n        var logoWidth = this.props.logoWidth ? +this.props.logoWidth : 0;\n        var logoHeight = this.props.logoHeight ? +this.props.logoHeight : 0;\n        var logoPadding = this.props.logoPadding ? +this.props.logoPadding : 0;\n        var qrCode = qrGenerator(0, ecLevel);\n        qrCode.addData(QRCode.utf16to8(value));\n        qrCode.make();\n        var canvas = ReactDOM.findDOMNode(this.canvas.current);\n        var ctx = canvas.getContext('2d');\n        var canvasSize = size + (2 * quietZone);\n        var length = qrCode.getModuleCount();\n        var cellSize = size / length;\n        var scale = (window.devicePixelRatio || 1);\n        canvas.height = canvas.width = canvasSize * scale;\n        ctx.scale(scale, scale);\n        ctx.fillStyle = bgColor;\n        ctx.fillRect(0, 0, canvasSize, canvasSize);\n        var offset = quietZone;\n        var positioningZones = [\n            { row: 0, col: 0 },\n            { row: 0, col: length - 7 },\n            { row: length - 7, col: 0 },\n        ];\n        ctx.strokeStyle = fgColor;\n        if (qrStyle === 'dots') {\n            ctx.fillStyle = fgColor;\n            var radius = cellSize / 2;\n            for (var row = 0; row < length; row++) {\n                for (var col = 0; col < length; col++) {\n                    if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones)) {\n                        ctx.beginPath();\n                        ctx.arc(Math.round(col * cellSize) + radius + offset, Math.round(row * cellSize) + radius + offset, (radius / 100) * 75, 0, 2 * Math.PI, false);\n                        ctx.closePath();\n                        ctx.fill();\n                    }\n                }\n            }\n        }\n        else {\n            for (var row = 0; row < length; row++) {\n                for (var col = 0; col < length; col++) {\n                    if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones)) {\n                        ctx.fillStyle = fgColor;\n                        var w = (Math.ceil((col + 1) * cellSize) - Math.floor(col * cellSize));\n                        var h = (Math.ceil((row + 1) * cellSize) - Math.floor(row * cellSize));\n                        ctx.fillRect(Math.round(col * cellSize) + offset, Math.round(row * cellSize) + offset, w, h);\n                    }\n                }\n            }\n        }\n        // Draw positioning patterns\n        for (var i = 0; i < 3; i++) {\n            var _b = positioningZones[i], row = _b.row, col = _b.col;\n            var radii = eyeRadius;\n            var color = void 0;\n            if (Array.isArray(radii)) {\n                radii = radii[i];\n            }\n            if (typeof radii == 'number') {\n                radii = [radii, radii, radii, radii];\n            }\n            if (!eyeColor) { // if not specified, eye color is the same as foreground, \n                color = fgColor;\n            }\n            else {\n                if (Array.isArray(eyeColor)) { // if array, we pass the single color\n                    color = eyeColor[i];\n                }\n                else {\n                    color = eyeColor;\n                }\n            }\n            this.drawPositioningPattern(ctx, cellSize, offset, row, col, color, radii);\n        }\n        if (logoImage) {\n            var image_1 = new Image();\n            if (enableCORS) {\n                image_1.crossOrigin = 'Anonymous';\n            }\n            image_1.onload = function () {\n                ctx.save();\n                var dWidthLogo = logoWidth || size * 0.2;\n                var dHeightLogo = logoHeight || dWidthLogo;\n                var dxLogo = ((size - dWidthLogo) / 2);\n                var dyLogo = ((size - dHeightLogo) / 2);\n                if (removeQrCodeBehindLogo || logoPadding) {\n                    ctx.beginPath();\n                    ctx.strokeStyle = bgColor;\n                    ctx.fillStyle = bgColor;\n                    var dWidthLogoPadding = dWidthLogo + (2 * logoPadding);\n                    var dHeightLogoPadding = dHeightLogo + (2 * logoPadding);\n                    var dxLogoPadding = dxLogo + offset - logoPadding;\n                    var dyLogoPadding = dyLogo + offset - logoPadding;\n                    if (logoPaddingStyle === 'circle') {\n                        var dxCenterLogoPadding = dxLogoPadding + (dWidthLogoPadding / 2);\n                        var dyCenterLogoPadding = dyLogoPadding + (dHeightLogoPadding / 2);\n                        ctx.ellipse(dxCenterLogoPadding, dyCenterLogoPadding, dWidthLogoPadding / 2, dHeightLogoPadding / 2, 0, 0, 2 * Math.PI);\n                        ctx.stroke();\n                        ctx.fill();\n                    }\n                    else {\n                        ctx.fillRect(dxLogoPadding, dyLogoPadding, dWidthLogoPadding, dHeightLogoPadding);\n                    }\n                }\n                ctx.globalAlpha = logoOpacity;\n                ctx.drawImage(image_1, dxLogo + offset, dyLogo + offset, dWidthLogo, dHeightLogo);\n                ctx.restore();\n                if (logoOnLoad) {\n                    logoOnLoad();\n                }\n            };\n            image_1.src = logoImage;\n        }\n    };\n    QRCode.prototype.render = function () {\n        var _a;\n        var qrSize = +this.props.size + (2 * +this.props.quietZone);\n        return React.createElement('canvas', {\n            id: (_a = this.props.id) !== null && _a !== void 0 ? _a : 'react-qrcode-logo',\n            height: qrSize,\n            width: qrSize,\n            style: { height: qrSize + 'px', width: qrSize + 'px' },\n            ref: this.canvas\n        });\n    };\n    QRCode.defaultProps = {\n        value: 'https://reactjs.org/',\n        ecLevel: 'M',\n        enableCORS: false,\n        size: 150,\n        quietZone: 10,\n        bgColor: '#FFFFFF',\n        fgColor: '#000000',\n        logoOpacity: 1,\n        qrStyle: 'squares',\n        eyeRadius: [0, 0, 0],\n        logoPaddingStyle: 'square'\n    };\n    return QRCode;\n}(React.Component));\nexports.QRCode = QRCode;\n"]},"metadata":{},"sourceType":"script"}