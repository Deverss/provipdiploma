{"ast":null,"code":"import _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _get from '@babel/runtime/helpers/get';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { ADAPTER_NAMESPACES, CHAIN_NAMESPACES, ADAPTER_CATEGORY, WALLET_ADAPTERS, ADAPTER_STATUS, ADAPTER_EVENTS, log, WalletInitializationError, WalletLoginError, getChainConfig } from '@web3auth/base';\nimport { BaseEvmAdapter } from '@web3auth/base-evm-adapter';\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar MetamaskAdapter = /*#__PURE__*/function (_BaseEvmAdapter) {\n  _inherits(MetamaskAdapter, _BaseEvmAdapter);\n\n  var _super = _createSuper(MetamaskAdapter);\n\n  function MetamaskAdapter(adapterOptions) {\n    var _this;\n\n    _classCallCheck(this, MetamaskAdapter);\n\n    _this = _super.call(this, adapterOptions);\n\n    _defineProperty(_assertThisInitialized(_this), \"adapterNamespace\", ADAPTER_NAMESPACES.EIP155);\n\n    _defineProperty(_assertThisInitialized(_this), \"currentChainNamespace\", CHAIN_NAMESPACES.EIP155);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", ADAPTER_CATEGORY.EXTERNAL);\n\n    _defineProperty(_assertThisInitialized(_this), \"name\", WALLET_ADAPTERS.METAMASK);\n\n    _defineProperty(_assertThisInitialized(_this), \"status\", ADAPTER_STATUS.NOT_READY);\n\n    _defineProperty(_assertThisInitialized(_this), \"rehydrated\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"metamaskProvider\", null);\n\n    _this.chainConfig = (adapterOptions === null || adapterOptions === void 0 ? void 0 : adapterOptions.chainConfig) || null;\n    _this.sessionTime = (adapterOptions === null || adapterOptions === void 0 ? void 0 : adapterOptions.sessionTime) || 86400;\n    return _this;\n  }\n\n  _createClass(MetamaskAdapter, [{\n    key: \"provider\",\n    get: function get() {\n      if (this.status === ADAPTER_STATUS.CONNECTED && this.metamaskProvider) {\n        return this.metamaskProvider;\n      }\n\n      return null;\n    },\n    set: function set(_) {\n      throw new Error(\"Not implemented\");\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _get(_getPrototypeOf(MetamaskAdapter.prototype), \"checkInitializationRequirements\", this).call(this);\n\n                _context.next = 3;\n                return detectEthereumProvider({\n                  mustBeMetaMask: true\n                });\n\n              case 3:\n                this.metamaskProvider = _context.sent;\n\n                if (this.metamaskProvider) {\n                  _context.next = 6;\n                  break;\n                }\n\n                throw WalletInitializationError.notInstalled(\"Metamask extension is not installed\");\n\n              case 6:\n                this.status = ADAPTER_STATUS.READY;\n                this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.METAMASK);\n                _context.prev = 8;\n                log.debug(\"initializing metamask adapter\");\n\n                if (!options.autoConnect) {\n                  _context.next = 14;\n                  break;\n                }\n\n                this.rehydrated = true;\n                _context.next = 14;\n                return this.connect();\n\n              case 14:\n                _context.next = 19;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](8);\n                this.emit(ADAPTER_EVENTS.ERRORED, _context.t0);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[8, 16]]);\n      }));\n\n      function init(_x) {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"setAdapterSettings\",\n    value: function setAdapterSettings(options) {\n      if (this.status === ADAPTER_STATUS.READY) return;\n\n      if (options !== null && options !== void 0 && options.sessionTime) {\n        this.sessionTime = options.sessionTime;\n      }\n\n      if (options !== null && options !== void 0 && options.clientId) {\n        this.clientId = options.clientId;\n      }\n    }\n  }, {\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var chainId;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _get(_getPrototypeOf(MetamaskAdapter.prototype), \"checkConnectionRequirements\", this).call(this); // set default to mainnet\n\n\n                if (!this.chainConfig) this.chainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, 1);\n                this.status = ADAPTER_STATUS.CONNECTING;\n                this.emit(ADAPTER_EVENTS.CONNECTING, {\n                  adapter: WALLET_ADAPTERS.METAMASK\n                });\n\n                if (this.metamaskProvider) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Not able to connect with metamask\");\n\n              case 6:\n                _context2.prev = 6;\n                _context2.next = 9;\n                return this.metamaskProvider.request({\n                  method: \"eth_requestAccounts\"\n                });\n\n              case 9:\n                chainId = this.metamaskProvider.chainId;\n\n                if (!(chainId !== this.chainConfig.chainId)) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                _context2.next = 13;\n                return this.switchChain(this.chainConfig);\n\n              case 13:\n                this.status = ADAPTER_STATUS.CONNECTED;\n\n                if (this.provider) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Failed to connect with provider\");\n\n              case 16:\n                this.provider.once(\"disconnect\", function () {\n                  // ready to be connected again\n                  _this2.disconnect();\n                });\n                this.emit(ADAPTER_EVENTS.CONNECTED, {\n                  adapter: WALLET_ADAPTERS.METAMASK,\n                  reconnected: this.rehydrated\n                });\n                return _context2.abrupt(\"return\", this.provider);\n\n              case 21:\n                _context2.prev = 21;\n                _context2.t0 = _context2[\"catch\"](6); // ready again to be connected\n\n                this.status = ADAPTER_STATUS.READY;\n                this.rehydrated = false;\n                this.emit(ADAPTER_EVENTS.ERRORED, _context2.t0);\n                throw WalletLoginError.connectionError(\"Failed to login with metamask wallet\");\n\n              case 27:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[6, 21]]);\n      }));\n\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n\n      return connect;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this$provider;\n\n        var options,\n            _args3 = arguments;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {\n                  cleanup: false\n                };\n                _context3.next = 3;\n                return _get(_getPrototypeOf(MetamaskAdapter.prototype), \"disconnect\", this).call(this);\n\n              case 3:\n                (_this$provider = this.provider) === null || _this$provider === void 0 ? void 0 : _this$provider.removeAllListeners();\n\n                if (options.cleanup) {\n                  this.status = ADAPTER_STATUS.NOT_READY;\n                  this.metamaskProvider = null;\n                } else {\n                  // ready to be connected again\n                  this.status = ADAPTER_STATUS.READY;\n                }\n\n                this.rehydrated = false;\n                this.emit(ADAPTER_EVENTS.DISCONNECTED);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n\n      return disconnect;\n    }()\n  }, {\n    key: \"getUserInfo\",\n    value: function () {\n      var _getUserInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(this.status !== ADAPTER_STATUS.CONNECTED)) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n\n              case 2:\n                return _context4.abrupt(\"return\", {});\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getUserInfo() {\n        return _getUserInfo.apply(this, arguments);\n      }\n\n      return getUserInfo;\n    }()\n  }, {\n    key: \"switchChain\",\n    value: function () {\n      var _switchChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(chainConfig) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (this.metamaskProvider) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n\n              case 2:\n                _context5.prev = 2;\n                _context5.next = 5;\n                return this.metamaskProvider.request({\n                  method: \"wallet_switchEthereumChain\",\n                  params: [{\n                    chainId: chainConfig.chainId\n                  }]\n                });\n\n              case 5:\n                _context5.next = 15;\n                break;\n\n              case 7:\n                _context5.prev = 7;\n                _context5.t0 = _context5[\"catch\"](2);\n\n                if (!(_context5.t0.code === 4902)) {\n                  _context5.next = 14;\n                  break;\n                }\n\n                _context5.next = 12;\n                return this.metamaskProvider.request({\n                  method: \"wallet_addEthereumChain\",\n                  params: [{\n                    chainId: chainConfig.chainId,\n                    chainName: chainConfig.displayName,\n                    rpcUrls: [chainConfig.rpcTarget]\n                  }]\n                });\n\n              case 12:\n                _context5.next = 15;\n                break;\n\n              case 14:\n                throw _context5.t0;\n\n              case 15:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[2, 7]]);\n      }));\n\n      function switchChain(_x2) {\n        return _switchChain.apply(this, arguments);\n      }\n\n      return switchChain;\n    }()\n  }]);\n\n  return MetamaskAdapter;\n}(BaseEvmAdapter);\n\nexport { MetamaskAdapter };","map":{"version":3,"sources":["../src/metamaskAdapter.ts"],"names":["MetamaskAdapter","BaseEvmAdapter","ADAPTER_NAMESPACES","EIP155","CHAIN_NAMESPACES","ADAPTER_CATEGORY","EXTERNAL","WALLET_ADAPTERS","METAMASK","ADAPTER_STATUS","NOT_READY","detectEthereumProvider","mustBeMetaMask","WalletInitializationError","ADAPTER_EVENTS","log","options","getChainConfig","adapter","WalletLoginError","method","chainId","reconnected","rehydrated","cleanup","provider","params","chainConfig","chainName","rpcUrls"],"mappings":"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","sourcesContent":["import _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _get from '@babel/runtime/helpers/get';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { ADAPTER_NAMESPACES, CHAIN_NAMESPACES, ADAPTER_CATEGORY, WALLET_ADAPTERS, ADAPTER_STATUS, ADAPTER_EVENTS, log, WalletInitializationError, WalletLoginError, getChainConfig } from '@web3auth/base';\nimport { BaseEvmAdapter } from '@web3auth/base-evm-adapter';\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar MetamaskAdapter = /*#__PURE__*/function (_BaseEvmAdapter) {\n  _inherits(MetamaskAdapter, _BaseEvmAdapter);\n\n  var _super = _createSuper(MetamaskAdapter);\n\n  function MetamaskAdapter(adapterOptions) {\n    var _this;\n\n    _classCallCheck(this, MetamaskAdapter);\n\n    _this = _super.call(this, adapterOptions);\n\n    _defineProperty(_assertThisInitialized(_this), \"adapterNamespace\", ADAPTER_NAMESPACES.EIP155);\n\n    _defineProperty(_assertThisInitialized(_this), \"currentChainNamespace\", CHAIN_NAMESPACES.EIP155);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", ADAPTER_CATEGORY.EXTERNAL);\n\n    _defineProperty(_assertThisInitialized(_this), \"name\", WALLET_ADAPTERS.METAMASK);\n\n    _defineProperty(_assertThisInitialized(_this), \"status\", ADAPTER_STATUS.NOT_READY);\n\n    _defineProperty(_assertThisInitialized(_this), \"rehydrated\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"metamaskProvider\", null);\n\n    _this.chainConfig = (adapterOptions === null || adapterOptions === void 0 ? void 0 : adapterOptions.chainConfig) || null;\n    _this.sessionTime = (adapterOptions === null || adapterOptions === void 0 ? void 0 : adapterOptions.sessionTime) || 86400;\n    return _this;\n  }\n\n  _createClass(MetamaskAdapter, [{\n    key: \"provider\",\n    get: function get() {\n      if (this.status === ADAPTER_STATUS.CONNECTED && this.metamaskProvider) {\n        return this.metamaskProvider;\n      }\n\n      return null;\n    },\n    set: function set(_) {\n      throw new Error(\"Not implemented\");\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _get(_getPrototypeOf(MetamaskAdapter.prototype), \"checkInitializationRequirements\", this).call(this);\n\n                _context.next = 3;\n                return detectEthereumProvider({\n                  mustBeMetaMask: true\n                });\n\n              case 3:\n                this.metamaskProvider = _context.sent;\n\n                if (this.metamaskProvider) {\n                  _context.next = 6;\n                  break;\n                }\n\n                throw WalletInitializationError.notInstalled(\"Metamask extension is not installed\");\n\n              case 6:\n                this.status = ADAPTER_STATUS.READY;\n                this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.METAMASK);\n                _context.prev = 8;\n                log.debug(\"initializing metamask adapter\");\n\n                if (!options.autoConnect) {\n                  _context.next = 14;\n                  break;\n                }\n\n                this.rehydrated = true;\n                _context.next = 14;\n                return this.connect();\n\n              case 14:\n                _context.next = 19;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](8);\n                this.emit(ADAPTER_EVENTS.ERRORED, _context.t0);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[8, 16]]);\n      }));\n\n      function init(_x) {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"setAdapterSettings\",\n    value: function setAdapterSettings(options) {\n      if (this.status === ADAPTER_STATUS.READY) return;\n\n      if (options !== null && options !== void 0 && options.sessionTime) {\n        this.sessionTime = options.sessionTime;\n      }\n\n      if (options !== null && options !== void 0 && options.clientId) {\n        this.clientId = options.clientId;\n      }\n    }\n  }, {\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var chainId;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _get(_getPrototypeOf(MetamaskAdapter.prototype), \"checkConnectionRequirements\", this).call(this); // set default to mainnet\n\n\n                if (!this.chainConfig) this.chainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, 1);\n                this.status = ADAPTER_STATUS.CONNECTING;\n                this.emit(ADAPTER_EVENTS.CONNECTING, {\n                  adapter: WALLET_ADAPTERS.METAMASK\n                });\n\n                if (this.metamaskProvider) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Not able to connect with metamask\");\n\n              case 6:\n                _context2.prev = 6;\n                _context2.next = 9;\n                return this.metamaskProvider.request({\n                  method: \"eth_requestAccounts\"\n                });\n\n              case 9:\n                chainId = this.metamaskProvider.chainId;\n\n                if (!(chainId !== this.chainConfig.chainId)) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                _context2.next = 13;\n                return this.switchChain(this.chainConfig);\n\n              case 13:\n                this.status = ADAPTER_STATUS.CONNECTED;\n\n                if (this.provider) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Failed to connect with provider\");\n\n              case 16:\n                this.provider.once(\"disconnect\", function () {\n                  // ready to be connected again\n                  _this2.disconnect();\n                });\n                this.emit(ADAPTER_EVENTS.CONNECTED, {\n                  adapter: WALLET_ADAPTERS.METAMASK,\n                  reconnected: this.rehydrated\n                });\n                return _context2.abrupt(\"return\", this.provider);\n\n              case 21:\n                _context2.prev = 21;\n                _context2.t0 = _context2[\"catch\"](6);\n                // ready again to be connected\n                this.status = ADAPTER_STATUS.READY;\n                this.rehydrated = false;\n                this.emit(ADAPTER_EVENTS.ERRORED, _context2.t0);\n                throw WalletLoginError.connectionError(\"Failed to login with metamask wallet\");\n\n              case 27:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[6, 21]]);\n      }));\n\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n\n      return connect;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this$provider;\n\n        var options,\n            _args3 = arguments;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {\n                  cleanup: false\n                };\n                _context3.next = 3;\n                return _get(_getPrototypeOf(MetamaskAdapter.prototype), \"disconnect\", this).call(this);\n\n              case 3:\n                (_this$provider = this.provider) === null || _this$provider === void 0 ? void 0 : _this$provider.removeAllListeners();\n\n                if (options.cleanup) {\n                  this.status = ADAPTER_STATUS.NOT_READY;\n                  this.metamaskProvider = null;\n                } else {\n                  // ready to be connected again\n                  this.status = ADAPTER_STATUS.READY;\n                }\n\n                this.rehydrated = false;\n                this.emit(ADAPTER_EVENTS.DISCONNECTED);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n\n      return disconnect;\n    }()\n  }, {\n    key: \"getUserInfo\",\n    value: function () {\n      var _getUserInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(this.status !== ADAPTER_STATUS.CONNECTED)) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n\n              case 2:\n                return _context4.abrupt(\"return\", {});\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getUserInfo() {\n        return _getUserInfo.apply(this, arguments);\n      }\n\n      return getUserInfo;\n    }()\n  }, {\n    key: \"switchChain\",\n    value: function () {\n      var _switchChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(chainConfig) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (this.metamaskProvider) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n\n              case 2:\n                _context5.prev = 2;\n                _context5.next = 5;\n                return this.metamaskProvider.request({\n                  method: \"wallet_switchEthereumChain\",\n                  params: [{\n                    chainId: chainConfig.chainId\n                  }]\n                });\n\n              case 5:\n                _context5.next = 15;\n                break;\n\n              case 7:\n                _context5.prev = 7;\n                _context5.t0 = _context5[\"catch\"](2);\n\n                if (!(_context5.t0.code === 4902)) {\n                  _context5.next = 14;\n                  break;\n                }\n\n                _context5.next = 12;\n                return this.metamaskProvider.request({\n                  method: \"wallet_addEthereumChain\",\n                  params: [{\n                    chainId: chainConfig.chainId,\n                    chainName: chainConfig.displayName,\n                    rpcUrls: [chainConfig.rpcTarget]\n                  }]\n                });\n\n              case 12:\n                _context5.next = 15;\n                break;\n\n              case 14:\n                throw _context5.t0;\n\n              case 15:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[2, 7]]);\n      }));\n\n      function switchChain(_x2) {\n        return _switchChain.apply(this, arguments);\n      }\n\n      return switchChain;\n    }()\n  }]);\n\n  return MetamaskAdapter;\n}(BaseEvmAdapter);\n\nexport { MetamaskAdapter };\n//# sourceMappingURL=metamaskAdapter.esm.js.map\n"]},"metadata":{},"sourceType":"module"}