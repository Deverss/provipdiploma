{"ast":null,"code":"import loglevel from 'loglevel';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { getPublic, sign, encrypt, decrypt } from '@toruslabs/eccrypto';\nimport { get } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, PostMessageStream, setupMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, getRpcPromiseCallback } from '@toruslabs/openlogin-jrpc';\nimport { base64url, keccak, safeatob, randomId, jsonToBase64 } from '@toruslabs/openlogin-utils';\nimport pump from 'pump';\nconst modalDOMElementID = \"openlogin-modal\";\nconst storeKey = \"openlogin_store\";\nconst UX_MODE = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\",\n  SESSIONLESS_REDIRECT: \"sessionless_redirect\"\n};\nconst OPENLOGIN_METHOD = {\n  LOGIN: \"openlogin_login\",\n  LOGOUT: \"openlogin_logout\",\n  CHECK_3PC_SUPPORT: \"openlogin_check_3PC_support\",\n  SET_PID_DATA: \"openlogin_set_pid_data\",\n  GET_DATA: \"openlogin_get_data\"\n};\nconst ALLOWED_INTERACTIONS = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\",\n  JRPC: \"jrpc\"\n};\nconst OPENLOGIN_NETWORK = {\n  MAINNET: \"mainnet\",\n  TESTNET: \"testnet\",\n  CYAN: \"cyan\",\n  DEVELOPMENT: \"development\",\n  SK_TESTNET: \"sk_testnet\",\n  CELESTE: \"celeste\",\n  AQUA: \"aqua\"\n};\nconst SUPPORTED_KEY_CURVES = {\n  SECP256K1: \"secp256k1\",\n  ED25519: \"ed25519\"\n};\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n  SMS_PASSWORDLESS: \"sms_passwordless\",\n  WEBAUTHN: \"webauthn\",\n  JWT: \"jwt\"\n};\nconst MFA_LEVELS = {\n  DEFAULT: \"default\",\n  OPTIONAL: \"optional\",\n  MANDATORY: \"mandatory\",\n  NONE: \"none\"\n};\nloglevel.setLevel(\"error\");\nvar log = loglevel.getLogger(\"openlogin\");\n\nclass MemoryStore {\n  constructor() {\n    _defineProperty(this, \"store\", {});\n  }\n\n  getItem(key) {\n    return this.store[key] || null;\n  }\n\n  setItem(key, value) {\n    this.store[key] = value;\n  }\n\n}\n\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      document.addEventListener(\"DOMContentLoaded\", () => {\n        resolve();\n      });\n    }\n  });\n}\n\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\n\nasync function whitelistUrl(clientId, appKey, origin) {\n  const appKeyBuf = Buffer.from(appKey.padStart(64, \"0\"), \"hex\");\n  if (base64url.encode(getPublic(appKeyBuf)) !== clientId) throw new Error(\"appKey mismatch\");\n  const sig = await sign(appKeyBuf, Buffer.from(keccak(\"keccak256\").update(origin).digest(\"hex\"), \"hex\"));\n  return base64url.encode(sig);\n}\n\nfunction getHashQueryParams() {\n  let replaceUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  const result = {};\n  const url = new URL(window.location.href);\n  url.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const queryResult = url.searchParams.get(\"result\");\n\n  if (queryResult) {\n    try {\n      const queryParams = JSON.parse(safeatob(queryResult));\n      Object.keys(queryParams).forEach(key => {\n        result[key] = queryParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  const hash = url.hash.substring(1);\n  const hashUrl = new URL(`${window.location.origin}/?${hash}`);\n  hashUrl.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const hashResult = hashUrl.searchParams.get(\"result\");\n\n  if (hashResult) {\n    try {\n      const hashParams = JSON.parse(safeatob(hashResult));\n      Object.keys(hashParams).forEach(key => {\n        result[key] = hashParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  if (replaceUrl) {\n    const cleanUrl = window.location.origin + window.location.pathname;\n    window.history.replaceState(null, \"\", cleanUrl);\n  }\n\n  return result;\n}\n\nfunction awaitReq(id, windowRef) {\n  return new Promise((resolve, reject) => {\n    if (!windowRef) {\n      reject(new Error(\"Unable to open window\"));\n      return;\n    }\n\n    let closedByHandler = false;\n    const closedMonitor = setInterval(() => {\n      if (!closedByHandler && windowRef.closed) {\n        clearInterval(closedMonitor);\n        reject(new Error(\"user closed popup\"));\n      }\n    }, 500);\n\n    const handler = ev => {\n      const {\n        pid\n      } = ev.data;\n      if (id !== pid) return;\n      window.removeEventListener(\"message\", handler);\n      closedByHandler = true;\n      clearInterval(closedMonitor);\n      windowRef.close();\n\n      if (ev.data.data && ev.data.data.error) {\n        reject(new Error(ev.data.data.error));\n      } else {\n        resolve(ev.data.data);\n      }\n    };\n\n    window.addEventListener(\"message\", handler);\n  });\n}\n\nfunction constructURL(params) {\n  const {\n    baseURL,\n    query,\n    hash\n  } = params;\n  const url = new URL(baseURL);\n\n  if (query) {\n    Object.keys(query).forEach(key => {\n      url.searchParams.append(key, query[key]);\n    });\n  }\n\n  if (hash) {\n    const h = new URL(constructURL({\n      baseURL,\n      query: hash\n    })).searchParams.toString();\n    url.hash = h;\n  }\n\n  return url.toString();\n}\n\nfunction storageAvailable(type) {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage;\n\n  try {\n    storage = window[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error) {\n    return error && ( // everything except Firefox\n    error.code === 22 || // Firefox\n    error.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    error.name === \"QuotaExceededErro r\" || // Firefox\n    error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storageExists && storageLength !== 0;\n  }\n}\n\nconst sessionStorageAvailable = storageAvailable(\"sessionStorage\");\nconst localStorageAvailable = storageAvailable(\"localStorage\");\n\nfunction preloadIframe(url) {\n  try {\n    if (typeof document === \"undefined\") return;\n    const openloginIframeHtml = document.createElement(\"link\");\n    openloginIframeHtml.href = url;\n    openloginIframeHtml.crossOrigin = \"anonymous\";\n    openloginIframeHtml.type = \"text/html\";\n    openloginIframeHtml.rel = \"prefetch\";\n\n    if (openloginIframeHtml.relList && openloginIframeHtml.relList.supports) {\n      if (openloginIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(openloginIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.error(error);\n  }\n}\n\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nclass OpenLoginStore {\n  // eslint-disable-next-line no-use-before-define\n  constructor(storage, _storeKey) {\n    _defineProperty(this, \"storage\", void 0);\n\n    _defineProperty(this, \"_storeKey\", storeKey);\n\n    this.storage = storage;\n    this._storeKey = _storeKey || storeKey;\n\n    try {\n      if (!storage.getItem(_storeKey || storeKey)) {\n        this.resetStore();\n      }\n    } catch (error) {// Storage is not available\n    }\n  }\n\n  static getInstance(storeNamespace) {\n    let storageKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"local\";\n\n    if (!this.instance) {\n      let storage = new MemoryStore();\n\n      if (storageKey === \"local\" && localStorageAvailable) {\n        storage = localStorage;\n      }\n\n      if (storageKey === \"session\" && sessionStorageAvailable) {\n        storage = sessionStorage;\n      }\n\n      const finalStoreKey = storeNamespace ? `${storeKey}_${storeNamespace}` : storeKey;\n      this.instance = new this(storage, finalStoreKey);\n    }\n\n    return this.instance;\n  }\n\n  toJSON() {\n    return this.storage.getItem(this._storeKey);\n  }\n\n  resetStore() {\n    const currStore = this.getStore();\n    this.storage.setItem(this._storeKey, JSON.stringify({}));\n    return currStore;\n  }\n\n  getStore() {\n    return JSON.parse(this.storage.getItem(this._storeKey));\n  }\n\n  get(key) {\n    const store = JSON.parse(this.storage.getItem(this._storeKey));\n    return store[key];\n  }\n\n  set(key, value) {\n    const store = JSON.parse(this.storage.getItem(this._storeKey));\n    store[key] = value;\n    this.storage.setItem(this._storeKey, JSON.stringify(store));\n  }\n\n}\n\n_defineProperty(OpenLoginStore, \"instance\", void 0);\n\nclass Provider extends SafeEventEmitter {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"iframeElem\", null);\n\n    _defineProperty(this, \"rpcStream\", void 0);\n\n    _defineProperty(this, \"iframeUrl\", void 0);\n\n    _defineProperty(this, \"rpcEngine\", void 0);\n\n    _defineProperty(this, \"initialized\", void 0);\n\n    _defineProperty(this, \"mux\", void 0);\n  }\n\n  init(_ref) {\n    let {\n      iframeElem,\n      iframeUrl\n    } = _ref;\n    this.iframeElem = iframeElem;\n    this.iframeUrl = iframeUrl;\n    this.setupStream();\n    this.initialized = true;\n  }\n\n  setupStream() {\n    if (this.iframeElem === null) throw new Error(\"iframe is null\");\n    this.rpcStream = new PostMessageStream({\n      name: \"embed_rpc\",\n      target: \"iframe_rpc\",\n      targetWindow: this.iframeElem.contentWindow,\n      targetOrigin: new URL(this.iframeUrl).origin\n    });\n    this.mux = setupMultiplex(this.rpcStream);\n    const JRPCConnection = createStreamMiddleware();\n    pump(JRPCConnection.stream, this.mux.createStream(\"jrpc\"), JRPCConnection.stream, error => {\n      log.error(`JRPC connection broken`, error);\n    });\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(JRPCConnection.middleware);\n    this.rpcEngine = rpcEngine;\n  }\n\n  cleanup() {\n    this.iframeElem = null;\n    this.initialized = false;\n  }\n\n  _rpcRequest(payload, callback) {\n    if (!payload.jsonrpc) {\n      payload.jsonrpc = \"2.0\";\n    }\n\n    if (!payload.id) {\n      payload.id = randomId();\n    }\n\n    this.rpcEngine.handle(payload, callback);\n  }\n\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nclass OpenLogin {\n  constructor(options) {\n    var _options$no3PC, _options$_startUrl, _options$_popupUrl, _options$redirectUrl, _options$uxMode, _options$replaceUrlOn, _options$originData, _options$whiteLabel, _options$loginConfig, _options$_storageServ, _options$_sessionName, _options$webauthnTran;\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"state\", void 0);\n\n    _defineProperty(this, \"iframeElem\", void 0);\n\n    this.provider = new Proxy(new Provider(), {\n      deleteProperty: () => true // work around for web3\n\n    });\n\n    if (!options._iframeUrl) {\n      if (options.network === OPENLOGIN_NETWORK.MAINNET) {\n        options._iframeUrl = \"https://app.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.CYAN) {\n        options._iframeUrl = \"https://cyan.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.TESTNET) {\n        options._iframeUrl = \"https://beta.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.SK_TESTNET) {\n        options._iframeUrl = \"https://beta-sk.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.CELESTE) {\n        options._iframeUrl = \"https://celeste.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.AQUA) {\n        options._iframeUrl = \"https://aqua.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.DEVELOPMENT) {\n        options._iframeUrl = \"http://localhost:3000\";\n      }\n    }\n\n    if (!options._iframeUrl) {\n      throw new Error(\"unspecified network and iframeUrl\");\n    }\n\n    preloadIframe(options._iframeUrl);\n    this.initState(_objectSpread(_objectSpread({}, options), {}, {\n      no3PC: (_options$no3PC = options.no3PC) !== null && _options$no3PC !== void 0 ? _options$no3PC : false,\n      _iframeUrl: options._iframeUrl,\n      _startUrl: (_options$_startUrl = options._startUrl) !== null && _options$_startUrl !== void 0 ? _options$_startUrl : `${options._iframeUrl}/start`,\n      _popupUrl: (_options$_popupUrl = options._popupUrl) !== null && _options$_popupUrl !== void 0 ? _options$_popupUrl : `${options._iframeUrl}/popup-window`,\n      redirectUrl: (_options$redirectUrl = options.redirectUrl) !== null && _options$redirectUrl !== void 0 ? _options$redirectUrl : `${window.location.protocol}//${window.location.host}${window.location.pathname}`,\n      uxMode: (_options$uxMode = options.uxMode) !== null && _options$uxMode !== void 0 ? _options$uxMode : UX_MODE.REDIRECT,\n      replaceUrlOnRedirect: (_options$replaceUrlOn = options.replaceUrlOnRedirect) !== null && _options$replaceUrlOn !== void 0 ? _options$replaceUrlOn : true,\n      originData: (_options$originData = options.originData) !== null && _options$originData !== void 0 ? _options$originData : {\n        [window.location.origin]: \"\"\n      },\n      whiteLabel: (_options$whiteLabel = options.whiteLabel) !== null && _options$whiteLabel !== void 0 ? _options$whiteLabel : {},\n      loginConfig: (_options$loginConfig = options.loginConfig) !== null && _options$loginConfig !== void 0 ? _options$loginConfig : {},\n      _storageServerUrl: (_options$_storageServ = options._storageServerUrl) !== null && _options$_storageServ !== void 0 ? _options$_storageServ : \"https://broadcast-server.tor.us\",\n      storageKey: options.storageKey === \"session\" ? \"session\" : \"local\",\n      _sessionNamespace: (_options$_sessionName = options._sessionNamespace) !== null && _options$_sessionName !== void 0 ? _options$_sessionName : \"\",\n      webauthnTransports: (_options$webauthnTran = options.webauthnTransports) !== null && _options$webauthnTran !== void 0 ? _options$webauthnTran : [\"internal\"]\n    }));\n  }\n\n  get privKey() {\n    return this.state.privKey ? this.state.privKey.padStart(64, \"0\") : \"\";\n  }\n\n  get coreKitKey() {\n    return this.state.coreKitKey ? this.state.coreKitKey.padStart(64, \"0\") : \"\";\n  }\n\n  initState(options) {\n    this.state = {\n      uxMode: options.uxMode,\n      network: options.network,\n      store: OpenLoginStore.getInstance(options._sessionNamespace, options.storageKey),\n      iframeUrl: options._iframeUrl,\n      startUrl: options._startUrl,\n      popupUrl: options._popupUrl,\n      clientId: options.clientId,\n      redirectUrl: options.redirectUrl,\n      replaceUrlOnRedirect: options.replaceUrlOnRedirect,\n      originData: options.originData,\n      loginConfig: options.loginConfig,\n      support3PC: !options.no3PC,\n      whiteLabel: options.whiteLabel,\n      storageServerUrl: options._storageServerUrl,\n      sessionNamespace: options._sessionNamespace,\n      webauthnTransports: options.webauthnTransports\n    };\n  }\n\n  async init() {\n    if (this.state.network === OPENLOGIN_NETWORK.TESTNET) {\n      // using console log because it shouldn't be affected by loglevel config\n      // eslint-disable-next-line no-console\n      console.log(\"%c WARNING! You are on testnet. Please set network: 'mainnet' in production\", \"color: #FF0000\");\n    }\n\n    if (this.state.uxMode === UX_MODE.SESSIONLESS_REDIRECT) {\n      await this.updateOriginData(); // in this mode iframe is not used so support3pc must be false\n\n      this.state.support3PC = false;\n    } else {\n      // initialize iframe only when redirect or popup mode\n      await Promise.all([this._initIFrame(this.state.iframeUrl), this.updateOriginData()]);\n      this.provider.init({\n        iframeElem: this.iframeElem,\n        iframeUrl: this.state.iframeUrl\n      });\n    }\n\n    const params = getHashQueryParams(this.state.replaceUrlOnRedirect);\n\n    if (params.sessionId) {\n      this.state.store.set(\"sessionId\", params.sessionId);\n    }\n\n    if (this.state.uxMode === UX_MODE.SESSIONLESS_REDIRECT) {\n      this._syncState(params);\n    } else {\n      this._syncState(await this._getData());\n    }\n\n    if (this.state.support3PC) {\n      const res = await this._check3PCSupport();\n      this.state.support3PC = !!res.support3PC;\n    }\n  }\n\n  async updateOriginData() {\n    const filteredOriginData = JSON.parse(JSON.stringify(this.state.originData));\n    Object.keys(filteredOriginData).forEach(key => {\n      if (filteredOriginData[key] === \"\") delete filteredOriginData[key];\n    });\n    const [whitelist, whiteLabel] = await Promise.all([this.getWhitelist(), this.getWhiteLabel()]);\n\n    this._syncState({\n      originData: _objectSpread(_objectSpread({}, whitelist), filteredOriginData),\n      whiteLabel: _objectSpread(_objectSpread({}, whiteLabel), this.state.whiteLabel)\n    });\n  }\n\n  async getWhitelist() {\n    try {\n      const {\n        clientId\n      } = this.state;\n\n      if (!clientId) {\n        throw new Error(\"unspecified clientId\");\n      }\n\n      const url = new URL(\"https://api.developer.tor.us/whitelist\");\n      url.searchParams.append(\"project_id\", this.state.clientId);\n      url.searchParams.append(\"network\", this.state.network);\n      const res = await get(url.href);\n      return res.signed_urls;\n    } catch (_) {\n      // fail silently\n      return {};\n    }\n  }\n\n  async getWhiteLabel() {\n    try {\n      const {\n        clientId\n      } = this.state;\n\n      if (!clientId) {\n        throw new Error(\"unspecified clientId\");\n      }\n\n      const url = new URL(\"https://api.developer.tor.us/whitelabel\");\n      url.searchParams.append(\"project_id\", this.state.clientId);\n      const res = await get(url.href);\n      return res.whiteLabel;\n    } catch (_) {\n      // fail silently\n      return {};\n    }\n  }\n\n  async login(params) {\n    if (!params || !params.loginProvider) {\n      throw new Error(`Please pass loginProvider in params`);\n    }\n\n    return this._selectedLogin(params);\n  }\n\n  async _selectedLogin(params) {\n    const defaultParams = {\n      redirectUrl: this.state.redirectUrl\n    };\n\n    const loginParams = _objectSpread(_objectSpread({\n      loginProvider: params.loginProvider\n    }, defaultParams), params);\n\n    const res = await this.request({\n      method: OPENLOGIN_METHOD.LOGIN,\n      allowedInteractions: [UX_MODE.REDIRECT, UX_MODE.POPUP],\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      params: [loginParams]\n    });\n    this.state.privKey = res.privKey;\n\n    if (res.store) {\n      this._syncState(res);\n    } else if (this.state.privKey && this.state.support3PC) {\n      this._syncState(await this._getData());\n    }\n\n    return {\n      privKey: this.privKey\n    };\n  }\n\n  async logout() {\n    let logoutParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const params = {}; // defaults\n\n    params.redirectUrl = this.state.redirectUrl;\n    params._clientId = this.state.clientId;\n    params.sessionId = this.state.store.get(\"sessionId\");\n\n    if (logoutParams.clientId) {\n      params._clientId = logoutParams.clientId;\n    }\n\n    if (logoutParams.redirectUrl !== undefined) {\n      params.redirectUrl = logoutParams.redirectUrl;\n    }\n\n    const allowedInteractions = this.state.uxMode === UX_MODE.SESSIONLESS_REDIRECT ? [ALLOWED_INTERACTIONS.REDIRECT] : [ALLOWED_INTERACTIONS.JRPC];\n    const res = await this.request({\n      method: OPENLOGIN_METHOD.LOGOUT,\n      params: [params],\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      allowedInteractions\n    });\n\n    this._syncState({\n      privKey: \"\",\n      coreKitKey: \"\",\n      walletKey: \"\",\n      oAuthPrivateKey: \"\",\n      tKey: \"\",\n      store: {\n        name: \"\",\n        profileImage: \"\",\n        dappShare: \"\",\n        idToken: \"\",\n        oAuthIdToken: \"\",\n        oAuthAccessToken: \"\",\n        sessionId: \"\",\n        sessionNamespace: \"\",\n        appState: \"\",\n        email: \"\"\n      }\n    });\n\n    return res;\n  }\n\n  async request(args) {\n    var _params$0$redirectUrl;\n\n    const pid = randomId();\n    let {\n      params\n    } = args; // Note: _origin is added later in postMessageStream for jrpc requests\n    // do not add it here since its used for checking postMessage constraints\n\n    const session = {};\n    if (params.length !== 1) throw new Error(\"request params array should have only one element\");\n    const {\n      startUrl,\n      popupUrl,\n      method,\n      allowedInteractions\n    } = args;\n    if (allowedInteractions.length === 0) throw new Error(\"no allowed interactions\");\n\n    if (this.state.clientId) {\n      session._clientId = this.state.clientId;\n    }\n\n    if (this.state.sessionNamespace) {\n      session._sessionNamespace = this.state.sessionNamespace;\n    }\n\n    if (this.privKey) {\n      const userData = {\n        clientId: session._clientId,\n        timestamp: Date.now().toString()\n      };\n      const sig = await sign(Buffer.from(this.privKey, \"hex\"), Buffer.from(keccak(\"keccak256\").update(JSON.stringify(userData)).digest(\"hex\"), \"hex\"));\n      session._user = getPublic(Buffer.from(this.privKey, \"hex\")).toString(\"hex\");\n      session._userSig = base64url.encode(sig);\n      session._userData = userData;\n    }\n\n    session._originData = this.state.originData;\n    session._whiteLabelData = this.state.whiteLabel;\n    session._loginConfig = this.state.loginConfig;\n    session._sessionId = this.state.store.get(\"sessionId\");\n    session._webauthnTransports = this.state.webauthnTransports;\n\n    if (!session._sessionId) {\n      const sessionId = randomId();\n      session._sessionId = sessionId;\n      this.state.store.set(\"sessionId\", sessionId);\n    } // add in session data (allow overrides)\n\n\n    params = [_objectSpread(_objectSpread({}, session), params[0])]; // use JRPC where possible\n\n    if (allowedInteractions.includes(ALLOWED_INTERACTIONS.JRPC)) {\n      return this._jrpcRequest({\n        method,\n        params\n      });\n    } // set origin\n\n\n    params[0]._origin = new URL((_params$0$redirectUrl = params[0].redirectUrl) !== null && _params$0$redirectUrl !== void 0 ? _params$0$redirectUrl : this.state.redirectUrl).origin; // preset params\n\n    if (this.state.support3PC) {\n      // set params first if 3PC supported\n      await this._setPIDData(pid, params); // eslint-disable-next-line require-atomic-updates\n\n      params = [{}];\n    }\n\n    if (!startUrl || !popupUrl) {\n      throw new Error(\"no url for redirect / popup flow\");\n    } // method and pid are always in URL hash params\n    // convert params from JSON to base64\n\n\n    if (this.state.uxMode === UX_MODE.REDIRECT || this.state.uxMode === UX_MODE.SESSIONLESS_REDIRECT) {\n      // if redirects preferred, check for redirect flows first, then check for popup flow\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n        // give time for synchronous methods to complete before redirect\n        setTimeout(() => {\n          window.location.href = constructURL({\n            baseURL: startUrl,\n            hash: {\n              b64Params: jsonToBase64(params[0]),\n              _pid: pid,\n              _method: method\n            }\n          });\n        }, 50);\n        return {};\n      }\n\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n        const u = new URL(constructURL({\n          baseURL: popupUrl,\n          hash: {\n            b64Params: jsonToBase64(params[0]),\n            _pid: pid,\n            _method: method\n          }\n        }));\n        const windowRef = window.open(u.toString(), \"_blank\", getPopupFeatures());\n        return awaitReq(pid, windowRef);\n      }\n    } else {\n      // if popups preferred, check for popup flows first, then check for redirect flow\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n        const u = new URL(constructURL({\n          baseURL: popupUrl,\n          hash: {\n            b64Params: jsonToBase64(params[0]),\n            _pid: pid,\n            _method: method\n          }\n        }));\n        const windowRef = window.open(u.toString(), \"_blank\", getPopupFeatures());\n        return awaitReq(pid, windowRef);\n      }\n\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n        // give time for synchronous methods to complete before redirect\n        setTimeout(() => {\n          window.location.href = constructURL({\n            baseURL: startUrl,\n            hash: {\n              b64Params: jsonToBase64(params[0]),\n              _pid: pid,\n              _method: method\n            }\n          });\n        }, 50);\n        return null;\n      }\n    }\n\n    throw new Error(\"no matching allowed interactions\");\n  }\n\n  async _initIFrame(src) {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(modalDOMElementID);\n\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      loglevel.info(\"already initialized, removing previous modal iframe\");\n    }\n\n    this.iframeElem = htmlToElement(`<iframe\n        id=${modalDOMElementID}\n        class=\"torusIframe\"\n        src=\"${src}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%;\n        height: 100%; border: none; border-radius: 0; z-index: 99999\"\n      ></iframe>`);\n    document.body.appendChild(this.iframeElem);\n    return new Promise(resolve => {\n      this.iframeElem.onload = () => {\n        resolve();\n      };\n    });\n  }\n\n  async _jrpcRequest(args) {\n    // await this.initialized;\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw new Error(\"invalid request args\");\n    }\n\n    const {\n      method,\n      params\n    } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw new Error(\"invalid request method\");\n    }\n\n    if (params === undefined || !Array.isArray(params)) {\n      throw new Error(\"invalid request params\");\n    }\n\n    if (params.length === 0) {\n      params.push({});\n    }\n\n    return new Promise((resolve, reject) => {\n      this.provider._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  async _check3PCSupport() {\n    return this._jrpcRequest({\n      method: OPENLOGIN_METHOD.CHECK_3PC_SUPPORT,\n      params: [{\n        _originData: this.state.originData\n      }]\n    });\n  }\n\n  async _setPIDData(pid, data) {\n    await this.request({\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n      method: OPENLOGIN_METHOD.SET_PID_DATA,\n      params: [{\n        pid,\n        data: data[0]\n      }]\n    });\n  }\n\n  async _getData() {\n    if (this.state.uxMode === UX_MODE.SESSIONLESS_REDIRECT) return {};\n    return this.request({\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n      method: OPENLOGIN_METHOD.GET_DATA,\n      params: [{}]\n    });\n  }\n\n  _syncState(newState) {\n    if (newState.store) {\n      if (typeof newState.store !== \"object\") {\n        throw new Error(\"expected store to be an object\");\n      }\n\n      Object.keys(newState.store).forEach(key => {\n        this.state.store.set(key, newState.store[key]);\n      });\n    }\n\n    const {\n      store\n    } = this.state;\n    this.state = _objectSpread(_objectSpread(_objectSpread({}, this.state), newState), {}, {\n      store\n    });\n  }\n\n  async encrypt(message, privateKey) {\n    let privKey = privateKey;\n\n    if (!privKey) {\n      privKey = this.privKey;\n    } // validations\n\n\n    if (!/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n      if (privKey === \"\" || privKey === undefined) {\n        throw new Error(\"private key cannot be empty\");\n      } else {\n        throw new Error(\"invalid private key in encrypt\");\n      }\n    }\n\n    return encrypt(getPublic(Buffer.from(privKey, \"hex\")), message);\n  }\n\n  async decrypt(ciphertext, privateKey) {\n    let privKey = privateKey;\n\n    if (!privKey) {\n      privKey = this.privKey;\n    } // validations\n\n\n    if (!/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n      if (privKey === \"\" || privKey === undefined) {\n        throw new Error(\"private key cannot be empty\");\n      } else {\n        throw new Error(\"invalid private key in decrypt\");\n      }\n    }\n\n    return decrypt(Buffer.from(privKey, \"hex\"), ciphertext);\n  }\n\n  async getUserInfo() {\n    if (this.privKey) {\n      const storeData = this.state.store.getStore();\n      const userInfo = {\n        email: storeData.email || \"\",\n        name: storeData.name || \"\",\n        profileImage: storeData.profileImage || \"\",\n        aggregateVerifier: storeData.aggregateVerifier || \"\",\n        verifier: storeData.verifier || \"\",\n        verifierId: storeData.verifierId || \"\",\n        typeOfLogin: storeData.typeOfLogin || \"\",\n        dappShare: storeData.dappShare || \"\",\n        idToken: storeData.idToken || \"\",\n        oAuthIdToken: storeData.oAuthIdToken || \"\",\n        oAuthAccessToken: storeData.oAuthAccessToken || \"\"\n      };\n      return userInfo;\n    }\n\n    throw new Error(\"user should be logged in to fetch userInfo\");\n  }\n\n  async getEncodedLoginUrl(loginParams) {\n    const {\n      redirectUrl\n    } = loginParams;\n    const {\n      clientId\n    } = this.state;\n\n    if (!this.state.originData[origin]) {\n      await this.updateOriginData();\n    }\n\n    const dataObject = _objectSpread({\n      _clientId: clientId,\n      _origin: new URL(redirectUrl).origin,\n      _originData: this.state.originData,\n      redirectUrl\n    }, loginParams);\n\n    const b64Params = jsonToBase64(dataObject);\n    const hashParams = {\n      b64Params,\n      _method: \"openlogin_login\"\n    };\n    return constructURL({\n      baseURL: `${this.state.iframeUrl}/start`,\n      hash: hashParams\n    });\n  }\n\n  async _cleanup() {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(modalDOMElementID);\n\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      this.iframeElem = null;\n    }\n\n    this.provider.cleanup();\n  }\n\n}\n\nexport { ALLOWED_INTERACTIONS, LOGIN_PROVIDER, MFA_LEVELS, OPENLOGIN_METHOD, OPENLOGIN_NETWORK, OpenLoginStore, Provider, SUPPORTED_KEY_CURVES, UX_MODE, awaitReq, constructURL, OpenLogin as default, documentReady, getHashQueryParams, getPopupFeatures, htmlToElement, localStorageAvailable, log as loglevel, modalDOMElementID, preloadIframe, sessionStorageAvailable, storageAvailable, storeKey, whitelistUrl };","map":{"version":3,"sources":["../src/constants.ts","../src/loglevel.ts","../src/MemoryStore.ts","../src/utils.ts","../src/OpenLoginStore.ts","../src/Provider.ts","../src/OpenLogin.ts"],"names":["modalDOMElementID","storeKey","UX_MODE","POPUP","REDIRECT","SESSIONLESS_REDIRECT","OPENLOGIN_METHOD","LOGIN","LOGOUT","CHECK_3PC_SUPPORT","SET_PID_DATA","GET_DATA","ALLOWED_INTERACTIONS","JRPC","OPENLOGIN_NETWORK","MAINNET","TESTNET","CYAN","DEVELOPMENT","SK_TESTNET","CELESTE","AQUA","SUPPORTED_KEY_CURVES","SECP256K1","ED25519","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","SMS_PASSWORDLESS","WEBAUTHN","JWT","MFA_LEVELS","DEFAULT","OPTIONAL","MANDATORY","NONE","loglevel","setLevel","getLogger","MemoryStore","constructor","getItem","key","store","setItem","value","documentReady","Promise","resolve","document","readyState","addEventListener","htmlToElement","html","template","window","createElement","trimmedHtml","trim","innerHTML","content","firstChild","whitelistUrl","clientId","appKey","origin","appKeyBuf","Buffer","from","padStart","base64url","encode","getPublic","Error","sig","sign","keccak","update","digest","replaceUrl","result","url","URL","location","href","searchParams","forEach","queryResult","get","queryParams","JSON","parse","safeatob","Object","keys","error","log","hash","substring","hashUrl","hashResult","hashParams","cleanUrl","pathname","history","replaceState","id","windowRef","reject","closedByHandler","closedMonitor","setInterval","closed","clearInterval","handler","ev","pid","data","removeEventListener","close","constructURL","params","baseURL","query","append","h","toString","storageAvailable","type","storageExists","storageLength","storage","length","x","removeItem","code","name","sessionStorageAvailable","localStorageAvailable","preloadIframe","openloginIframeHtml","crossOrigin","rel","relList","supports","head","appendChild","getPopupFeatures","dualScreenLeft","screenLeft","undefined","screenX","dualScreenTop","screenTop","screenY","w","width","innerWidth","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","left","Math","abs","top","features","OpenLoginStore","_storeKey","_defineProperty","resetStore","getInstance","storeNamespace","storageKey","instance","localStorage","sessionStorage","finalStoreKey","toJSON","currStore","getStore","stringify","set","SafeEventEmitter","init","iframeElem","iframeUrl","setupStream","initialized","rpcStream","PostMessageStream","target","targetWindow","contentWindow","targetOrigin","mux","setupMultiplex","JRPCConnection","createStreamMiddleware","pump","stream","createStream","rpcEngine","JRPCEngine","push","createIdRemapMiddleware","middleware","cleanup","_rpcRequest","payload","callback","jsonrpc","randomId","handle","OpenLogin","options","provider","Proxy","Provider","deleteProperty","_iframeUrl","network","initState","no3PC","_startUrl","_popupUrl","redirectUrl","protocol","host","uxMode","replaceUrlOnRedirect","originData","whiteLabel","loginConfig","_storageServerUrl","_sessionNamespace","webauthnTransports","privKey","state","coreKitKey","startUrl","popupUrl","support3PC","storageServerUrl","sessionNamespace","console","updateOriginData","all","_initIFrame","getHashQueryParams","sessionId","_syncState","_getData","res","_check3PCSupport","filteredOriginData","whitelist","getWhitelist","getWhiteLabel","signed_urls","_","login","loginProvider","_selectedLogin","defaultParams","loginParams","request","method","allowedInteractions","logout","logoutParams","_clientId","walletKey","oAuthPrivateKey","tKey","profileImage","dappShare","idToken","oAuthIdToken","oAuthAccessToken","appState","email","args","session","userData","timestamp","Date","now","_user","_userSig","_userData","_originData","_whiteLabelData","_loginConfig","_sessionId","_webauthnTransports","includes","_jrpcRequest","_origin","_setPIDData","setTimeout","b64Params","jsonToBase64","_pid","_method","u","open","awaitReq","src","documentIFrameElem","getElementById","remove","info","body","onload","Array","isArray","getRpcPromiseCallback","newState","encrypt","message","privateKey","exec","decrypt","ciphertext","getUserInfo","storeData","userInfo","aggregateVerifier","verifier","verifierId","typeOfLogin","getEncodedLoginUrl","dataObject","_cleanup"],"mappings":"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","sourcesContent":["import loglevel from 'loglevel';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { getPublic, sign, encrypt, decrypt } from '@toruslabs/eccrypto';\nimport { get } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, PostMessageStream, setupMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, getRpcPromiseCallback } from '@toruslabs/openlogin-jrpc';\nimport { base64url, keccak, safeatob, randomId, jsonToBase64 } from '@toruslabs/openlogin-utils';\nimport pump from 'pump';\n\nconst modalDOMElementID = \"openlogin-modal\";\nconst storeKey = \"openlogin_store\";\nconst UX_MODE = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\",\n  SESSIONLESS_REDIRECT: \"sessionless_redirect\"\n};\nconst OPENLOGIN_METHOD = {\n  LOGIN: \"openlogin_login\",\n  LOGOUT: \"openlogin_logout\",\n  CHECK_3PC_SUPPORT: \"openlogin_check_3PC_support\",\n  SET_PID_DATA: \"openlogin_set_pid_data\",\n  GET_DATA: \"openlogin_get_data\"\n};\nconst ALLOWED_INTERACTIONS = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\",\n  JRPC: \"jrpc\"\n};\nconst OPENLOGIN_NETWORK = {\n  MAINNET: \"mainnet\",\n  TESTNET: \"testnet\",\n  CYAN: \"cyan\",\n  DEVELOPMENT: \"development\",\n  SK_TESTNET: \"sk_testnet\",\n  CELESTE: \"celeste\",\n  AQUA: \"aqua\"\n};\nconst SUPPORTED_KEY_CURVES = {\n  SECP256K1: \"secp256k1\",\n  ED25519: \"ed25519\"\n};\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n  SMS_PASSWORDLESS: \"sms_passwordless\",\n  WEBAUTHN: \"webauthn\",\n  JWT: \"jwt\"\n};\nconst MFA_LEVELS = {\n  DEFAULT: \"default\",\n  OPTIONAL: \"optional\",\n  MANDATORY: \"mandatory\",\n  NONE: \"none\"\n};\n\nloglevel.setLevel(\"error\");\nvar log = loglevel.getLogger(\"openlogin\");\n\nclass MemoryStore {\n  constructor() {\n    _defineProperty(this, \"store\", {});\n  }\n  getItem(key) {\n    return this.store[key] || null;\n  }\n  setItem(key, value) {\n    this.store[key] = value;\n  }\n}\n\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      document.addEventListener(\"DOMContentLoaded\", () => {\n        resolve();\n      });\n    }\n  });\n}\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\nasync function whitelistUrl(clientId, appKey, origin) {\n  const appKeyBuf = Buffer.from(appKey.padStart(64, \"0\"), \"hex\");\n  if (base64url.encode(getPublic(appKeyBuf)) !== clientId) throw new Error(\"appKey mismatch\");\n  const sig = await sign(appKeyBuf, Buffer.from(keccak(\"keccak256\").update(origin).digest(\"hex\"), \"hex\"));\n  return base64url.encode(sig);\n}\nfunction getHashQueryParams() {\n  let replaceUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  const result = {};\n  const url = new URL(window.location.href);\n  url.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const queryResult = url.searchParams.get(\"result\");\n  if (queryResult) {\n    try {\n      const queryParams = JSON.parse(safeatob(queryResult));\n      Object.keys(queryParams).forEach(key => {\n        result[key] = queryParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n  const hash = url.hash.substring(1);\n  const hashUrl = new URL(`${window.location.origin}/?${hash}`);\n  hashUrl.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const hashResult = hashUrl.searchParams.get(\"result\");\n  if (hashResult) {\n    try {\n      const hashParams = JSON.parse(safeatob(hashResult));\n      Object.keys(hashParams).forEach(key => {\n        result[key] = hashParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n  if (replaceUrl) {\n    const cleanUrl = window.location.origin + window.location.pathname;\n    window.history.replaceState(null, \"\", cleanUrl);\n  }\n  return result;\n}\nfunction awaitReq(id, windowRef) {\n  return new Promise((resolve, reject) => {\n    if (!windowRef) {\n      reject(new Error(\"Unable to open window\"));\n      return;\n    }\n    let closedByHandler = false;\n    const closedMonitor = setInterval(() => {\n      if (!closedByHandler && windowRef.closed) {\n        clearInterval(closedMonitor);\n        reject(new Error(\"user closed popup\"));\n      }\n    }, 500);\n    const handler = ev => {\n      const {\n        pid\n      } = ev.data;\n      if (id !== pid) return;\n      window.removeEventListener(\"message\", handler);\n      closedByHandler = true;\n      clearInterval(closedMonitor);\n      windowRef.close();\n      if (ev.data.data && ev.data.data.error) {\n        reject(new Error(ev.data.data.error));\n      } else {\n        resolve(ev.data.data);\n      }\n    };\n    window.addEventListener(\"message\", handler);\n  });\n}\nfunction constructURL(params) {\n  const {\n    baseURL,\n    query,\n    hash\n  } = params;\n  const url = new URL(baseURL);\n  if (query) {\n    Object.keys(query).forEach(key => {\n      url.searchParams.append(key, query[key]);\n    });\n  }\n  if (hash) {\n    const h = new URL(constructURL({\n      baseURL,\n      query: hash\n    })).searchParams.toString();\n    url.hash = h;\n  }\n  return url.toString();\n}\nfunction storageAvailable(type) {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage;\n  try {\n    storage = window[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error) {\n    return error && (\n    // everything except Firefox\n    error.code === 22 ||\n    // Firefox\n    error.code === 1014 ||\n    // test name field too, because code might not be present\n    // everything except Firefox\n    error.name === \"QuotaExceededErro r\" ||\n    // Firefox\n    error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n    // acknowledge QuotaExceededError only if there's something already stored\n    storageExists && storageLength !== 0;\n  }\n}\nconst sessionStorageAvailable = storageAvailable(\"sessionStorage\");\nconst localStorageAvailable = storageAvailable(\"localStorage\");\nfunction preloadIframe(url) {\n  try {\n    if (typeof document === \"undefined\") return;\n    const openloginIframeHtml = document.createElement(\"link\");\n    openloginIframeHtml.href = url;\n    openloginIframeHtml.crossOrigin = \"anonymous\";\n    openloginIframeHtml.type = \"text/html\";\n    openloginIframeHtml.rel = \"prefetch\";\n    if (openloginIframeHtml.relList && openloginIframeHtml.relList.supports) {\n      if (openloginIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(openloginIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.error(error);\n  }\n}\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nclass OpenLoginStore {\n  // eslint-disable-next-line no-use-before-define\n\n  constructor(storage, _storeKey) {\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"_storeKey\", storeKey);\n    this.storage = storage;\n    this._storeKey = _storeKey || storeKey;\n    try {\n      if (!storage.getItem(_storeKey || storeKey)) {\n        this.resetStore();\n      }\n    } catch (error) {\n      // Storage is not available\n    }\n  }\n  static getInstance(storeNamespace) {\n    let storageKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"local\";\n    if (!this.instance) {\n      let storage = new MemoryStore();\n      if (storageKey === \"local\" && localStorageAvailable) {\n        storage = localStorage;\n      }\n      if (storageKey === \"session\" && sessionStorageAvailable) {\n        storage = sessionStorage;\n      }\n      const finalStoreKey = storeNamespace ? `${storeKey}_${storeNamespace}` : storeKey;\n      this.instance = new this(storage, finalStoreKey);\n    }\n    return this.instance;\n  }\n  toJSON() {\n    return this.storage.getItem(this._storeKey);\n  }\n  resetStore() {\n    const currStore = this.getStore();\n    this.storage.setItem(this._storeKey, JSON.stringify({}));\n    return currStore;\n  }\n  getStore() {\n    return JSON.parse(this.storage.getItem(this._storeKey));\n  }\n  get(key) {\n    const store = JSON.parse(this.storage.getItem(this._storeKey));\n    return store[key];\n  }\n  set(key, value) {\n    const store = JSON.parse(this.storage.getItem(this._storeKey));\n    store[key] = value;\n    this.storage.setItem(this._storeKey, JSON.stringify(store));\n  }\n}\n_defineProperty(OpenLoginStore, \"instance\", void 0);\n\nclass Provider extends SafeEventEmitter {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"iframeElem\", null);\n    _defineProperty(this, \"rpcStream\", void 0);\n    _defineProperty(this, \"iframeUrl\", void 0);\n    _defineProperty(this, \"rpcEngine\", void 0);\n    _defineProperty(this, \"initialized\", void 0);\n    _defineProperty(this, \"mux\", void 0);\n  }\n  init(_ref) {\n    let {\n      iframeElem,\n      iframeUrl\n    } = _ref;\n    this.iframeElem = iframeElem;\n    this.iframeUrl = iframeUrl;\n    this.setupStream();\n    this.initialized = true;\n  }\n  setupStream() {\n    if (this.iframeElem === null) throw new Error(\"iframe is null\");\n    this.rpcStream = new PostMessageStream({\n      name: \"embed_rpc\",\n      target: \"iframe_rpc\",\n      targetWindow: this.iframeElem.contentWindow,\n      targetOrigin: new URL(this.iframeUrl).origin\n    });\n    this.mux = setupMultiplex(this.rpcStream);\n    const JRPCConnection = createStreamMiddleware();\n    pump(JRPCConnection.stream, this.mux.createStream(\"jrpc\"), JRPCConnection.stream, error => {\n      log.error(`JRPC connection broken`, error);\n    });\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(JRPCConnection.middleware);\n    this.rpcEngine = rpcEngine;\n  }\n  cleanup() {\n    this.iframeElem = null;\n    this.initialized = false;\n  }\n  _rpcRequest(payload, callback) {\n    if (!payload.jsonrpc) {\n      payload.jsonrpc = \"2.0\";\n    }\n    if (!payload.id) {\n      payload.id = randomId();\n    }\n    this.rpcEngine.handle(payload, callback);\n  }\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass OpenLogin {\n  constructor(options) {\n    var _options$no3PC, _options$_startUrl, _options$_popupUrl, _options$redirectUrl, _options$uxMode, _options$replaceUrlOn, _options$originData, _options$whiteLabel, _options$loginConfig, _options$_storageServ, _options$_sessionName, _options$webauthnTran;\n    _defineProperty(this, \"provider\", void 0);\n    _defineProperty(this, \"state\", void 0);\n    _defineProperty(this, \"iframeElem\", void 0);\n    this.provider = new Proxy(new Provider(), {\n      deleteProperty: () => true // work around for web3\n    });\n\n    if (!options._iframeUrl) {\n      if (options.network === OPENLOGIN_NETWORK.MAINNET) {\n        options._iframeUrl = \"https://app.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.CYAN) {\n        options._iframeUrl = \"https://cyan.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.TESTNET) {\n        options._iframeUrl = \"https://beta.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.SK_TESTNET) {\n        options._iframeUrl = \"https://beta-sk.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.CELESTE) {\n        options._iframeUrl = \"https://celeste.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.AQUA) {\n        options._iframeUrl = \"https://aqua.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.DEVELOPMENT) {\n        options._iframeUrl = \"http://localhost:3000\";\n      }\n    }\n    if (!options._iframeUrl) {\n      throw new Error(\"unspecified network and iframeUrl\");\n    }\n    preloadIframe(options._iframeUrl);\n    this.initState(_objectSpread(_objectSpread({}, options), {}, {\n      no3PC: (_options$no3PC = options.no3PC) !== null && _options$no3PC !== void 0 ? _options$no3PC : false,\n      _iframeUrl: options._iframeUrl,\n      _startUrl: (_options$_startUrl = options._startUrl) !== null && _options$_startUrl !== void 0 ? _options$_startUrl : `${options._iframeUrl}/start`,\n      _popupUrl: (_options$_popupUrl = options._popupUrl) !== null && _options$_popupUrl !== void 0 ? _options$_popupUrl : `${options._iframeUrl}/popup-window`,\n      redirectUrl: (_options$redirectUrl = options.redirectUrl) !== null && _options$redirectUrl !== void 0 ? _options$redirectUrl : `${window.location.protocol}//${window.location.host}${window.location.pathname}`,\n      uxMode: (_options$uxMode = options.uxMode) !== null && _options$uxMode !== void 0 ? _options$uxMode : UX_MODE.REDIRECT,\n      replaceUrlOnRedirect: (_options$replaceUrlOn = options.replaceUrlOnRedirect) !== null && _options$replaceUrlOn !== void 0 ? _options$replaceUrlOn : true,\n      originData: (_options$originData = options.originData) !== null && _options$originData !== void 0 ? _options$originData : {\n        [window.location.origin]: \"\"\n      },\n      whiteLabel: (_options$whiteLabel = options.whiteLabel) !== null && _options$whiteLabel !== void 0 ? _options$whiteLabel : {},\n      loginConfig: (_options$loginConfig = options.loginConfig) !== null && _options$loginConfig !== void 0 ? _options$loginConfig : {},\n      _storageServerUrl: (_options$_storageServ = options._storageServerUrl) !== null && _options$_storageServ !== void 0 ? _options$_storageServ : \"https://broadcast-server.tor.us\",\n      storageKey: options.storageKey === \"session\" ? \"session\" : \"local\",\n      _sessionNamespace: (_options$_sessionName = options._sessionNamespace) !== null && _options$_sessionName !== void 0 ? _options$_sessionName : \"\",\n      webauthnTransports: (_options$webauthnTran = options.webauthnTransports) !== null && _options$webauthnTran !== void 0 ? _options$webauthnTran : [\"internal\"]\n    }));\n  }\n  get privKey() {\n    return this.state.privKey ? this.state.privKey.padStart(64, \"0\") : \"\";\n  }\n  get coreKitKey() {\n    return this.state.coreKitKey ? this.state.coreKitKey.padStart(64, \"0\") : \"\";\n  }\n  initState(options) {\n    this.state = {\n      uxMode: options.uxMode,\n      network: options.network,\n      store: OpenLoginStore.getInstance(options._sessionNamespace, options.storageKey),\n      iframeUrl: options._iframeUrl,\n      startUrl: options._startUrl,\n      popupUrl: options._popupUrl,\n      clientId: options.clientId,\n      redirectUrl: options.redirectUrl,\n      replaceUrlOnRedirect: options.replaceUrlOnRedirect,\n      originData: options.originData,\n      loginConfig: options.loginConfig,\n      support3PC: !options.no3PC,\n      whiteLabel: options.whiteLabel,\n      storageServerUrl: options._storageServerUrl,\n      sessionNamespace: options._sessionNamespace,\n      webauthnTransports: options.webauthnTransports\n    };\n  }\n  async init() {\n    if (this.state.network === OPENLOGIN_NETWORK.TESTNET) {\n      // using console log because it shouldn't be affected by loglevel config\n      // eslint-disable-next-line no-console\n      console.log(\"%c WARNING! You are on testnet. Please set network: 'mainnet' in production\", \"color: #FF0000\");\n    }\n    if (this.state.uxMode === UX_MODE.SESSIONLESS_REDIRECT) {\n      await this.updateOriginData();\n      // in this mode iframe is not used so support3pc must be false\n      this.state.support3PC = false;\n    } else {\n      // initialize iframe only when redirect or popup mode\n      await Promise.all([this._initIFrame(this.state.iframeUrl), this.updateOriginData()]);\n      this.provider.init({\n        iframeElem: this.iframeElem,\n        iframeUrl: this.state.iframeUrl\n      });\n    }\n    const params = getHashQueryParams(this.state.replaceUrlOnRedirect);\n    if (params.sessionId) {\n      this.state.store.set(\"sessionId\", params.sessionId);\n    }\n    if (this.state.uxMode === UX_MODE.SESSIONLESS_REDIRECT) {\n      this._syncState(params);\n    } else {\n      this._syncState(await this._getData());\n    }\n    if (this.state.support3PC) {\n      const res = await this._check3PCSupport();\n      this.state.support3PC = !!res.support3PC;\n    }\n  }\n  async updateOriginData() {\n    const filteredOriginData = JSON.parse(JSON.stringify(this.state.originData));\n    Object.keys(filteredOriginData).forEach(key => {\n      if (filteredOriginData[key] === \"\") delete filteredOriginData[key];\n    });\n    const [whitelist, whiteLabel] = await Promise.all([this.getWhitelist(), this.getWhiteLabel()]);\n    this._syncState({\n      originData: _objectSpread(_objectSpread({}, whitelist), filteredOriginData),\n      whiteLabel: _objectSpread(_objectSpread({}, whiteLabel), this.state.whiteLabel)\n    });\n  }\n  async getWhitelist() {\n    try {\n      const {\n        clientId\n      } = this.state;\n      if (!clientId) {\n        throw new Error(\"unspecified clientId\");\n      }\n      const url = new URL(\"https://api.developer.tor.us/whitelist\");\n      url.searchParams.append(\"project_id\", this.state.clientId);\n      url.searchParams.append(\"network\", this.state.network);\n      const res = await get(url.href);\n      return res.signed_urls;\n    } catch (_) {\n      // fail silently\n      return {};\n    }\n  }\n  async getWhiteLabel() {\n    try {\n      const {\n        clientId\n      } = this.state;\n      if (!clientId) {\n        throw new Error(\"unspecified clientId\");\n      }\n      const url = new URL(\"https://api.developer.tor.us/whitelabel\");\n      url.searchParams.append(\"project_id\", this.state.clientId);\n      const res = await get(url.href);\n      return res.whiteLabel;\n    } catch (_) {\n      // fail silently\n      return {};\n    }\n  }\n  async login(params) {\n    if (!params || !params.loginProvider) {\n      throw new Error(`Please pass loginProvider in params`);\n    }\n    return this._selectedLogin(params);\n  }\n  async _selectedLogin(params) {\n    const defaultParams = {\n      redirectUrl: this.state.redirectUrl\n    };\n    const loginParams = _objectSpread(_objectSpread({\n      loginProvider: params.loginProvider\n    }, defaultParams), params);\n    const res = await this.request({\n      method: OPENLOGIN_METHOD.LOGIN,\n      allowedInteractions: [UX_MODE.REDIRECT, UX_MODE.POPUP],\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      params: [loginParams]\n    });\n    this.state.privKey = res.privKey;\n    if (res.store) {\n      this._syncState(res);\n    } else if (this.state.privKey && this.state.support3PC) {\n      this._syncState(await this._getData());\n    }\n    return {\n      privKey: this.privKey\n    };\n  }\n  async logout() {\n    let logoutParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const params = {};\n    // defaults\n    params.redirectUrl = this.state.redirectUrl;\n    params._clientId = this.state.clientId;\n    params.sessionId = this.state.store.get(\"sessionId\");\n    if (logoutParams.clientId) {\n      params._clientId = logoutParams.clientId;\n    }\n    if (logoutParams.redirectUrl !== undefined) {\n      params.redirectUrl = logoutParams.redirectUrl;\n    }\n    const allowedInteractions = this.state.uxMode === UX_MODE.SESSIONLESS_REDIRECT ? [ALLOWED_INTERACTIONS.REDIRECT] : [ALLOWED_INTERACTIONS.JRPC];\n    const res = await this.request({\n      method: OPENLOGIN_METHOD.LOGOUT,\n      params: [params],\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      allowedInteractions\n    });\n    this._syncState({\n      privKey: \"\",\n      coreKitKey: \"\",\n      walletKey: \"\",\n      oAuthPrivateKey: \"\",\n      tKey: \"\",\n      store: {\n        name: \"\",\n        profileImage: \"\",\n        dappShare: \"\",\n        idToken: \"\",\n        oAuthIdToken: \"\",\n        oAuthAccessToken: \"\",\n        sessionId: \"\",\n        sessionNamespace: \"\",\n        appState: \"\",\n        email: \"\"\n      }\n    });\n    return res;\n  }\n  async request(args) {\n    var _params$0$redirectUrl;\n    const pid = randomId();\n    let {\n      params\n    } = args;\n    // Note: _origin is added later in postMessageStream for jrpc requests\n    // do not add it here since its used for checking postMessage constraints\n    const session = {};\n    if (params.length !== 1) throw new Error(\"request params array should have only one element\");\n    const {\n      startUrl,\n      popupUrl,\n      method,\n      allowedInteractions\n    } = args;\n    if (allowedInteractions.length === 0) throw new Error(\"no allowed interactions\");\n    if (this.state.clientId) {\n      session._clientId = this.state.clientId;\n    }\n    if (this.state.sessionNamespace) {\n      session._sessionNamespace = this.state.sessionNamespace;\n    }\n    if (this.privKey) {\n      const userData = {\n        clientId: session._clientId,\n        timestamp: Date.now().toString()\n      };\n      const sig = await sign(Buffer.from(this.privKey, \"hex\"), Buffer.from(keccak(\"keccak256\").update(JSON.stringify(userData)).digest(\"hex\"), \"hex\"));\n      session._user = getPublic(Buffer.from(this.privKey, \"hex\")).toString(\"hex\");\n      session._userSig = base64url.encode(sig);\n      session._userData = userData;\n    }\n    session._originData = this.state.originData;\n    session._whiteLabelData = this.state.whiteLabel;\n    session._loginConfig = this.state.loginConfig;\n    session._sessionId = this.state.store.get(\"sessionId\");\n    session._webauthnTransports = this.state.webauthnTransports;\n    if (!session._sessionId) {\n      const sessionId = randomId();\n      session._sessionId = sessionId;\n      this.state.store.set(\"sessionId\", sessionId);\n    }\n    // add in session data (allow overrides)\n    params = [_objectSpread(_objectSpread({}, session), params[0])];\n    // use JRPC where possible\n    if (allowedInteractions.includes(ALLOWED_INTERACTIONS.JRPC)) {\n      return this._jrpcRequest({\n        method,\n        params\n      });\n    }\n    // set origin\n    params[0]._origin = new URL((_params$0$redirectUrl = params[0].redirectUrl) !== null && _params$0$redirectUrl !== void 0 ? _params$0$redirectUrl : this.state.redirectUrl).origin;\n    // preset params\n    if (this.state.support3PC) {\n      // set params first if 3PC supported\n      await this._setPIDData(pid, params);\n      // eslint-disable-next-line require-atomic-updates\n      params = [{}];\n    }\n    if (!startUrl || !popupUrl) {\n      throw new Error(\"no url for redirect / popup flow\");\n    }\n    // method and pid are always in URL hash params\n    // convert params from JSON to base64\n    if (this.state.uxMode === UX_MODE.REDIRECT || this.state.uxMode === UX_MODE.SESSIONLESS_REDIRECT) {\n      // if redirects preferred, check for redirect flows first, then check for popup flow\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n        // give time for synchronous methods to complete before redirect\n        setTimeout(() => {\n          window.location.href = constructURL({\n            baseURL: startUrl,\n            hash: {\n              b64Params: jsonToBase64(params[0]),\n              _pid: pid,\n              _method: method\n            }\n          });\n        }, 50);\n        return {};\n      }\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n        const u = new URL(constructURL({\n          baseURL: popupUrl,\n          hash: {\n            b64Params: jsonToBase64(params[0]),\n            _pid: pid,\n            _method: method\n          }\n        }));\n        const windowRef = window.open(u.toString(), \"_blank\", getPopupFeatures());\n        return awaitReq(pid, windowRef);\n      }\n    } else {\n      // if popups preferred, check for popup flows first, then check for redirect flow\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n        const u = new URL(constructURL({\n          baseURL: popupUrl,\n          hash: {\n            b64Params: jsonToBase64(params[0]),\n            _pid: pid,\n            _method: method\n          }\n        }));\n        const windowRef = window.open(u.toString(), \"_blank\", getPopupFeatures());\n        return awaitReq(pid, windowRef);\n      }\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n        // give time for synchronous methods to complete before redirect\n        setTimeout(() => {\n          window.location.href = constructURL({\n            baseURL: startUrl,\n            hash: {\n              b64Params: jsonToBase64(params[0]),\n              _pid: pid,\n              _method: method\n            }\n          });\n        }, 50);\n        return null;\n      }\n    }\n    throw new Error(\"no matching allowed interactions\");\n  }\n  async _initIFrame(src) {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(modalDOMElementID);\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      loglevel.info(\"already initialized, removing previous modal iframe\");\n    }\n    this.iframeElem = htmlToElement(`<iframe\n        id=${modalDOMElementID}\n        class=\"torusIframe\"\n        src=\"${src}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%;\n        height: 100%; border: none; border-radius: 0; z-index: 99999\"\n      ></iframe>`);\n    document.body.appendChild(this.iframeElem);\n    return new Promise(resolve => {\n      this.iframeElem.onload = () => {\n        resolve();\n      };\n    });\n  }\n  async _jrpcRequest(args) {\n    // await this.initialized;\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw new Error(\"invalid request args\");\n    }\n    const {\n      method,\n      params\n    } = args;\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw new Error(\"invalid request method\");\n    }\n    if (params === undefined || !Array.isArray(params)) {\n      throw new Error(\"invalid request params\");\n    }\n    if (params.length === 0) {\n      params.push({});\n    }\n    return new Promise((resolve, reject) => {\n      this.provider._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  async _check3PCSupport() {\n    return this._jrpcRequest({\n      method: OPENLOGIN_METHOD.CHECK_3PC_SUPPORT,\n      params: [{\n        _originData: this.state.originData\n      }]\n    });\n  }\n  async _setPIDData(pid, data) {\n    await this.request({\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n      method: OPENLOGIN_METHOD.SET_PID_DATA,\n      params: [{\n        pid,\n        data: data[0]\n      }]\n    });\n  }\n  async _getData() {\n    if (this.state.uxMode === UX_MODE.SESSIONLESS_REDIRECT) return {};\n    return this.request({\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n      method: OPENLOGIN_METHOD.GET_DATA,\n      params: [{}]\n    });\n  }\n  _syncState(newState) {\n    if (newState.store) {\n      if (typeof newState.store !== \"object\") {\n        throw new Error(\"expected store to be an object\");\n      }\n      Object.keys(newState.store).forEach(key => {\n        this.state.store.set(key, newState.store[key]);\n      });\n    }\n    const {\n      store\n    } = this.state;\n    this.state = _objectSpread(_objectSpread(_objectSpread({}, this.state), newState), {}, {\n      store\n    });\n  }\n  async encrypt(message, privateKey) {\n    let privKey = privateKey;\n    if (!privKey) {\n      privKey = this.privKey;\n    }\n    // validations\n    if (!/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n      if (privKey === \"\" || privKey === undefined) {\n        throw new Error(\"private key cannot be empty\");\n      } else {\n        throw new Error(\"invalid private key in encrypt\");\n      }\n    }\n    return encrypt(getPublic(Buffer.from(privKey, \"hex\")), message);\n  }\n  async decrypt(ciphertext, privateKey) {\n    let privKey = privateKey;\n    if (!privKey) {\n      privKey = this.privKey;\n    }\n    // validations\n    if (!/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n      if (privKey === \"\" || privKey === undefined) {\n        throw new Error(\"private key cannot be empty\");\n      } else {\n        throw new Error(\"invalid private key in decrypt\");\n      }\n    }\n    return decrypt(Buffer.from(privKey, \"hex\"), ciphertext);\n  }\n  async getUserInfo() {\n    if (this.privKey) {\n      const storeData = this.state.store.getStore();\n      const userInfo = {\n        email: storeData.email || \"\",\n        name: storeData.name || \"\",\n        profileImage: storeData.profileImage || \"\",\n        aggregateVerifier: storeData.aggregateVerifier || \"\",\n        verifier: storeData.verifier || \"\",\n        verifierId: storeData.verifierId || \"\",\n        typeOfLogin: storeData.typeOfLogin || \"\",\n        dappShare: storeData.dappShare || \"\",\n        idToken: storeData.idToken || \"\",\n        oAuthIdToken: storeData.oAuthIdToken || \"\",\n        oAuthAccessToken: storeData.oAuthAccessToken || \"\"\n      };\n      return userInfo;\n    }\n    throw new Error(\"user should be logged in to fetch userInfo\");\n  }\n  async getEncodedLoginUrl(loginParams) {\n    const {\n      redirectUrl\n    } = loginParams;\n    const {\n      clientId\n    } = this.state;\n    if (!this.state.originData[origin]) {\n      await this.updateOriginData();\n    }\n    const dataObject = _objectSpread({\n      _clientId: clientId,\n      _origin: new URL(redirectUrl).origin,\n      _originData: this.state.originData,\n      redirectUrl\n    }, loginParams);\n    const b64Params = jsonToBase64(dataObject);\n    const hashParams = {\n      b64Params,\n      _method: \"openlogin_login\"\n    };\n    return constructURL({\n      baseURL: `${this.state.iframeUrl}/start`,\n      hash: hashParams\n    });\n  }\n  async _cleanup() {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(modalDOMElementID);\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      this.iframeElem = null;\n    }\n    this.provider.cleanup();\n  }\n}\n\nexport { ALLOWED_INTERACTIONS, LOGIN_PROVIDER, MFA_LEVELS, OPENLOGIN_METHOD, OPENLOGIN_NETWORK, OpenLoginStore, Provider, SUPPORTED_KEY_CURVES, UX_MODE, awaitReq, constructURL, OpenLogin as default, documentReady, getHashQueryParams, getPopupFeatures, htmlToElement, localStorageAvailable, log as loglevel, modalDOMElementID, preloadIframe, sessionStorageAvailable, storageAvailable, storeKey, whitelistUrl };\n//# sourceMappingURL=openlogin.esm.js.map\n"]},"metadata":{},"sourceType":"module"}