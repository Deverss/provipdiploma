{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Watch = void 0;\n\nclass Watch {\n  constructor() {\n    this.timestamps = new Map();\n  }\n\n  start(label) {\n    if (this.timestamps.has(label)) {\n      throw new Error(`Watch already started for label: ${label}`);\n    }\n\n    this.timestamps.set(label, {\n      started: Date.now()\n    });\n  }\n\n  stop(label) {\n    const timestamp = this.get(label);\n\n    if (typeof timestamp.elapsed !== \"undefined\") {\n      throw new Error(`Watch already stopped for label: ${label}`);\n    }\n\n    const elapsed = Date.now() - timestamp.started;\n    this.timestamps.set(label, {\n      started: timestamp.started,\n      elapsed\n    });\n  }\n\n  get(label) {\n    const timestamp = this.timestamps.get(label);\n\n    if (typeof timestamp === \"undefined\") {\n      throw new Error(`No timestamp found for label: ${label}`);\n    }\n\n    return timestamp;\n  }\n\n  elapsed(label) {\n    const timestamp = this.get(label);\n    const elapsed = timestamp.elapsed || Date.now() - timestamp.started;\n    return elapsed;\n  }\n\n}\n\nexports.Watch = Watch;\nexports.default = Watch;","map":{"version":3,"sources":["../../src/watch.ts"],"names":[],"mappings":";;;;;;;AAEA,MAAa,KAAb,CAAkB;AAAlB,EAAA,WAAA,GAAA;AACS,SAAA,UAAA,GAAa,IAAI,GAAJ,EAAb;AA+BR;;AA7BQ,EAAA,KAAK,CAAC,KAAD,EAAc;AACxB,QAAI,KAAK,UAAL,CAAgB,GAAhB,CAAoB,KAApB,CAAJ,EAAgC;AAC9B,YAAM,IAAI,KAAJ,CAAU,oCAAoC,KAAK,EAAnD,CAAN;AACD;;AACD,SAAK,UAAL,CAAgB,GAAhB,CAAoB,KAApB,EAA2B;AAAE,MAAA,OAAO,EAAE,IAAI,CAAC,GAAL;AAAX,KAA3B;AACD;;AAEM,EAAA,IAAI,CAAC,KAAD,EAAc;AACvB,UAAM,SAAS,GAAG,KAAK,GAAL,CAAS,KAAT,CAAlB;;AACA,QAAI,OAAO,SAAS,CAAC,OAAjB,KAA6B,WAAjC,EAA8C;AAC5C,YAAM,IAAI,KAAJ,CAAU,oCAAoC,KAAK,EAAnD,CAAN;AACD;;AACD,UAAM,OAAO,GAAG,IAAI,CAAC,GAAL,KAAa,SAAS,CAAC,OAAvC;AACA,SAAK,UAAL,CAAgB,GAAhB,CAAoB,KAApB,EAA2B;AAAE,MAAA,OAAO,EAAE,SAAS,CAAC,OAArB;AAA8B,MAAA;AAA9B,KAA3B;AACD;;AAEM,EAAA,GAAG,CAAC,KAAD,EAAc;AACtB,UAAM,SAAS,GAAG,KAAK,UAAL,CAAgB,GAAhB,CAAoB,KAApB,CAAlB;;AACA,QAAI,OAAO,SAAP,KAAqB,WAAzB,EAAsC;AACpC,YAAM,IAAI,KAAJ,CAAU,iCAAiC,KAAK,EAAhD,CAAN;AACD;;AACD,WAAO,SAAP;AACD;;AAEM,EAAA,OAAO,CAAC,KAAD,EAAc;AAC1B,UAAM,SAAS,GAAG,KAAK,GAAL,CAAS,KAAT,CAAlB;AACA,UAAM,OAAO,GAAG,SAAS,CAAC,OAAV,IAAqB,IAAI,CAAC,GAAL,KAAa,SAAS,CAAC,OAA5D;AACA,WAAO,OAAP;AACD;;AA/Be;;AAAlB,OAAA,CAAA,KAAA,GAAA,KAAA;AAkCA,OAAA,CAAA,OAAA,GAAe,KAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Watch = void 0;\nclass Watch {\n    constructor() {\n        this.timestamps = new Map();\n    }\n    start(label) {\n        if (this.timestamps.has(label)) {\n            throw new Error(`Watch already started for label: ${label}`);\n        }\n        this.timestamps.set(label, { started: Date.now() });\n    }\n    stop(label) {\n        const timestamp = this.get(label);\n        if (typeof timestamp.elapsed !== \"undefined\") {\n            throw new Error(`Watch already stopped for label: ${label}`);\n        }\n        const elapsed = Date.now() - timestamp.started;\n        this.timestamps.set(label, { started: timestamp.started, elapsed });\n    }\n    get(label) {\n        const timestamp = this.timestamps.get(label);\n        if (typeof timestamp === \"undefined\") {\n            throw new Error(`No timestamp found for label: ${label}`);\n        }\n        return timestamp;\n    }\n    elapsed(label) {\n        const timestamp = this.get(label);\n        const elapsed = timestamp.elapsed || Date.now() - timestamp.started;\n        return elapsed;\n    }\n}\nexports.Watch = Watch;\nexports.default = Watch;\n//# sourceMappingURL=watch.js.map"]},"metadata":{},"sourceType":"script"}